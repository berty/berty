{
  "swagger": "2.0",
  "info": {
    "title": "messengertypes.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/berty.messenger.v1/MessengerService/AccountGet": {
      "post": {
        "operationId": "MessengerService_AccountGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccountGetReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AccountGetRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/AccountUpdate": {
      "post": {
        "operationId": "MessengerService_AccountUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccountUpdateReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AccountUpdateRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/BannerQuote": {
      "post": {
        "summary": "BannerQuote returns the quote of the day.",
        "operationId": "MessengerService_BannerQuote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BannerQuoteReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BannerQuoteRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ContactAccept": {
      "post": {
        "operationId": "MessengerService_ContactAccept",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ContactAcceptReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ContactAcceptRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ContactRequest": {
      "post": {
        "operationId": "MessengerService_ContactRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ContactRequestReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ContactRequestRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationClose": {
      "post": {
        "operationId": "MessengerService_ConversationClose",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConversationCloseReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationCloseRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationCreate": {
      "post": {
        "operationId": "MessengerService_ConversationCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConversationCreateReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationCreateRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationGet": {
      "post": {
        "operationId": "MessengerService_ConversationGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConversationGetReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationGetRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationJoin": {
      "post": {
        "operationId": "MessengerService_ConversationJoin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConversationJoinReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationJoinRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationLoad": {
      "post": {
        "operationId": "MessengerService_ConversationLoad",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConversationLoadReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationLoadRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationOpen": {
      "post": {
        "operationId": "MessengerService_ConversationOpen",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConversationOpenReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationOpenRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ConversationStream": {
      "post": {
        "operationId": "MessengerService_ConversationStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ConversationStreamReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1ConversationStreamReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConversationStreamRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/DevShareInstanceBertyID": {
      "post": {
        "summary": "DevShareInstanceBertyID shares your Berty ID on a dev channel.\nTODO: remove for public.",
        "operationId": "MessengerService_DevShareInstanceBertyID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DevShareInstanceBertyIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DevShareInstanceBertyIDRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/DevStreamLogs": {
      "post": {
        "summary": "DevStreamLogs streams logs from the ring-buffer.",
        "operationId": "MessengerService_DevStreamLogs",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1DevStreamLogsReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1DevStreamLogsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DevStreamLogsRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/EchoDuplexTest": {
      "post": {
        "summary": "Use to test duplex stream.",
        "operationId": "MessengerService_EchoDuplexTest",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1EchoDuplexTestReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1EchoDuplexTestReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EchoDuplexTestRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/EchoTest": {
      "post": {
        "summary": "Use to test stream.",
        "operationId": "MessengerService_EchoTest",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1EchoTestReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1EchoTestReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EchoTestRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/EventStream": {
      "post": {
        "operationId": "MessengerService_EventStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1EventStreamReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1EventStreamReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EventStreamRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/InstanceExportData": {
      "post": {
        "summary": "InstanceExportData exports instance data",
        "operationId": "MessengerService_InstanceExportData",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/bertymessengerv1InstanceExportDataReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of bertymessengerv1InstanceExportDataReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bertymessengerv1InstanceExportDataRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/InstanceShareableBertyID": {
      "post": {
        "summary": "InstanceShareableBertyID returns a Berty ID that can be shared as a string, QR code or deep link.",
        "operationId": "MessengerService_InstanceShareableBertyID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InstanceShareableBertyIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InstanceShareableBertyIDRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/Interact": {
      "post": {
        "operationId": "MessengerService_Interact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InteractReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InteractRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/MediaGetRelated": {
      "post": {
        "summary": "MediaGetRelated Gets previous/next media to be played after current",
        "operationId": "MessengerService_MediaGetRelated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MediaGetRelatedReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MediaGetRelatedRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/MediaPrepare": {
      "post": {
        "summary": "MediaPrepare allows to upload a file and returns a cid to attach to messages",
        "operationId": "MessengerService_MediaPrepare",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MediaPrepareReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MediaPrepareRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/MediaRetrieve": {
      "post": {
        "summary": "MediaRetrieve allows to download a file attached to a message",
        "operationId": "MessengerService_MediaRetrieve",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1MediaRetrieveReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1MediaRetrieveReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MediaRetrieveRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/MessageSearch": {
      "post": {
        "summary": "MessageSearch",
        "operationId": "MessengerService_MessageSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MessageSearchReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MessageSearchRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/NotificationConversationSetEnabled": {
      "post": {
        "summary": "NotificationConversationSetEnabled enables or disables notifications for a specific conversation",
        "operationId": "MessengerService_NotificationConversationSetEnabled",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NotificationConversationSetEnabledReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1NotificationConversationSetEnabledRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/NotificationSetEnabled": {
      "post": {
        "summary": "NotificationSetEnabled enables or disables all notifications",
        "operationId": "MessengerService_NotificationSetEnabled",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NotificationSetEnabledReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1NotificationSetEnabledRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ParseDeepLink": {
      "post": {
        "summary": "ParseDeepLink parses a link in the form of berty://xxx or https://berty.tech/id# and returns a structure\nthat can be used to display information.\nThis action is read-only.",
        "operationId": "MessengerService_ParseDeepLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ParseDeepLinkReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ParseDeepLinkRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/PushReceive": {
      "post": {
        "summary": "PushReceive handles a push payload, decrypts it if possible, adds it to the local store",
        "operationId": "MessengerService_PushReceive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bertymessengerv1PushReceiveReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bertymessengerv1PushReceiveRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/PushSetAutoShare": {
      "post": {
        "summary": "PushSetAutoShare Sets whether new groups should receive our push token automatically or not",
        "operationId": "MessengerService_PushSetAutoShare",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PushSetAutoShareReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PushSetAutoShareRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ReplicationServiceRegisterGroup": {
      "post": {
        "summary": "ReplicationServiceRegisterGroup Asks a replication service to distribute a group contents",
        "operationId": "MessengerService_ReplicationServiceRegisterGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bertymessengerv1ReplicationServiceRegisterGroupReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bertymessengerv1ReplicationServiceRegisterGroupRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ReplicationSetAutoEnable": {
      "post": {
        "summary": "ReplicationSetAutoEnable Sets whether new groups should be replicated automatically or not",
        "operationId": "MessengerService_ReplicationSetAutoEnable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReplicationSetAutoEnableReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReplicationSetAutoEnableRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/SendContactRequest": {
      "post": {
        "summary": "SendContactRequest takes the payload received from ParseDeepLink and send a contact request using the Berty Protocol.",
        "operationId": "MessengerService_SendContactRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendContactRequestReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendContactRequestRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/SendReplyOptions": {
      "post": {
        "summary": "SendReplyOptions sends a list of prefilled response options to a group.",
        "operationId": "MessengerService_SendReplyOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendReplyOptionsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendReplyOptionsRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ServicesTokenList": {
      "post": {
        "summary": "ServicesTokenList Retrieves the list of service server tokens",
        "operationId": "MessengerService_ServicesTokenList",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ServicesTokenListReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1ServicesTokenListReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ServicesTokenListRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/ShareableBertyGroup": {
      "post": {
        "summary": "ShareableBertyGroup returns a Berty Group that can be shared as a string, QR code or deep link.",
        "operationId": "MessengerService_ShareableBertyGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ShareableBertyGroupReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ShareableBertyGroupRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/SystemInfo": {
      "post": {
        "summary": "SystemInfo returns runtime information.",
        "operationId": "MessengerService_SystemInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bertymessengerv1SystemInfoReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bertymessengerv1SystemInfoRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/TyberHostAttach": {
      "post": {
        "summary": "TyberHostAttach",
        "operationId": "MessengerService_TyberHostAttach",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TyberHostAttachReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TyberHostAttachRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    },
    "/berty.messenger.v1/MessengerService/TyberHostSearch": {
      "post": {
        "summary": "TyberHostSearch",
        "operationId": "MessengerService_TyberHostSearch",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1TyberHostSearchReply"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1TyberHostSearchReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TyberHostSearchRequest"
            }
          }
        ],
        "tags": [
          "MessengerService"
        ]
      }
    }
  },
  "definitions": {
    "AppMessageReplyOptions": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ReplyOption"
          }
        }
      }
    },
    "BertyLinkBertyMessageRef": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string"
        },
        "group_pk": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        }
      }
    },
    "BertyLinkEncrypted": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/BertyLinkKind",
          "description": "kind is a clear representation of the unencrypted link type."
        },
        "nonce": {
          "type": "string",
          "format": "byte",
          "description": "nonce is a clear field used by scrypt as \"salt\" to derive the passphrase and\nalso used by cipher.NewCTR as \"iv\" to initialize a stream cipher."
        },
        "display_name": {
          "type": "string",
          "description": "display_name is an optional clear representation of the display name."
        },
        "checksum": {
          "type": "string",
          "format": "byte",
          "description": "checksum is an optional field used to check if the decryption was successful.\nthe length is customizable (SHAKE256). a longer checksum means less conflicts.\nhaving more conflicts may be bad in term of UX, but make it easier for an attacker\nto run an offline bruteforce."
        },
        "contact_public_rendezvous_seed": {
          "type": "string",
          "format": "byte"
        },
        "contact_account_pk": {
          "type": "string",
          "format": "byte"
        },
        "group_public_key": {
          "type": "string",
          "format": "byte"
        },
        "group_secret": {
          "type": "string",
          "format": "byte"
        },
        "group_secret_sig": {
          "type": "string",
          "format": "byte"
        },
        "group_type": {
          "$ref": "#/definitions/v1GroupType"
        },
        "group_sign_pub": {
          "type": "string",
          "format": "byte"
        },
        "group_link_key_sig": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Encrypted is a clear structure containing clear and encrypted fields.\n\nWe prefer to use a clear struct with encrypted fields instead of a simple\nencrypted struct, to improves chances of having a valid structure even\nwith an invalid passphase. This will force an attacker to have more resources\nto test more false-positive guesses."
    },
    "BertyLinkKind": {
      "type": "string",
      "enum": [
        "UnknownKind",
        "ContactInviteV1Kind",
        "GroupV1Kind",
        "EncryptedV1Kind",
        "MessageV1Kind"
      ],
      "default": "UnknownKind"
    },
    "InteractionReactionView": {
      "type": "object",
      "properties": {
        "emoji": {
          "type": "string"
        },
        "own_state": {
          "type": "boolean"
        },
        "count": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "OrbitDBReplicationStatus": {
      "type": "object",
      "properties": {
        "progress": {
          "type": "string",
          "format": "int64"
        },
        "maximum": {
          "type": "string",
          "format": "int64"
        },
        "buffered": {
          "type": "string",
          "format": "int64"
        },
        "queued": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SystemInfoDB": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "string",
          "format": "int64"
        },
        "contacts": {
          "type": "string",
          "format": "int64"
        },
        "conversations": {
          "type": "string",
          "format": "int64"
        },
        "interactions": {
          "type": "string",
          "format": "int64"
        },
        "members": {
          "type": "string",
          "format": "int64"
        },
        "devices": {
          "type": "string",
          "format": "int64"
        },
        "service_tokens": {
          "type": "string",
          "format": "int64"
        },
        "conversation_replication_info": {
          "type": "string",
          "format": "int64"
        },
        "reactions": {
          "type": "string",
          "format": "int64"
        },
        "metadata_events": {
          "type": "string",
          "format": "int64"
        },
        "medias": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SystemInfoMessenger": {
      "type": "object",
      "properties": {
        "process": {
          "$ref": "#/definitions/SystemInfoProcess"
        },
        "warns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "protocol_in_same_process": {
          "type": "boolean"
        },
        "db": {
          "$ref": "#/definitions/SystemInfoDB"
        }
      }
    },
    "SystemInfoOrbitDB": {
      "type": "object",
      "properties": {
        "account_metadata": {
          "$ref": "#/definitions/OrbitDBReplicationStatus"
        }
      }
    },
    "SystemInfoP2P": {
      "type": "object",
      "properties": {
        "connected_peers": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SystemInfoProcess": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "vcs_ref": {
          "type": "string"
        },
        "uptime_ms": {
          "type": "string",
          "format": "int64"
        },
        "user_cpu_time_ms": {
          "type": "string",
          "format": "int64"
        },
        "system_cpu_time_ms": {
          "type": "string",
          "format": "int64"
        },
        "started_at": {
          "type": "string",
          "format": "int64"
        },
        "rlimit_cur": {
          "type": "string",
          "format": "uint64"
        },
        "num_goroutine": {
          "type": "string",
          "format": "int64"
        },
        "nofile": {
          "type": "string",
          "format": "int64"
        },
        "too_many_open_files": {
          "type": "boolean"
        },
        "num_cpu": {
          "type": "string",
          "format": "int64"
        },
        "go_version": {
          "type": "string"
        },
        "operating_system": {
          "type": "string"
        },
        "host_name": {
          "type": "string"
        },
        "arch": {
          "type": "string"
        },
        "rlimit_max": {
          "type": "string",
          "format": "uint64"
        },
        "pid": {
          "type": "string",
          "format": "int64"
        },
        "ppid": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "string",
          "format": "int64"
        },
        "uid": {
          "type": "string",
          "format": "int64"
        },
        "working_dir": {
          "type": "string"
        },
        "system_username": {
          "type": "string"
        }
      }
    },
    "bertymessengerv1Account": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "service_tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bertymessengerv1ServiceToken"
          }
        },
        "replicate_new_groups_automatically": {
          "type": "boolean"
        },
        "avatar_cid": {
          "type": "string"
        },
        "auto_share_push_token_flag": {
          "type": "boolean"
        },
        "device_push_token": {
          "type": "string",
          "format": "byte"
        },
        "device_push_server": {
          "type": "string",
          "format": "byte"
        },
        "should_notify": {
          "type": "boolean"
        }
      }
    },
    "bertymessengerv1InstanceExportDataReply": {
      "type": "object",
      "properties": {
        "exported_data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "bertymessengerv1InstanceExportDataRequest": {
      "type": "object"
    },
    "bertymessengerv1PushReceiveReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1PushReceivedData"
        }
      }
    },
    "bertymessengerv1PushReceiveRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "bertymessengerv1ReplicationServiceRegisterGroupReply": {
      "type": "object"
    },
    "bertymessengerv1ReplicationServiceRegisterGroupRequest": {
      "type": "object",
      "properties": {
        "token_id": {
          "type": "string"
        },
        "conversation_public_key": {
          "type": "string"
        }
      }
    },
    "bertymessengerv1ServiceToken": {
      "type": "object",
      "properties": {
        "account_pk": {
          "type": "string"
        },
        "token_id": {
          "type": "string"
        },
        "service_type": {
          "type": "string"
        },
        "authentication_url": {
          "type": "string"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "bertymessengerv1SystemInfoReply": {
      "type": "object",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/bertyprotocolv1SystemInfoReply"
        },
        "messenger": {
          "$ref": "#/definitions/SystemInfoMessenger"
        }
      }
    },
    "bertymessengerv1SystemInfoRequest": {
      "type": "object"
    },
    "bertyprotocolv1PushReceiveReply": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/v1OutOfStoreMessage"
        },
        "cleartext": {
          "type": "string",
          "format": "byte"
        },
        "group_public_key": {
          "type": "string",
          "format": "byte"
        },
        "already_received": {
          "type": "boolean"
        }
      }
    },
    "bertyprotocolv1ServiceToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "authentication_url": {
          "type": "string"
        },
        "supported_services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ServiceTokenSupportedService"
          }
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "bertyprotocolv1SystemInfoReply": {
      "type": "object",
      "properties": {
        "process": {
          "$ref": "#/definitions/SystemInfoProcess"
        },
        "p2p": {
          "$ref": "#/definitions/SystemInfoP2P"
        },
        "orbitdb": {
          "$ref": "#/definitions/SystemInfoOrbitDB"
        },
        "warns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AccountGetReply": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/bertymessengerv1Account"
        }
      }
    },
    "v1AccountGetRequest": {
      "type": "object"
    },
    "v1AccountUpdateReply": {
      "type": "object"
    },
    "v1AccountUpdateRequest": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "avatar_cid": {
          "type": "string"
        }
      }
    },
    "v1AppMessageType": {
      "type": "string",
      "enum": [
        "Undefined",
        "TypeUserMessage",
        "TypeUserReaction",
        "TypeGroupInvitation",
        "TypeSetGroupInfo",
        "TypeSetUserInfo",
        "TypeAcknowledge",
        "TypeReplyOptions",
        "TypeMonitorMetadata"
      ],
      "default": "Undefined",
      "title": "- TypeMonitorMetadata: these shouldn't be sent on the network"
    },
    "v1BannerQuoteReply": {
      "type": "object",
      "properties": {
        "quote": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      }
    },
    "v1BannerQuoteRequest": {
      "type": "object",
      "properties": {
        "random": {
          "type": "boolean"
        }
      }
    },
    "v1BertyGroup": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1Group"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "v1BertyID": {
      "type": "object",
      "properties": {
        "public_rendezvous_seed": {
          "type": "string",
          "format": "byte"
        },
        "account_pk": {
          "type": "string",
          "format": "byte"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "v1BertyLink": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/BertyLinkKind"
        },
        "berty_id": {
          "$ref": "#/definitions/v1BertyID"
        },
        "berty_group": {
          "$ref": "#/definitions/v1BertyGroup"
        },
        "berty_message_ref": {
          "$ref": "#/definitions/BertyLinkBertyMessageRef"
        },
        "encrypted": {
          "$ref": "#/definitions/BertyLinkEncrypted"
        }
      }
    },
    "v1Contact": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "conversation_public_key": {
          "type": "string"
        },
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "state": {
          "$ref": "#/definitions/v1ContactState"
        },
        "display_name": {
          "type": "string"
        },
        "avatar_cid": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "int64"
        },
        "sent_date": {
          "type": "string",
          "format": "int64",
          "title": "specific to outgoing requests"
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Device"
          }
        },
        "info_date": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ContactAcceptReply": {
      "type": "object"
    },
    "v1ContactAcceptRequest": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        }
      }
    },
    "v1ContactRequestReply": {
      "type": "object"
    },
    "v1ContactRequestRequest": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "passphrase": {
          "type": "string",
          "format": "byte",
          "title": "optional passphase to decrypt the link"
        }
      }
    },
    "v1ContactState": {
      "type": "string",
      "enum": [
        "Undefined",
        "IncomingRequest",
        "OutgoingRequestEnqueued",
        "OutgoingRequestSent",
        "Accepted"
      ],
      "default": "Undefined"
    },
    "v1Conversation": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ConversationType"
        },
        "is_open": {
          "type": "boolean"
        },
        "display_name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "unread_count": {
          "type": "integer",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "int64",
          "title": "last_update is used to sort conversations, it should be updated for each \"visible\" event"
        },
        "contact_public_key": {
          "type": "string",
          "title": "specific to ContactType conversations"
        },
        "contact": {
          "$ref": "#/definitions/v1Contact",
          "title": "specific to ContactType conversations"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Member"
          },
          "title": "specific to MultiMemberType conversations"
        },
        "account_member_public_key": {
          "type": "string"
        },
        "local_device_public_key": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "int64"
        },
        "reply_options_cid": {
          "type": "string"
        },
        "reply_options": {
          "$ref": "#/definitions/v1Interaction"
        },
        "replication_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ConversationReplicationInfo"
          }
        },
        "avatar_cid": {
          "type": "string"
        },
        "info_date": {
          "type": "string",
          "format": "int64",
          "title": "info_date is used when SetGroupInfo is called"
        },
        "shared_push_token_identifier": {
          "type": "string"
        },
        "should_notify": {
          "type": "boolean"
        }
      }
    },
    "v1ConversationCloseReply": {
      "type": "object"
    },
    "v1ConversationCloseRequest": {
      "type": "object",
      "properties": {
        "group_pk": {
          "type": "string"
        }
      }
    },
    "v1ConversationCreateReply": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        }
      }
    },
    "v1ConversationCreateRequest": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "contacts_to_invite": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ConversationGetReply": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        }
      }
    },
    "v1ConversationGetRequest": {
      "type": "object",
      "properties": {
        "group_pk": {
          "type": "string"
        }
      }
    },
    "v1ConversationJoinReply": {
      "type": "object"
    },
    "v1ConversationJoinRequest": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "passphrase": {
          "type": "string",
          "format": "byte",
          "title": "optional passphase to decrypt the link"
        }
      }
    },
    "v1ConversationLoadReply": {
      "type": "object"
    },
    "v1ConversationLoadRequest": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/v1PaginatedInteractionsOptions"
        }
      }
    },
    "v1ConversationOpenReply": {
      "type": "object"
    },
    "v1ConversationOpenRequest": {
      "type": "object",
      "properties": {
        "group_pk": {
          "type": "string"
        }
      }
    },
    "v1ConversationReplicationInfo": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        },
        "conversation_public_key": {
          "type": "string"
        },
        "member_public_key": {
          "type": "string"
        },
        "authentication_url": {
          "type": "string"
        },
        "replication_server": {
          "type": "string"
        }
      }
    },
    "v1ConversationStreamReply": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        }
      }
    },
    "v1ConversationStreamRequest": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "uint64"
        },
        "page": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1ConversationType": {
      "type": "string",
      "enum": [
        "Undefined",
        "AccountType",
        "ContactType",
        "MultiMemberType"
      ],
      "default": "Undefined"
    },
    "v1DevShareInstanceBertyIDReply": {
      "type": "object"
    },
    "v1DevShareInstanceBertyIDRequest": {
      "type": "object",
      "properties": {
        "reset": {
          "type": "boolean",
          "title": "reset will regenerate a new link"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "v1DevStreamLogsReply": {
      "type": "object",
      "properties": {
        "line": {
          "type": "string"
        }
      }
    },
    "v1DevStreamLogsRequest": {
      "type": "object"
    },
    "v1Device": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "member_public_key": {
          "type": "string"
        }
      }
    },
    "v1EchoDuplexTestReply": {
      "type": "object",
      "properties": {
        "echo": {
          "type": "string"
        }
      }
    },
    "v1EchoDuplexTestRequest": {
      "type": "object",
      "properties": {
        "echo": {
          "type": "string"
        },
        "trigger_error": {
          "type": "boolean"
        }
      }
    },
    "v1EchoTestReply": {
      "type": "object",
      "properties": {
        "echo": {
          "type": "string"
        }
      }
    },
    "v1EchoTestRequest": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "string",
          "format": "uint64"
        },
        "echo": {
          "type": "string"
        },
        "trigger_error": {
          "type": "boolean"
        }
      }
    },
    "v1EventStreamReply": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1StreamEvent"
        }
      }
    },
    "v1EventStreamRequest": {
      "type": "object",
      "properties": {
        "shallow_amount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string",
          "format": "byte",
          "title": "public_key is the identifier of the group, it signs the group secret and the initial member of a multi-member group"
        },
        "secret": {
          "type": "string",
          "format": "byte",
          "title": "secret is the symmetric secret of the group, which is used to encrypt the metadata"
        },
        "secret_sig": {
          "type": "string",
          "format": "byte",
          "title": "secret_sig is the signature of the secret used to ensure the validity of the group"
        },
        "group_type": {
          "$ref": "#/definitions/v1GroupType",
          "title": "group_type specifies the type of the group, used to determine how device secrets are generated"
        },
        "sign_pub": {
          "type": "string",
          "format": "byte",
          "title": "sign_pub is the signature public key used to verify entries, not required when secret and secret_sig are provided"
        },
        "link_key": {
          "type": "string",
          "format": "byte",
          "title": "link_key is the secret key used to exchange group updates and links to attachments, useful for replication services"
        },
        "link_key_sig": {
          "type": "string",
          "format": "byte",
          "title": "link_key_sig is the signature of the link_key using the group private key"
        }
      },
      "title": "Group define a group and is enough to invite someone to it"
    },
    "v1GroupType": {
      "type": "string",
      "enum": [
        "GroupTypeUndefined",
        "GroupTypeAccount",
        "GroupTypeContact",
        "GroupTypeMultiMember"
      ],
      "default": "GroupTypeUndefined",
      "description": " - GroupTypeUndefined: GroupTypeUndefined indicates that the value has not been set. For example, happens if group is replicated.\n - GroupTypeAccount: GroupTypeAccount is the group managing an account, available to all its devices.\n - GroupTypeContact: GroupTypeContact is the group created between two accounts, available to all their devices.\n - GroupTypeMultiMember: GroupTypeMultiMember is a group containing an undefined number of members."
    },
    "v1InstanceShareableBertyIDReply": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1BertyLink"
        },
        "internal_url": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "v1InstanceShareableBertyIDRequest": {
      "type": "object",
      "properties": {
        "reset": {
          "type": "boolean",
          "title": "reset will regenerate a new link"
        },
        "display_name": {
          "type": "string"
        },
        "passphrase": {
          "type": "string",
          "format": "byte",
          "title": "optional passphase to encrypt the link"
        }
      }
    },
    "v1InteractReply": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        }
      }
    },
    "v1InteractRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1AppMessageType"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "conversation_public_key": {
          "type": "string"
        },
        "media_cids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target_cid": {
          "type": "string"
        }
      }
    },
    "v1Interaction": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1AppMessageType"
        },
        "member_public_key": {
          "type": "string"
        },
        "device_public_key": {
          "type": "string"
        },
        "member": {
          "$ref": "#/definitions/v1Member"
        },
        "conversation_public_key": {
          "type": "string"
        },
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "is_mine": {
          "type": "boolean"
        },
        "sent_date": {
          "type": "string",
          "format": "int64"
        },
        "acknowledged": {
          "type": "boolean"
        },
        "target_cid": {
          "type": "string"
        },
        "medias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Media"
          }
        },
        "reactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InteractionReactionView"
          }
        },
        "out_of_store_message": {
          "type": "boolean"
        }
      }
    },
    "v1Media": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        },
        "mime_type": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "metadata_bytes": {
          "type": "string",
          "format": "byte"
        },
        "interaction_cid": {
          "type": "string",
          "title": "these should not be sent on the bertyprotocol layer"
        },
        "state": {
          "$ref": "#/definitions/v1MediaState"
        }
      }
    },
    "v1MediaGetRelatedReply": {
      "type": "object",
      "properties": {
        "media": {
          "$ref": "#/definitions/v1Media"
        },
        "end": {
          "type": "boolean"
        }
      }
    },
    "v1MediaGetRelatedRequest": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        },
        "mime_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "bool previous = 2; // TODO: gets previous media instead of next"
        },
        "file_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1MediaPrepareReply": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        }
      }
    },
    "v1MediaPrepareRequest": {
      "type": "object",
      "properties": {
        "block": {
          "type": "string",
          "format": "byte"
        },
        "info": {
          "$ref": "#/definitions/v1Media"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "v1MediaRetrieveReply": {
      "type": "object",
      "properties": {
        "block": {
          "type": "string",
          "format": "byte"
        },
        "info": {
          "$ref": "#/definitions/v1Media"
        }
      }
    },
    "v1MediaRetrieveRequest": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        }
      }
    },
    "v1MediaState": {
      "type": "string",
      "enum": [
        "StateUnknown",
        "StateNeverDownloaded",
        "StatePartiallyDownloaded",
        "StateDownloaded",
        "StateInCache",
        "StateInvalidCrypto",
        "StatePrepared",
        "StateAttached"
      ],
      "default": "StateUnknown",
      "title": "- StateNeverDownloaded: specific to media received\n - StatePrepared: specific to media sent"
    },
    "v1Member": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "avatar_cid": {
          "type": "string"
        },
        "conversation_public_key": {
          "type": "string"
        },
        "is_me": {
          "type": "boolean"
        },
        "is_creator": {
          "type": "boolean"
        },
        "info_date": {
          "type": "string",
          "format": "int64"
        },
        "conversation": {
          "$ref": "#/definitions/v1Conversation"
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Device"
          }
        }
      }
    },
    "v1MessageSearchReply": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Interaction"
          }
        }
      }
    },
    "v1MessageSearchRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "before_date": {
          "type": "string",
          "format": "int64"
        },
        "after_date": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "ref_cid": {
          "type": "string"
        },
        "oldest_to_newest": {
          "type": "boolean"
        }
      }
    },
    "v1NotificationConversationSetEnabledReply": {
      "type": "object"
    },
    "v1NotificationConversationSetEnabledRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean"
        },
        "conversation_public_key": {
          "type": "string"
        }
      }
    },
    "v1NotificationSetEnabledReply": {
      "type": "object"
    },
    "v1NotificationSetEnabledRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean"
        }
      }
    },
    "v1OutOfStoreMessage": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string",
          "format": "byte"
        },
        "device_pk": {
          "type": "string",
          "format": "byte"
        },
        "counter": {
          "type": "string",
          "format": "uint64"
        },
        "sig": {
          "type": "string",
          "format": "byte"
        },
        "flags": {
          "type": "integer",
          "format": "int64"
        },
        "encrypted_payload": {
          "type": "string",
          "format": "byte"
        },
        "nonce": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1PaginatedInteractionsOptions": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "amount Number of entries to be returned. Default is 5."
        },
        "ref_cid": {
          "type": "string",
          "description": "ref_cid Reference CID for used for pagination defaulting to oldest/newest depending on sorting. When specified this CID won't be included in the results."
        },
        "conversation_pk": {
          "type": "string",
          "title": "conversation_pk Filter by conversation, otherwise X latest message of each conversation are returned"
        },
        "oldest_to_newest": {
          "type": "boolean",
          "title": "oldest_to_newest Default sort of results is latest to oldest message"
        },
        "exclude_medias": {
          "type": "boolean",
          "title": "exclude_medias Medias are included by default"
        },
        "no_bulk": {
          "type": "boolean",
          "title": "no_bulk should interactions be via atomic update in the stream"
        }
      }
    },
    "v1ParseDeepLinkReply": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1BertyLink"
        }
      }
    },
    "v1ParseDeepLinkRequest": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "passphrase": {
          "type": "string",
          "format": "byte",
          "title": "optional passphase to decrypt the link"
        }
      }
    },
    "v1PushReceivedData": {
      "type": "object",
      "properties": {
        "protocol_data": {
          "$ref": "#/definitions/bertyprotocolv1PushReceiveReply"
        },
        "interaction": {
          "$ref": "#/definitions/v1Interaction"
        },
        "already_received": {
          "type": "boolean"
        }
      }
    },
    "v1PushSetAutoShareReply": {
      "type": "object"
    },
    "v1PushSetAutoShareRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1ReplicationSetAutoEnableReply": {
      "type": "object"
    },
    "v1ReplicationSetAutoEnableRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1ReplyOption": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "v1SendContactRequestReply": {
      "type": "object"
    },
    "v1SendContactRequestRequest": {
      "type": "object",
      "properties": {
        "berty_id": {
          "$ref": "#/definitions/v1BertyID"
        },
        "metadata": {
          "type": "string",
          "format": "byte"
        },
        "own_metadata": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1SendReplyOptionsReply": {
      "type": "object"
    },
    "v1SendReplyOptionsRequest": {
      "type": "object",
      "properties": {
        "group_pk": {
          "type": "string",
          "format": "byte"
        },
        "options": {
          "$ref": "#/definitions/AppMessageReplyOptions"
        }
      }
    },
    "v1ServiceTokenSupportedService": {
      "type": "object",
      "properties": {
        "service_type": {
          "type": "string"
        },
        "service_endpoint": {
          "type": "string"
        }
      }
    },
    "v1ServicesTokenListReply": {
      "type": "object",
      "properties": {
        "token_id": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/bertyprotocolv1ServiceToken"
        }
      }
    },
    "v1ServicesTokenListRequest": {
      "type": "object"
    },
    "v1ShareableBertyGroupReply": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1BertyLink"
        },
        "internal_url": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "v1ShareableBertyGroupRequest": {
      "type": "object",
      "properties": {
        "group_pk": {
          "type": "string",
          "format": "byte"
        },
        "group_name": {
          "type": "string"
        }
      }
    },
    "v1StreamEvent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1StreamEventType"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "is_new": {
          "type": "boolean",
          "title": "specific to \"*Updated\" events"
        }
      }
    },
    "v1StreamEventType": {
      "type": "string",
      "enum": [
        "Undefined",
        "TypeListEnded",
        "TypeConversationUpdated",
        "TypeConversationDeleted",
        "TypeInteractionUpdated",
        "TypeInteractionDeleted",
        "TypeContactUpdated",
        "TypeAccountUpdated",
        "TypeMemberUpdated",
        "TypeDeviceUpdated",
        "TypeNotified",
        "TypeMediaUpdated",
        "TypeConversationPartialLoad"
      ],
      "default": "Undefined"
    },
    "v1TyberHostAttachReply": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "v1TyberHostAttachRequest": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1TyberHostSearchReply": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "ipv4": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipv6": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1TyberHostSearchRequest": {
      "type": "object"
    }
  }
}
