version: 2

.golang_workspace: &golang_workspace
  working_directory: /go/src/github.com/berty/berty
  environment:
    GOPATH: /go
    GOTEST_TIMEOUT: 1m
  docker:
    - image: circleci/golang:latest

jobs:
  project.lint:
    <<: *golang_workspace
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-go-cache
      - run:
          name: prepare CI
          command: |
            (cd core; make _ci_prepare)
            go get -u gopkg.in/alecthomas/gometalinter.v2
            gometalinter.v2 -i -u
      - run:
          name: lint
          command: make lint
      - save_cache:
          key: v1-go-cache
          paths:
            - "/go/pkg"

  docker.build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-docker-berty
          paths:
            - /caches/berty.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/berty.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=berty -t berty .
      - run:
          name: Run application within Docker
          command: |
            docker run --rm berty daemon --init-only
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/berty.tar berty
      - save_cache:
          key: v1-docker-berty
          paths:
            - /caches/berty.tar

  core.go.test:
    <<: *golang_workspace
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-go-cache
      - run:
          name: prepare CI
          command: |
            (cd core; make _ci_prepare)
            mkdir -p /tmp/test-results
            go get github.com/jstemmer/go-junit-report
      - run:
          name: install openssl 1.0.x
          command: |
            sudo apt-get update
            sudo apt-get install libssl1.0-dev
      - run:
          name: install core
          command: |
            cd core
            make install
      - run:
          name: test core
          command: |
            cd core
            make test | tee /tmp/test-results/go-test-report.out
      - run:
          name: integration core
          command: |
            cd core
            make integration
      - run:
          name: junit-report
          command: |
            go-junit-report < /tmp/test-results/go-test-report.out > /tmp/test-results/go-test-report.xml
      - save_cache:
          key: v1-go-cache
          paths:
            - "/go/pkg"
      - store_test_results:
          path: /tmp/test-results

  client.rn.node:
    working_directory: ~/go/src/github.com/berty/berty
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "client/react-native/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/react-native/package.json" }}-{{ arch }}

      - run: cd client/react-native && make deps

      - save_cache:
          key: yarn-v1-{{ checksum "client/react-native/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/react-native/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: ~/go/src/github.com/berty/berty
          paths:
            - client/react-native/node_modules
            - client/react-native/gomobile/node_modules
            - client/react-native/common/node_modules
            - client/react-native/mobile/node_modules

  client.rn.android:
    working_directory: ~/go/src/github.com/berty/berty/client/react-native/mobile/android
    docker:
      - image: sfroment/test:lastest
    steps:
      - checkout:
          path: ~/go/src/github.com/berty/berty/

      - attach_workspace:
          at: ~/go/src/github.com/berty/berty/

      - run:
          name: setup golang environment
          command: |
            echo "export PATH=/usr/local/go/bin/:~/go/bin:$PATH" >> $BASH_ENV

      - run:
          name: gomobile android build
          command: |
            env && cd ../../gomobile && gomobile init -v -ndk $ANDROID_NDK_HOME && make core.build.android

      - restore_cache:
          key: android-gems-{{ checksum "~/go/src/github.com/berty/berty/client/react-native/mobile/android/Gemfile.lock" }}

      - run:
          name: install bundle
          command: bundle check || bundle install --path vendor/bundle

      - save_cache:
          key: android-gems-{{ checksum "~/go/src/github.com/berty/berty/client/react-native/mobile/android/Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: build app
          command: |
            time bundle exec fastlane android beta --verbose




workflows:
  version: 2
  commit:
    jobs:
      - project.lint
      - core.go.test
      - docker.build
      - client.rn.node
      - client.rn.android:
          requires:
            - client.rn.node
