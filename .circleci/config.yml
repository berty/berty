version: 2

references:
  golang_workspace: &golang_workspace
    working_directory: /go/src/berty.tech
    environment:
      GOPATH: /go
      GOTEST_TIMEOUT: 5m
      GOPROXY: https://goproxy.berty.io
      GO111MODULE: "on"
      TEST_OPTS: "-coverprofile=profile.out -covermode=count"
    docker:
      - image: circleci/golang:1.12

  master_version: &master_version
    run:
      name: retrieve master version
      command: |
        no_repo=false
        if [ ! -e .git ]; then
          no_repo=true
          git init
          git remote add origin git@github.com:berty/berty
        fi
        git fetch origin master
        echo $(git rev-list --count origin/master) > /tmp/master_version
        [ $no_repo = true ] && rm -rf .git || true

  install_retry: &install_retry
    run:
      name: install retry
      command: |
        command -v wget &>/dev/null && wget -O /tmp/retry "https://github.com/moul/retry/releases/download/v0.5.0/retry_$(uname -s)_$(uname -m)" || true
        if [ ! -f /tmp/retry ]; then command -v curl &>/dev/null && curl -L -o /tmp/retry "https://github.com/moul/retry/releases/download/v0.5.0/retry_$(uname -s)_$(uname -m)"; fi
        chmod +x /tmp/retry
        /tmp/retry --version

  install_go: &install_go
    run:
      name: install-go
      command: |
        if [ ! -f ~/go-install/go/bin/go ]; then
          cd ~ && git clone https://github.com/udhos/update-golang
          cd ~/update-golang && mkdir ~/go-install && sudo DESTINATION=~/go-install RELEASE=1.12 ./update-golang.sh
        fi
        echo "export PATH=~/go-install/go/bin/:~/go/bin:$PATH" >> $BASH_ENV

  install_gomobile: &install_gomobile
    run:
      name: install gomobile
      command: |
        if [ ! -f ~/go/bin/gomobile ]; then
          go get golang.org/x/mobile/cmd/gomobile
          cd ~/go/src/golang.org/x/mobile
          git remote add upstream git@github.com:sfroment/mobile
          git fetch upstream
          git cherry-pick af3c051e0603af005260579c432830164f68933b
          go install golang.org/x/mobile/cmd/gomobile
          gomobile init
        fi

  install_mac: &install_mac
    run:
      name: install mac
      command: |
        if [ ! -f ~/go/bin/astilectron-bundler ]; then
          cd ~/go/src/berty.tech/client/react-native/desktop
          make deps
        fi
        brew install dylibbundler
        yarn global add electron-builder

jobs:
  lint:
    <<: *golang_workspace
    docker:
      - image: bertychat/linter:v2
    steps:
      - *install_retry
      - checkout
      - restore_cache:
          keys:
            - v2-go-cache
      - run:
          name: fetch deps
          command: |
            cd core
            /tmp/retry -m 3 go mod download
      - run:
          name: prepare CI
          command: make _ci_prepare
      - run:
          name: lint
          command: /tmp/retry -m 3 make lint
      - save_cache:
          key: v2-go-cache
          paths:
            - "/go/pkg"

  generate:
    docker:
      - image: bertychat/protoc:v8
    working_directory: /go/src/berty.tech
    environment:
      GOPATH: /go
    steps:
      - *install_retry
      - checkout
      - setup_remote_docker
      - run:
          name: make generate_local
          command: |
            # 1. checkout
            # 2. generate prepare
            # 3. generate
            # 4. ignore go.mod (this file regularly changes with useless information (adding `// indirect`)
            # 5. check if files changed
            cd core
            /tmp/retry -m 5 -t 300 sh -xec ' \
              git checkout . && \
              make clean && \
              make generate_prepare && \
              make generate_local && \
              git checkout go.mod && \
              git status | cat && \
              git diff -w | cat && \
              git diff-index -w --quiet HEAD -- \
            '
            # IDEA: diff-index -w is not working as expected, maybe we should ignore some of the parts of the output
            # IDEA: try to pass a `goimports -w -s` on files listed in `git diff-index` output to remove whitespaces

  docker.build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - run:
          name: install ca-certificates
          command: apk --no-cache add openssl make

      - *install_retry
      - checkout
      - setup_remote_docker

      - *master_version
      - restore_cache:
          key: docker-berty-master-{{checksum "/tmp/master_version"}}
          paths:
            - /caches/berty.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/berty.tar | true

      - run:
          name: Build application Docker image
          command: /tmp/retry -m 3 docker build --cache-from=bertychat/berty -t bertychat/berty .

      - run:
          name: Run application within Docker
          command: /tmp/retry -m 3 docker run --rm bertychat/berty daemon --init-only --no-p2p

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/berty.tar bertychat/berty

      - run:
          name: Push image to docker hub
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push bertychat/berty:latest
              cd service/push && make push fcm-api-key=$FCM_API_KEY && cd -
              docker logout
            fi

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/berty.tar bertychat/berty

      - *master_version
      - save_cache:
          key: docker-berty-{{.Branch}}-{{checksum "/tmp/master_version"}}
          paths:
            - /caches/berty.tar

  core.go.test:
    <<: *golang_workspace
    steps:
      - *install_retry
      - checkout
      - restore_cache:
          keys:
            - v1-go-cache
      - run:
          name: prepare CI
          command: |
            make _ci_prepare
            mkdir -p /tmp/test-results
            go get github.com/jstemmer/go-junit-report
      - run:
          name: install openssl 1.0.x
          command: |
            sudo apt-get update
            sudo apt-get install libssl1.0-dev
      - run:
          name: install core
          command: |
            cd core
            BUILD_MODE="ci-${CIRCLE_BRANCH}" /tmp/retry -m 3 make install
      - run:
          name: berty version
          command: berty --version
      - run:
          name: test core
          command: |
            cd core
            TEST_SLEEP_BETWEEN_STEPS=1s TEST_OPTS="$TEST_OPTS" /tmp/retry -m 3 make test | tee /tmp/test-results/go-test-report.out
      - run:
          name: test gomobile
          command: |
            cd client/react-native/gomobile/core
            /tmp/retry -m 3 go test $TEST_OPTS -v . | tee /tmp/test-results/go-test-report.out
            GOARCH=386 /tmp/retry -m 3 go test -v . | tee /tmp/test-results/go-test-report.out
      - run:
          name: integration core
          command: |
            cd core
            /tmp/retry -m 3 make integration
      - run:
          name: junit-report
          command: go-junit-report < /tmp/test-results/go-test-report.out > /tmp/test-results/go-test-report.xml
      - save_cache:
          key: v1-go-cache
          paths:
            - "/go/pkg"
      - run:
          name: aggretate coverage
          command: |
            cat `find . -name profile.out` > coverage.txt
            bash <(curl -s https://codecov.io/bash) -t 1eefe35e-d1a9-45f3-910d-3e84db1ec04c
      - store_test_results:
          path: /tmp/test-results

  client.rn.node:
    working_directory: ~/go/src/berty.tech
    docker:
      - image: circleci/node:8
    steps:

      - *install_retry
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "client/react-native/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/react-native/package.json" }}-{{ arch }}

      - run:
          name: install react-native deps
          command: |
            cd client/react-native
            /tmp/retry -m 3 make deps

      - save_cache:
          key: yarn-v1-{{ checksum "client/react-native/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/react-native/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: ~/go/src/berty.tech
          paths:
            - client/react-native/common
            - client/react-native/node_modules

  client.rn.android:
    working_directory: ~/go/src/berty.tech/client/react-native/android
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_CHANGELOG: 1
      FL_BUILDLOG_PATH: /tmp/fl/log/build/android
      BUILD: /tmp/fl/build

    docker:
      - image: bertychat/android-ci:v3
    steps:
      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - *install_retry
      - run:
          name: setup environment
          command: echo "export PATH=~/go/src/berty.tech/client/react-native/node_modules/.bin/:/usr/local/go/bin/:~/go/bin:$PATH" >> $BASH_ENV

      - run:
          name: gomobile android build
          command: |
            cd ../gomobile
            BUILD_MODE=ci-${CIRCLE_BRANCH} /tmp/retry -m 3 make build.android

      - restore_cache:
          key: v1-rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}

      - run:
          name: install bundle
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            bundle check || /tmp/retry -m 3 bundle install --path vendor/bundle

      - save_cache:
          key: v1-rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}
          paths:
            - ~/go/src/berty.tech/client/react-native/vendor/bundle

      - run:
          name: patch android repo
          working_directory: ~/go/src/berty.tech/client/react-native
          command: make patch.android

      - run:
          name: set version
          working_directory: ~/go/src/berty.tech/client/react-native
          command: make version.android

      - run:
          name: set name
          command: |
            [[ ! -z "${CIRCLE_PR_NUMBER}" ]] && echo "export ANDROID_CUSTOM_NAME='Berty @${CIRCLE_PR_NUMBER}'" >> $BASH_ENV || true

      - run:
          name: add environment
          working_directory: ~/go/src/berty.tech/client/react-native
          command: echo $RN_ENVIRONMENT > .environment

      - run:
          name: build app
          working_directory: ~/go/src/berty.tech/client/react-native
          command: . $BASH_ENV; find gomobile/vendor -name package.json -delete; /tmp/retry -m 3 make fastlane.android.staff

      - store_artifacts:
          path: /tmp/fl

  client.rn.android-beta:
    working_directory: ~/go/src/berty.tech/client/react-native/android
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_CHANGELOG: 1
      FL_BUILDLOG_PATH: /tmp/fl/log/build/android
      BUILD: /tmp/fl/build

    docker:
      - image: bertychat/android-ci:v3
    steps:
      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - *install_retry
      - run:
          name: setup environment
          command: echo "export PATH=~/go/src/berty.tech/client/react-native/node_modules/.bin/:/usr/local/go/bin/:~/go/bin:$PATH" >> $BASH_ENV

      - run:
          name: gomobile android build
          command: |
            cd ../gomobile
            BUILD_MODE=ci-${CIRCLE_BRANCH} /tmp/retry -m 3 make build.android

      - restore_cache:
          key: v1-rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}

      - run:
          name: install bundle
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            bundle check || /tmp/retry -m 3 bundle install --path vendor/bundle

      - save_cache:
          key: v1-rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}
          paths:
            - ~/go/src/berty.tech/client/react-native/vendor/bundle

      - run:
          name: patch android repo
          working_directory: ~/go/src/berty.tech/client/react-native
          command: make patch.android

      - run:
          name: set version
          working_directory: ~/go/src/berty.tech/client/react-native
          command: make version.android

      - run:
          name: add environment
          working_directory: ~/go/src/berty.tech/client/react-native
          command: echo $RN_ENVIRONMENT > .environment

      - run:
          name: build app
          working_directory: ~/go/src/berty.tech/client/react-native
          command: find gomobile/vendor -name package.json -delete; /tmp/retry -m 3 make fastlane.android.yolo

      - store_artifacts:
          path: /tmp/fl

  client.rn.ios:
    working_directory: ~/go/src/berty.tech
    macos:
      xcode: "10.2.0"
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_CHANGELOG: 1
      SCAN_OUTPUT_DIRECTORY: /tmp/fl/log/scan
      GYM_OUTPUT_DIRECTORY: /tmp/fl/log/gym
      FL_BUILDLOG_PATH: /tmp/fl/log/build/ios
      SCAN_INCLUDE_SIMULATOR_LOGS: true
      BUILD: /tmp/fl/build

    shell: /bin/bash --login -o pipefail
    steps:
      - *install_retry
      - run:
          name: set Ruby version
          command: echo "ruby-2.4" > ~/.ruby-version

      - *master_version
      - restore_cache:
          key: ios-{{checksum "/tmp/master_version"}}

      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - *install_go
      - *install_gomobile
      - run:
          name: install core
          working_directory: ~/go/src/berty.tech/client/react-native/gomobile
          command: BUILD_MODE=ci-${CIRCLE_BRANCH} /tmp/retry -m 3 make build.ios

      - restore_cache:
          key: rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}-3

      - run:
          name: install bundle
          working_directory: ~/go/src/berty.tech/client/react-native
          command: bundle check || /tmp/retry -m 3 bundle install --path vendor/bundle

      - save_cache:
          key: rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}-3
          paths:
            - ~/go/src/berty.tech/client/react-native/vendor/bundle

      - run:
          name: set version
          working_directory: ~/go/src/berty.tech/client/react-native
          command: make version.ios

      - run:
          name: install fsevents
          working_directory: ~/go/src/berty.tech/client/react-native
          command: /tmp/retry -m 3 yarn add fsevents && yarn upgrade fsevents

      - run:
          name: add environment
          working_directory: ~/go/src/berty.tech/client/react-native
          command: echo $RN_ENVIRONMENT > .environment

      - run:
          name: build app
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            [[ ! -z "${CIRCLE_PR_NUMBER}" ]] && IOS_CUSTOM_NAME="Berty @${CIRCLE_PR_NUMBER}" make appname.ios || true
            make fastlane.setup_circle
            find gomobile/vendor -name package.json -delete;
            /tmp/retry -m 3 make fastlane.ios.adhoc

      - store_artifacts:
          path: /tmp/fl


  client.rn.ios-beta:
    working_directory: ~/go/src/berty.tech
    macos:
      xcode: "10.2.0"
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_CHANGELOG: 1
      SCAN_OUTPUT_DIRECTORY: /tmp/flb/log/scan
      GYM_OUTPUT_DIRECTORY: /tmp/flb/log/gym
      FL_BUILDLOG_PATH: /tmp/flb/log/build/ios
      SCAN_INCLUDE_SIMULATOR_LOGS: true
      BUILD: /tmp/flb/build

    shell: /bin/bash --login -o pipefail
    steps:
      - *install_retry
      - run:
          name: set Ruby version
          command: echo "ruby-2.4" > ~/.ruby-version

      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - *install_go
      - *install_gomobile

      - run:
          name: install core
          working_directory: ~/go/src/berty.tech/client/react-native/gomobile
          command: BUILD_MODE=ci-${CIRCLE_BRANCH} /tmp/retry -m 3 make build.ios

      - restore_cache:
          key: rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}-4

      - run:
          name: install bundle
          working_directory: ~/go/src/berty.tech/client/react-native
          command: bundle check || /tmp/retry -m 3 bundle install --path vendor/bundle

      - save_cache:
          key: rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}-4
          paths:
            - ~/go/src/berty.tech/client/react-native/vendor/bundle

      - run:
          name: set version
          working_directory: ~/go/src/berty.tech/client/react-native
          command: make version.ios

      - run:
          name: install fsevents
          working_directory: ~/go/src/berty.tech/client/react-native
          command: /tmp/retry -m 3 yarn add fsevents && yarn upgrade fsevents

      - run:
          name: add environment
          working_directory: ~/go/src/berty.tech/client/react-native
          command: echo $RN_ENVIRONMENT > .environment

      - run:
          name: build app
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            make fastlane.setup_circle
            find gomobile/vendor -name package.json -delete;
            /tmp/retry -m 3 make fastlane.ios.house

      - *master_version
      - save_cache:
          key: ios-{{checksum "/tmp/master_version"}}
          paths:
            - ~/go/pkg
            - ~/go/src
            - ~/go-install

      - store_artifacts:
          path: /tmp/flb


  client.rn.web:
    working_directory: ~/go/src/berty.tech
    docker:
      - image: circleci/node:8
    steps:
      - *install_retry
      - checkout

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - restore_cache:
          key: yarn-v1-{{ checksum "client/react-native/web/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/react-native/web/package.json" }}-{{ arch }}

      - run: cd client/react-native/web && /tmp/retry -m 3 yarn

      - save_cache:
          key: yarn-v1-{{ checksum "client/react-native/web/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/react-native/web/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: build web app
          working_directory: ~/go/src/berty.tech/client/react-native/web
          command: /tmp/retry -m 3 yarn build

      - persist_to_workspace:
          root: ~/go/src/berty.tech/
          paths:
            - client/react-native/web


  client.rn.mac:
    working_directory: ~/go/src/berty.tech
    macos:
      xcode: "10.2.0"

    shell: /bin/bash --login -o pipefail
    steps:
      - *install_retry
      - *master_version

      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - *install_go

      - restore_cache:
          key: desktop-darwin-v2-{{ arch }}

      - *install_mac

      - save_cache:
          key: desktop-darwin-v2-{{ arch }}
          paths:
            - /usr/local/Homebrew
            - ~/go/src/github.com
            - ~/go/bin

      - run:
          name: install mac
          working_directory: ~/go/src/berty.tech/client/react-native/desktop
          command: |
            BUILD_MODE=ci-${CIRCLE_BRANCH} /tmp/retry -m 3 make build
            dylibbundler -od -b -x ./output/darwin-amd64/Berty.app/Contents/MacOS/berty -d ./output/darwin-amd64/Berty.app/Contents/libs/
            mv output/darwin-amd64/Berty.app appdmg
            cd appdmg
            electron-builder build --publish never --prepackaged Berty.app
            mv dist/Berty*.dmg /tmp/Berty.dmg

      - store_artifacts:
          path: /tmp/Berty.dmg

workflows:
  version: 2
  build-client:
    jobs:
      - client.rn.node
      - client.rn.android:
          requires:
            - client.rn.node
      - client.rn.android-beta:
          filters:
            branches:
              only: master
          requires:
            - client.rn.node
      - client.rn.ios:
          requires:
            - client.rn.node
      - client.rn.ios-beta:
          filters:
            branches:
              only: master
          requires:
            - client.rn.node
      - client.rn.web:
          requires:
            - client.rn.node
      - client.rn.mac:
          requires:
            - client.rn.web
  check-quality:
    jobs:
      - lint
      - generate
      - core.go.test
      - docker.build

  # todo later: build-services
