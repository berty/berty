version: 2

.golang_workspace: &golang_workspace
  working_directory: /go/src/berty.tech
  environment:
    GOPATH: /go
    GOTEST_TIMEOUT: 5m
    GOPROXY: http://goproxy.berty.io:3000/
    GO111MODULE: "on"
  docker:
    - image: circleci/golang:latest

jobs:
  lint:
    <<: *golang_workspace
    docker:
      - image: bertychat/linter:v2
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-go-cache
      - run:
          name: fetch deps
          command: |
            cd core; go mod download
      - run:
          name: prepare CI
          command: |
            make _ci_prepare
      - run:
          name: lint
          command: make lint
      - save_cache:
          key: v1-go-cache
          paths:
            - "/go/pkg"

  generate:
    docker:
      - image: bertychat/protoc:v3
    working_directory: /go/src/berty.tech
    environment:
      GOPATH: /go
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: cleanup existing generated files
          command: |
            cd core
            make clean
      - run:
          name: make generate_prepare
          command: |
            cd core
            make generate_prepare
      - run:
          name: make generate_local
          command: |
            cd core
            make generate_local
      - run:
          name: ignore some files
          command: |
            git checkout core/go.mod # this file regularly changes with useless information (adding `// indirect`)
      - run:
          name: check if files changed
          command: |
            git status | cat
            git diff | cat
            git diff-index --quiet HEAD --

  docker.build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-docker-berty
          paths:
            - /caches/berty.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/berty.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=berty -t berty .
      - run:
          name: Run application within Docker
          command: |
            docker run --rm berty daemon --init-only --no-p2p
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/berty.tar berty
      - save_cache:
          key: v1-docker-berty
          paths:
            - /caches/berty.tar

  core.go.test:
    <<: *golang_workspace
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-go-cache
      - run:
          name: prepare CI
          command: |
            make _ci_prepare
            mkdir -p /tmp/test-results
            go get github.com/jstemmer/go-junit-report
      - run:
          name: install openssl 1.0.x
          command: |
            sudo apt-get update
            sudo apt-get install libssl1.0-dev
      - run:
          name: install core
          command: |
            cd core
            make install
      - run:
          name: test core
          command: |
            cd core
            TEST_SLEEP_BETWEEN_STEPS=1s make test | tee /tmp/test-results/go-test-report.out
      - run:
          name: test client (bot)
          command: |
            cd client/go/bot
            go test -v . | tee /tmp/test-results/go-test-report.out
            go install -v .
            cd ./examples/berty-bot-example
            go test -v . | tee /tmp/test-results/go-test-report.out
            go install -v .
      - run:
          name: test gomobile
          command: |
            cd client/react-native/gomobile
            go test -v . | tee /tmp/test-results/go-test-report.out
            GOARCH=386 go test -v . | tee /tmp/test-results/go-test-report.out
      - run:
          name: integration core
          command: |
            cd core
            make integration
      - run:
          name: junit-report
          command: |
            go-junit-report < /tmp/test-results/go-test-report.out > /tmp/test-results/go-test-report.xml
      - save_cache:
          key: v1-go-cache
          paths:
            - "/go/pkg"
      - store_test_results:
          path: /tmp/test-results

  client.rn.node:
    working_directory: ~/go/src/berty.tech
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "client/react-native/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/react-native/package.json" }}-{{ arch }}

      - run:
          name: install react-native deps
          command: |
            cd client/react-native && make deps

      - save_cache:
          key: yarn-v1-{{ checksum "client/react-native/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/react-native/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: ~/go/src/berty.tech
          paths:
            - client/react-native/common
            - client/react-native/node_modules

  client.rn.android:
    working_directory: ~/go/src/berty.tech/client/react-native/android
    docker:
      - image: bertychat/android-ci:v2
    steps:
      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      - run:
          name: setup golang environment
          command: |
            echo "export PATH=/usr/local/go/bin/:~/go/bin:$PATH" >> $BASH_ENV

      - run:
          name: gomobile android build
          command: |
            env && cd ../gomobile && make build.android

      - restore_cache:
          key: v1-rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}

      - run:
          name: install bundle
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            bundle check || bundle install --path vendor/bundle

      - save_cache:
          key: v1-rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}
          paths:
            - ~/go/src/berty.tech/client/react-native/vendor/bundle

      - run:
          name: patch android repo
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            make patch.android

      - run:
          name: build app
          command: |
            time bundle exec fastlane android beta

  client.rn.ios:
    working_directory: ~/go/src/berty.tech
    macos:
      xcode: "9.4.1"
    environment:
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_CHANGELOG: 1
      SCAN_OUTPUT_DIRECTORY: /tmp/fl/log/scan
      GYM_OUTPUT_DIRECTORY: /tmp/fl/log/gym
      FL_BUILDLOG_PATH: /tmp/fl/log/build
      SCAN_INCLUDE_SIMULATOR_LOGS: true
      BUILD: /tmp/fl/build

    shell: /bin/bash --login -o pipefail
    steps:
      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - checkout:
          path: ~/go/src/berty.tech/

      - attach_workspace:
          at: ~/go/src/berty.tech/

      # if build breaks, increment vX in both restore_cache and save_cache
      - restore_cache:
          key: v2-ios-golang-{{ .Environment.GOVERSION }}-2

      - run:
          name: install-go
          command: |
            if [ ! -f ~/go-install/go/bin/go ]; then
              cd ~ && git clone https://github.com/udhos/update-golang
              cd ~/update-golang && mkdir ~/go-install && sudo DESTINATION=~/go-install ./update-golang.sh
            fi
            echo "export PATH=~/go-install/go/bin/:~/go/bin:$PATH" >> $BASH_ENV

      - run:
          name: install gomobile
          command: |
            if [ ! -f ~/go/bin/gomobile ]; then
              go get golang.org/x/mobile/cmd/gomobile
              cd ~/go/src/golang.org/x/mobile
              git remote add upstream git@github.com:sfroment/mobile
              git fetch upstream
              git cherry-pick af3c051e0603af005260579c432830164f68933b
              go install golang.org/x/mobile/cmd/gomobile
              gomobile init
            fi

      - save_cache:
          key: v2-ios-golang-{{ .Environment.GOVERSION }}-2
          paths:
            - ~/go/pkg
            - ~/go/src/github.com
            - ~/go-install

      - run:
          name: install core
          working_directory: ~/go/src/berty.tech/client/react-native/gomobile
          command: |
            make build.ios

      - restore_cache:
          key: rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}-3

      - run:
          name: install bundle
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            bundle check || bundle install --path vendor/bundle

      - save_cache:
          key: rn-gems-{{ checksum "~/go/src/berty.tech/client/react-native/Gemfile.lock" }}-3
          paths:
            - ~/go/src/berty.tech/client/react-native/vendor/bundle

      - run:
          name: set version
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            make version

      - run:
          name: install fsevents
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            yarn add fsevents

      - run:
          name: build app
          working_directory: ~/go/src/berty.tech/client/react-native
          command: |
            make fastlane.setup_circle \
              fastlane.ios.build

      - store_artifacts:
          path: /tmp/fl


  client.rn.web:
    working_directory: ~/go/src/berty.tech
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - attach_workspace:
          at: ~/go/src/berty.tech/


      - restore_cache:
          key: yarn-v1-{{ checksum "client/react-native/web/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/react-native/web/package.json" }}-{{ arch }}

      - run: cd client/react-native/web && yarn

      - save_cache:
          key: yarn-v1-{{ checksum "client/react-native/web/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/react-native/web/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: build web app
          working_directory: ~/go/src/berty.tech/client/react-native/web
          command: |
            yarn build

workflows:
  version: 2
  build-client:
    jobs:
      - client.rn.node
      - client.rn.android:
          requires:
            - client.rn.node
      - client.rn.ios:
          requires:
            - client.rn.node
      - client.rn.web:
          requires:
            - client.rn.node
  check-quality:
    jobs:
      - lint
      - generate
      - core.go.test
      - docker.build
  # todo later: build-services
