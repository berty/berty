// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/p2p/kind.proto

package p2p // import "berty.tech/core/api/p2p"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import entity "berty.tech/core/entity"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Kind int32

const (
	Kind_Unknown Kind = 0
	// Sent events are used by the UI.
	Kind_Sent Kind = 101
	// Ack events are created and sent after receiving an event from a peer.
	Kind_Ack Kind = 102
	// Ping events can be use to check and measure the availability of a peer.
	Kind_Ping                   Kind = 103
	Kind_ContactRequest         Kind = 201
	Kind_ContactRequestAccepted Kind = 202
	Kind_ContactShareMe         Kind = 203
	Kind_ContactShare           Kind = 204
	Kind_ConversationInvite     Kind = 301
	Kind_ConversationNewMessage Kind = 302
)

var Kind_name = map[int32]string{
	0:   "Unknown",
	101: "Sent",
	102: "Ack",
	103: "Ping",
	201: "ContactRequest",
	202: "ContactRequestAccepted",
	203: "ContactShareMe",
	204: "ContactShare",
	301: "ConversationInvite",
	302: "ConversationNewMessage",
}
var Kind_value = map[string]int32{
	"Unknown":                0,
	"Sent":                   101,
	"Ack":                    102,
	"Ping":                   103,
	"ContactRequest":         201,
	"ContactRequestAccepted": 202,
	"ContactShareMe":         203,
	"ContactShare":           204,
	"ConversationInvite":     301,
	"ConversationNewMessage": 302,
}

func (x Kind) String() string {
	return proto.EnumName(Kind_name, int32(x))
}
func (Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{0}
}

type SentAttrs struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SentAttrs) Reset()         { *m = SentAttrs{} }
func (m *SentAttrs) String() string { return proto.CompactTextString(m) }
func (*SentAttrs) ProtoMessage()    {}
func (*SentAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{0}
}
func (m *SentAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SentAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SentAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SentAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SentAttrs.Merge(dst, src)
}
func (m *SentAttrs) XXX_Size() int {
	return m.Size()
}
func (m *SentAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_SentAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_SentAttrs proto.InternalMessageInfo

func (m *SentAttrs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

type AckAttrs struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckAttrs) Reset()         { *m = AckAttrs{} }
func (m *AckAttrs) String() string { return proto.CompactTextString(m) }
func (*AckAttrs) ProtoMessage()    {}
func (*AckAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{1}
}
func (m *AckAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AckAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AckAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AckAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckAttrs.Merge(dst, src)
}
func (m *AckAttrs) XXX_Size() int {
	return m.Size()
}
func (m *AckAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_AckAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_AckAttrs proto.InternalMessageInfo

func (m *AckAttrs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

func (m *AckAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type PingAttrs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingAttrs) Reset()         { *m = PingAttrs{} }
func (m *PingAttrs) String() string { return proto.CompactTextString(m) }
func (*PingAttrs) ProtoMessage()    {}
func (*PingAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{2}
}
func (m *PingAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PingAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PingAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PingAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingAttrs.Merge(dst, src)
}
func (m *PingAttrs) XXX_Size() int {
	return m.Size()
}
func (m *PingAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_PingAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_PingAttrs proto.InternalMessageInfo

type ContactRequestAttrs struct {
	Me                   *entity.Contact `protobuf:"bytes,1,opt,name=me" json:"me,omitempty"`
	IntroText            string          `protobuf:"bytes,2,opt,name=intro_text,json=introText,proto3" json:"intro_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ContactRequestAttrs) Reset()         { *m = ContactRequestAttrs{} }
func (m *ContactRequestAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactRequestAttrs) ProtoMessage()    {}
func (*ContactRequestAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{3}
}
func (m *ContactRequestAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ContactRequestAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestAttrs.Merge(dst, src)
}
func (m *ContactRequestAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestAttrs proto.InternalMessageInfo

func (m *ContactRequestAttrs) GetMe() *entity.Contact {
	if m != nil {
		return m.Me
	}
	return nil
}

func (m *ContactRequestAttrs) GetIntroText() string {
	if m != nil {
		return m.IntroText
	}
	return ""
}

type ContactRequestAcceptedAttrs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestAcceptedAttrs) Reset()         { *m = ContactRequestAcceptedAttrs{} }
func (m *ContactRequestAcceptedAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactRequestAcceptedAttrs) ProtoMessage()    {}
func (*ContactRequestAcceptedAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{4}
}
func (m *ContactRequestAcceptedAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestAcceptedAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestAcceptedAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ContactRequestAcceptedAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestAcceptedAttrs.Merge(dst, src)
}
func (m *ContactRequestAcceptedAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestAcceptedAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestAcceptedAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestAcceptedAttrs proto.InternalMessageInfo

type ContactShareMeAttrs struct {
	Me                   *entity.Contact `protobuf:"bytes,1,opt,name=me" json:"me,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ContactShareMeAttrs) Reset()         { *m = ContactShareMeAttrs{} }
func (m *ContactShareMeAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactShareMeAttrs) ProtoMessage()    {}
func (*ContactShareMeAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{5}
}
func (m *ContactShareMeAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactShareMeAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactShareMeAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ContactShareMeAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactShareMeAttrs.Merge(dst, src)
}
func (m *ContactShareMeAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactShareMeAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactShareMeAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactShareMeAttrs proto.InternalMessageInfo

func (m *ContactShareMeAttrs) GetMe() *entity.Contact {
	if m != nil {
		return m.Me
	}
	return nil
}

type ContactShareAttrs struct {
	Contact              *entity.Contact `protobuf:"bytes,1,opt,name=contact" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ContactShareAttrs) Reset()         { *m = ContactShareAttrs{} }
func (m *ContactShareAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactShareAttrs) ProtoMessage()    {}
func (*ContactShareAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{6}
}
func (m *ContactShareAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactShareAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactShareAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ContactShareAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactShareAttrs.Merge(dst, src)
}
func (m *ContactShareAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactShareAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactShareAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactShareAttrs proto.InternalMessageInfo

func (m *ContactShareAttrs) GetContact() *entity.Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type ConversationInviteAttrs struct {
	Conversation         *entity.Conversation `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ConversationInviteAttrs) Reset()         { *m = ConversationInviteAttrs{} }
func (m *ConversationInviteAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationInviteAttrs) ProtoMessage()    {}
func (*ConversationInviteAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{7}
}
func (m *ConversationInviteAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationInviteAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationInviteAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ConversationInviteAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationInviteAttrs.Merge(dst, src)
}
func (m *ConversationInviteAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationInviteAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationInviteAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationInviteAttrs proto.InternalMessageInfo

func (m *ConversationInviteAttrs) GetConversation() *entity.Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationNewMessageAttrs struct {
	Message              *entity.Message `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConversationNewMessageAttrs) Reset()         { *m = ConversationNewMessageAttrs{} }
func (m *ConversationNewMessageAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationNewMessageAttrs) ProtoMessage()    {}
func (*ConversationNewMessageAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_241f5d52a928d5de, []int{8}
}
func (m *ConversationNewMessageAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationNewMessageAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationNewMessageAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ConversationNewMessageAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationNewMessageAttrs.Merge(dst, src)
}
func (m *ConversationNewMessageAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationNewMessageAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationNewMessageAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationNewMessageAttrs proto.InternalMessageInfo

func (m *ConversationNewMessageAttrs) GetMessage() *entity.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*SentAttrs)(nil), "berty.p2p.SentAttrs")
	proto.RegisterType((*AckAttrs)(nil), "berty.p2p.AckAttrs")
	proto.RegisterType((*PingAttrs)(nil), "berty.p2p.PingAttrs")
	proto.RegisterType((*ContactRequestAttrs)(nil), "berty.p2p.ContactRequestAttrs")
	proto.RegisterType((*ContactRequestAcceptedAttrs)(nil), "berty.p2p.ContactRequestAcceptedAttrs")
	proto.RegisterType((*ContactShareMeAttrs)(nil), "berty.p2p.ContactShareMeAttrs")
	proto.RegisterType((*ContactShareAttrs)(nil), "berty.p2p.ContactShareAttrs")
	proto.RegisterType((*ConversationInviteAttrs)(nil), "berty.p2p.ConversationInviteAttrs")
	proto.RegisterType((*ConversationNewMessageAttrs)(nil), "berty.p2p.ConversationNewMessageAttrs")
	proto.RegisterEnum("berty.p2p.Kind", Kind_name, Kind_value)
}
func (m *SentAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SentAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AckAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AckAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.ErrMsg) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i += copy(dAtA[i:], m.ErrMsg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PingAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PingAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ContactRequestAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Me != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.Me.Size()))
		n1, err := m.Me.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.IntroText) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.IntroText)))
		i += copy(dAtA[i:], m.IntroText)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ContactRequestAcceptedAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestAcceptedAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ContactShareMeAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactShareMeAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Me != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.Me.Size()))
		n2, err := m.Me.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ContactShareAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactShareAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Contact != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.Contact.Size()))
		n3, err := m.Contact.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ConversationInviteAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationInviteAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Conversation != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.Conversation.Size()))
		n4, err := m.Conversation.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ConversationNewMessageAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationNewMessageAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Message != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.Message.Size()))
		n5, err := m.Message.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintKind(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SentAttrs) Size() (n int) {
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			l = len(s)
			n += 1 + l + sovKind(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AckAttrs) Size() (n int) {
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			l = len(s)
			n += 1 + l + sovKind(uint64(l))
		}
	}
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PingAttrs) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestAttrs) Size() (n int) {
	var l int
	_ = l
	if m.Me != nil {
		l = m.Me.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.IntroText)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestAcceptedAttrs) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactShareMeAttrs) Size() (n int) {
	var l int
	_ = l
	if m.Me != nil {
		l = m.Me.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactShareAttrs) Size() (n int) {
	var l int
	_ = l
	if m.Contact != nil {
		l = m.Contact.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationInviteAttrs) Size() (n int) {
	var l int
	_ = l
	if m.Conversation != nil {
		l = m.Conversation.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationNewMessageAttrs) Size() (n int) {
	var l int
	_ = l
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovKind(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozKind(x uint64) (n int) {
	return sovKind(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SentAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SentAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SentAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IDs = append(m.IDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AckAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AckAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AckAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IDs = append(m.IDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PingAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PingAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PingAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Me", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Me == nil {
				m.Me = &entity.Contact{}
			}
			if err := m.Me.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IntroText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IntroText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestAcceptedAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestAcceptedAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestAcceptedAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactShareMeAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactShareMeAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactShareMeAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Me", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Me == nil {
				m.Me = &entity.Contact{}
			}
			if err := m.Me.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactShareAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactShareAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactShareAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contact", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Contact == nil {
				m.Contact = &entity.Contact{}
			}
			if err := m.Contact.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationInviteAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationInviteAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationInviteAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conversation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Conversation == nil {
				m.Conversation = &entity.Conversation{}
			}
			if err := m.Conversation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationNewMessageAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationNewMessageAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationNewMessageAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &entity.Message{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKind(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKind
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKind
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKind
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthKind
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowKind
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipKind(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthKind = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKind   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("api/p2p/kind.proto", fileDescriptor_kind_241f5d52a928d5de) }

var fileDescriptor_kind_241f5d52a928d5de = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xdd, 0x6e, 0xd3, 0x30,
	0x18, 0x9d, 0xd3, 0x69, 0x5d, 0xbe, 0x4e, 0xc8, 0xf3, 0x60, 0xed, 0x3a, 0xad, 0x54, 0x91, 0x40,
	0x85, 0x8b, 0x46, 0x2a, 0xb7, 0x80, 0xd4, 0x6d, 0x5c, 0x4c, 0xa8, 0x13, 0xca, 0xe0, 0x02, 0xb8,
	0x40, 0x59, 0xfa, 0x91, 0x59, 0x55, 0xed, 0xe0, 0x98, 0xfd, 0xbc, 0x09, 0x2f, 0x01, 0xcf, 0xc0,
	0x25, 0x7f, 0x17, 0x3c, 0x01, 0x42, 0xe5, 0x45, 0x50, 0x62, 0x27, 0x64, 0xb4, 0x02, 0xed, 0xce,
	0x3e, 0x39, 0xdf, 0x39, 0x3e, 0x39, 0x36, 0xb0, 0x30, 0xe1, 0x7e, 0x32, 0x48, 0xfc, 0x09, 0x17,
	0xe3, 0x7e, 0xa2, 0xa4, 0x96, 0xcc, 0x3d, 0x46, 0xa5, 0x2f, 0xfa, 0xc9, 0x20, 0x69, 0x5f, 0x47,
	0xa1, 0xb9, 0xbe, 0xf0, 0x23, 0x29, 0x74, 0x18, 0x69, 0x43, 0x68, 0x6f, 0xfd, 0x41, 0x4f, 0x51,
	0xa5, 0xa1, 0xe6, 0x52, 0xd8, 0x4f, 0xc5, 0xc0, 0x14, 0xd3, 0x34, 0x8c, 0xb1, 0x40, 0x63, 0x19,
	0xcb, 0x7c, 0xe9, 0x67, 0x2b, 0x83, 0x7a, 0xb7, 0xc1, 0x3d, 0x42, 0xa1, 0x87, 0x5a, 0xab, 0x94,
	0x6d, 0x41, 0x8d, 0x8f, 0xd3, 0x16, 0xe9, 0xd6, 0x7a, 0xee, 0x6e, 0x7d, 0xf6, 0xe3, 0x66, 0xed,
	0x60, 0x3f, 0x0d, 0x32, 0xcc, 0x7b, 0x00, 0xab, 0xc3, 0x68, 0xf2, 0x3f, 0x1a, 0xdb, 0x84, 0x95,
	0x47, 0x4a, 0x8d, 0xd2, 0xb8, 0xe5, 0x74, 0x49, 0xcf, 0x0d, 0xec, 0xce, 0x6b, 0x80, 0xfb, 0x84,
	0x8b, 0x38, 0x9f, 0xf7, 0x5e, 0xc2, 0xc6, 0x9e, 0xc9, 0x12, 0xe0, 0x9b, 0xb7, 0x98, 0x5a, 0xf7,
	0x5b, 0xe0, 0x4c, 0xb1, 0x45, 0xba, 0xa4, 0xd7, 0x18, 0xdc, 0xe8, 0x9b, 0xfc, 0x26, 0x49, 0xbf,
	0xa0, 0x3b, 0x53, 0x64, 0x3b, 0x00, 0x5c, 0x68, 0x25, 0x5f, 0x69, 0x3c, 0xd7, 0xd6, 0xc6, 0xcd,
	0x91, 0xa7, 0x78, 0xae, 0xbd, 0x1d, 0xd8, 0xfe, 0x4b, 0x3c, 0x8a, 0x30, 0xd1, 0x38, 0x36, 0xde,
	0xf7, 0x4b, 0xef, 0xa3, 0x93, 0x50, 0xe1, 0x08, 0xaf, 0xe2, 0xed, 0xed, 0xc3, 0x7a, 0x75, 0xda,
	0xcc, 0xfa, 0x50, 0xb7, 0xd5, 0xfc, 0x5b, 0xa0, 0x60, 0x79, 0xcf, 0xa1, 0xb9, 0x57, 0x69, 0xed,
	0x40, 0x9c, 0x72, 0x6d, 0xb5, 0x1e, 0xc2, 0x5a, 0xb5, 0x50, 0x2b, 0xd8, 0x9e, 0x13, 0x2c, 0x19,
	0xc1, 0x25, 0xbe, 0x77, 0x98, 0xa7, 0x2f, 0xf7, 0x87, 0x78, 0x36, 0x32, 0x97, 0xa0, 0x3c, 0xaa,
	0xbd, 0x14, 0x8b, 0x8f, 0x6a, 0xc9, 0x41, 0xc1, 0xba, 0xfb, 0x91, 0xc0, 0xf2, 0x63, 0x2e, 0xc6,
	0xac, 0x01, 0xf5, 0x67, 0x62, 0x22, 0xe4, 0x99, 0xa0, 0x4b, 0x6c, 0x15, 0x96, 0xb3, 0x4b, 0x43,
	0x91, 0xd5, 0xa1, 0x36, 0x8c, 0x26, 0xf4, 0x75, 0x06, 0x65, 0x05, 0xd3, 0x98, 0x6d, 0xc0, 0xb5,
	0xcb, 0x05, 0xd0, 0xcf, 0x84, 0x6d, 0xc3, 0xe6, 0xe2, 0x56, 0xe8, 0x17, 0x52, 0x99, 0xb0, 0x9d,
	0xd0, 0xaf, 0x84, 0xad, 0xc3, 0x5a, 0x15, 0xa4, 0xdf, 0x08, 0x6b, 0x02, 0x9b, 0xff, 0x6f, 0xf4,
	0xbd, 0x63, 0xd5, 0x17, 0xa4, 0xa6, 0x1f, 0x9c, 0xdd, 0x3b, 0x9f, 0x66, 0x1d, 0xf2, 0x7d, 0xd6,
	0x21, 0x3f, 0x67, 0x1d, 0xf2, 0xee, 0x57, 0x67, 0xe9, 0x45, 0xd3, 0x64, 0xd6, 0x18, 0x9d, 0xf8,
	0x91, 0x54, 0xe8, 0xdb, 0xf7, 0x77, 0xbc, 0x92, 0xbf, 0x89, 0x7b, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xab, 0x93, 0x10, 0x59, 0x91, 0x03, 0x00, 0x00,
}
