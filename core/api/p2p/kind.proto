syntax = "proto3";

package berty.p2p;

import "entity/contact.proto";
import "entity/conversation.proto";
import "entity/message.proto";
import "entity/sender_alias.proto";
import "gogoproto/gogo.proto";

option go_package = "berty.tech/core/api/p2p";

enum Kind {
  Unknown = 0;

  //
  // System events
  //

  // Sent events are used by the UI.
  Sent = 101;

  // Ack events are created and sent after receiving an event from a peer.
  Ack = 102;

  // Ping events can be use to check and measure the availability of a peer.
  Ping = 103;

  //
  // Contact events
  //

  ContactRequest = 201;
  ContactRequestAccepted = 202;
  ContactShareMe = 203;
  ContactShare = 204;

  //
  // Conversation events
  //

  ConversationInvite = 301;
  ConversationNewMessage = 302;

  // Devtool events
  DevtoolsMapset = 401;

  //
  // SenderAlias events
  //

  SenderAliasUpdate = 501;
}

//
// System events
//

message SentAttrs { repeated string ids = 1 [(gogoproto.customname) = "IDs"]; }
message AckAttrs { repeated string ids = 1 [(gogoproto.customname) = "IDs"]; string ErrMsg = 2; }
message PingAttrs {}

//
// Contact events
//

message ContactRequestAttrs { berty.entity.Contact me = 1; string intro_text = 2; }
message ContactRequestAcceptedAttrs { }
message ContactShareMeAttrs { berty.entity.Contact me = 1; }
message ContactShareAttrs { berty.entity.Contact contact = 1; }

//
// Conversation events
//

message ConversationInviteAttrs { berty.entity.Conversation conversation = 1; }
message ConversationNewMessageAttrs { berty.entity.Message message = 1; }

//
// Devtools events
//

message DevtoolsMapsetAttrs { string key = 1; string val = 2; }

//
// SenderAlias events
//

message SenderAliasUpdateAttrs { repeated berty.entity.SenderAlias aliases = 1; }
