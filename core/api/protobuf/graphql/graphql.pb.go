// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/protobuf/graphql/graphql.proto

package graphql // import "berty.tech/core/api/protobuf/graphql"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_graphql_23670d604dbebb79, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Node.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return m.Size()
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

var E_GraphqlFields = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         53001,
	Name:          "gql.graphql_fields",
	Tag:           "bytes,53001,opt,name=graphql_fields,json=graphqlFields",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         53002,
	Name:          "gql.graphql_type",
	Tag:           "bytes,53002,opt,name=graphql_type,json=graphqlType",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlInterface = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         53003,
	Name:          "gql.graphql_interface",
	Tag:           "bytes,53003,opt,name=graphql_interface,json=graphqlInterface",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlOutput = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         53007,
	Name:          "gql.graphql_output",
	Tag:           "bytes,53007,opt,name=graphql_output,json=graphqlOutput",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlId = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         53004,
	Name:          "gql.graphql_id",
	Tag:           "varint,53004,opt,name=graphql_id,json=graphqlId",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlResolver = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         53005,
	Name:          "gql.graphql_resolver",
	Tag:           "varint,53005,opt,name=graphql_resolver,json=graphqlResolver",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlSpread = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         53006,
	Name:          "gql.graphql_spread",
	Tag:           "varint,53006,opt,name=graphql_spread,json=graphqlSpread",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlNullable = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         53008,
	Name:          "gql.graphql_nullable",
	Tag:           "varint,53008,opt,name=graphql_nullable,json=graphqlNullable",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

var E_GraphqlNonNullable = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         53009,
	Name:          "gql.graphql_non_nullable",
	Tag:           "varint,53009,opt,name=graphql_non_nullable,json=graphqlNonNullable",
	Filename:      "api/protobuf/graphql/graphql.proto",
}

func init() {
	proto.RegisterType((*Node)(nil), "gql.Node")
	proto.RegisterExtension(E_GraphqlFields)
	proto.RegisterExtension(E_GraphqlType)
	proto.RegisterExtension(E_GraphqlInterface)
	proto.RegisterExtension(E_GraphqlOutput)
	proto.RegisterExtension(E_GraphqlId)
	proto.RegisterExtension(E_GraphqlResolver)
	proto.RegisterExtension(E_GraphqlSpread)
	proto.RegisterExtension(E_GraphqlNullable)
	proto.RegisterExtension(E_GraphqlNonNullable)
}
func (m *Node) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Node) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ID) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGraphql(dAtA, i, uint64(len(m.ID)))
		i += copy(dAtA[i:], m.ID)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintGraphql(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Node) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovGraphql(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGraphql(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGraphql(x uint64) (n int) {
	return sovGraphql(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Node) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGraphql
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Node: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Node: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGraphql
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGraphql
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGraphql(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGraphql
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGraphql(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGraphql
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGraphql
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGraphql
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthGraphql
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGraphql
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGraphql(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGraphql = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGraphql   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("api/protobuf/graphql/graphql.proto", fileDescriptor_graphql_23670d604dbebb79)
}

var fileDescriptor_graphql_23670d604dbebb79 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xd3, 0xcf, 0x4a, 0xc3, 0x30,
	0x1c, 0x07, 0x70, 0xbb, 0x89, 0xb8, 0xf8, 0xbf, 0xec, 0x30, 0x07, 0xd6, 0x31, 0x3c, 0x78, 0x6a,
	0x0f, 0x82, 0x87, 0x1e, 0x3c, 0x4c, 0x99, 0x4c, 0xd8, 0x86, 0xd5, 0x93, 0x97, 0xd1, 0x36, 0x59,
	0x57, 0x08, 0x4d, 0x96, 0xa6, 0xc2, 0x1e, 0xc1, 0xff, 0x7a, 0xf3, 0xe4, 0xf3, 0x78, 0xf4, 0x09,
	0x64, 0xd4, 0x17, 0xf0, 0x11, 0x64, 0x59, 0xb2, 0x8d, 0x29, 0xd4, 0x53, 0x43, 0x9a, 0xef, 0x27,
	0xdf, 0x5f, 0xa1, 0xa0, 0xea, 0xd2, 0xd0, 0xa2, 0x8c, 0x70, 0xe2, 0x25, 0x5d, 0x2b, 0x60, 0x2e,
	0xed, 0xf5, 0xb1, 0x7a, 0x9a, 0xe2, 0x85, 0x9e, 0x0f, 0xfa, 0xb8, 0x5c, 0x09, 0x08, 0x09, 0x30,
	0x9a, 0x9e, 0x85, 0x28, 0xf6, 0x59, 0x48, 0x39, 0x61, 0xe3, 0x63, 0xe5, 0x62, 0x40, 0x02, 0x22,
	0x96, 0xd6, 0x68, 0x35, 0xde, 0xad, 0x56, 0xc1, 0x62, 0x8b, 0x40, 0xa4, 0x97, 0x41, 0x2e, 0x84,
	0x25, 0xad, 0xa2, 0xed, 0x17, 0x6a, 0x60, 0xf8, 0xbd, 0xad, 0xa5, 0x9f, 0xbb, 0xb9, 0xc6, 0x89,
	0x93, 0x0b, 0xa1, 0x7d, 0x0a, 0xd6, 0xe5, 0x8d, 0x9d, 0x6e, 0x88, 0x30, 0x8c, 0x75, 0xc3, 0x1c,
	0x5f, 0x67, 0xaa, 0xeb, 0xcc, 0x26, 0xe2, 0x3d, 0x02, 0xdb, 0x94, 0x87, 0x24, 0x8a, 0x4b, 0x37,
	0x6f, 0xf9, 0x91, 0xe4, 0xac, 0xc9, 0x5c, 0x5d, 0xc4, 0xec, 0x63, 0xb0, 0xaa, 0x20, 0x3e, 0xa0,
	0x28, 0x93, 0xb9, 0x95, 0xcc, 0x8a, 0x4c, 0x5d, 0x0e, 0x28, 0xb2, 0x9b, 0x60, 0x4b, 0x21, 0x61,
	0xc4, 0x11, 0xeb, 0xba, 0x7e, 0xb6, 0x74, 0x27, 0xa5, 0x4d, 0x19, 0x6d, 0xa8, 0xe4, 0xec, 0x70,
	0x24, 0xe1, 0x34, 0xe1, 0x99, 0xd6, 0xd3, 0xdc, 0x70, 0x6d, 0x11, 0xb3, 0x8f, 0x00, 0x98, 0xf4,
	0x82, 0xfa, 0xce, 0x2f, 0x44, 0x7c, 0x03, 0x65, 0xdc, 0x0b, 0x63, 0xd9, 0x29, 0xa8, 0x3e, 0xd0,
	0x3e, 0x03, 0xaa, 0x5c, 0x87, 0xa1, 0x98, 0xe0, 0x6b, 0xc4, 0xb2, 0x94, 0x07, 0xa9, 0x6c, 0xc8,
	0xa0, 0x23, 0x73, 0x76, 0x7d, 0x3a, 0x54, 0x4c, 0x19, 0x72, 0x33, 0xfb, 0x3c, 0x4a, 0x49, 0xcd,
	0x74, 0x21, 0x52, 0xb3, 0x9d, 0xa2, 0x04, 0x63, 0xd7, 0xc3, 0x28, 0x4b, 0x7a, 0x9e, 0xeb, 0xd4,
	0x92, 0x39, 0xfb, 0x1c, 0x14, 0x27, 0x16, 0x89, 0xfe, 0xed, 0xbd, 0x48, 0x4f, 0x57, 0x1e, 0x89,
	0x14, 0x59, 0x3b, 0x7c, 0x4f, 0x0d, 0xed, 0x23, 0x35, 0xb4, 0x61, 0x6a, 0x68, 0xaf, 0x5f, 0xc6,
	0xc2, 0xd5, 0x9e, 0x87, 0x18, 0x1f, 0x98, 0x1c, 0xf9, 0x3d, 0xcb, 0x27, 0x0c, 0x59, 0x7f, 0xfd,
	0x3f, 0xde, 0x92, 0xd8, 0x39, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x1a, 0xbb, 0x65, 0x5e,
	0x03, 0x00, 0x00,
}
