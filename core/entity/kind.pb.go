// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: entity/kind.proto

package entity

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	push "berty.tech/core/push"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Kind int32

const (
	// Unknown events should never happen
	Kind_Unknown Kind = 0
	// Sent events are used by the UI.
	Kind_Sent Kind = 101
	// Ack events are created and sent after receiving an event from a peer.
	Kind_Ack Kind = 102
	// Ping events can be use to check and measure the availability of a peer.
	Kind_Ping Kind = 103
	// Seen events are sent by frontend
	Kind_Seen                   Kind = 104
	Kind_ContactRequest         Kind = 201
	Kind_ContactRequestAccepted Kind = 202
	Kind_ContactShareMe         Kind = 203
	Kind_ContactShare           Kind = 204
	Kind_ConversationInvite     Kind = 301
	Kind_ConversationNewMessage Kind = 302
	Kind_ConversationRead       Kind = 303
	Kind_ConversationUpdate     Kind = 304
	//
	// ConversationMember events
	//
	Kind_ConversationMemberInvite   Kind = 701
	Kind_ConversationMemberLeave    Kind = 702
	Kind_ConversationMemberSetTitle Kind = 703
	Kind_ConversationMemberSetTopic Kind = 704
	Kind_ConversationMemberSetOwner Kind = 705
	Kind_ConversationMemberBlock    Kind = 706
	Kind_ConversationMemberUnblock  Kind = 707
	Kind_ConversationMemberRead     Kind = 708
	Kind_ConversationMemberWrite    Kind = 709
	// Devtool events
	Kind_DevtoolsMapset         Kind = 401
	Kind_SenderAliasUpdate      Kind = 501
	Kind_DeviceUpdatePushConfig Kind = 601
	Kind_DevicePushTo           Kind = 602
	// Node events aren't used in communication, and most of the time they aren't stored in DB.
	// see core/api/node/kind.proto
	Kind_Node Kind = 99
)

var Kind_name = map[int32]string{
	0:   "Unknown",
	101: "Sent",
	102: "Ack",
	103: "Ping",
	104: "Seen",
	201: "ContactRequest",
	202: "ContactRequestAccepted",
	203: "ContactShareMe",
	204: "ContactShare",
	301: "ConversationInvite",
	302: "ConversationNewMessage",
	303: "ConversationRead",
	304: "ConversationUpdate",
	701: "ConversationMemberInvite",
	702: "ConversationMemberLeave",
	703: "ConversationMemberSetTitle",
	704: "ConversationMemberSetTopic",
	705: "ConversationMemberSetOwner",
	706: "ConversationMemberBlock",
	707: "ConversationMemberUnblock",
	708: "ConversationMemberRead",
	709: "ConversationMemberWrite",
	401: "DevtoolsMapset",
	501: "SenderAliasUpdate",
	601: "DeviceUpdatePushConfig",
	602: "DevicePushTo",
	99:  "Node",
}

var Kind_value = map[string]int32{
	"Unknown":                    0,
	"Sent":                       101,
	"Ack":                        102,
	"Ping":                       103,
	"Seen":                       104,
	"ContactRequest":             201,
	"ContactRequestAccepted":     202,
	"ContactShareMe":             203,
	"ContactShare":               204,
	"ConversationInvite":         301,
	"ConversationNewMessage":     302,
	"ConversationRead":           303,
	"ConversationUpdate":         304,
	"ConversationMemberInvite":   701,
	"ConversationMemberLeave":    702,
	"ConversationMemberSetTitle": 703,
	"ConversationMemberSetTopic": 704,
	"ConversationMemberSetOwner": 705,
	"ConversationMemberBlock":    706,
	"ConversationMemberUnblock":  707,
	"ConversationMemberRead":     708,
	"ConversationMemberWrite":    709,
	"DevtoolsMapset":             401,
	"SenderAliasUpdate":          501,
	"DeviceUpdatePushConfig":     601,
	"DevicePushTo":               602,
	"Node":                       99,
}

func (x Kind) String() string {
	return proto.EnumName(Kind_name, int32(x))
}

func (Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{0}
}

type SentAttrs struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SentAttrs) Reset()         { *m = SentAttrs{} }
func (m *SentAttrs) String() string { return proto.CompactTextString(m) }
func (*SentAttrs) ProtoMessage()    {}
func (*SentAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{0}
}
func (m *SentAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SentAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SentAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SentAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SentAttrs.Merge(m, src)
}
func (m *SentAttrs) XXX_Size() int {
	return m.Size()
}
func (m *SentAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_SentAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_SentAttrs proto.InternalMessageInfo

func (m *SentAttrs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

type AckAttrs struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckAttrs) Reset()         { *m = AckAttrs{} }
func (m *AckAttrs) String() string { return proto.CompactTextString(m) }
func (*AckAttrs) ProtoMessage()    {}
func (*AckAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{1}
}
func (m *AckAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AckAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AckAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AckAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckAttrs.Merge(m, src)
}
func (m *AckAttrs) XXX_Size() int {
	return m.Size()
}
func (m *AckAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_AckAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_AckAttrs proto.InternalMessageInfo

func (m *AckAttrs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

func (m *AckAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type PingAttrs struct {
	T                    bool     `protobuf:"varint,1,opt,name=T,proto3" json:"T,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingAttrs) Reset()         { *m = PingAttrs{} }
func (m *PingAttrs) String() string { return proto.CompactTextString(m) }
func (*PingAttrs) ProtoMessage()    {}
func (*PingAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{2}
}
func (m *PingAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PingAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PingAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PingAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingAttrs.Merge(m, src)
}
func (m *PingAttrs) XXX_Size() int {
	return m.Size()
}
func (m *PingAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_PingAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_PingAttrs proto.InternalMessageInfo

func (m *PingAttrs) GetT() bool {
	if m != nil {
		return m.T
	}
	return false
}

type SeenAttrs struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeenAttrs) Reset()         { *m = SeenAttrs{} }
func (m *SeenAttrs) String() string { return proto.CompactTextString(m) }
func (*SeenAttrs) ProtoMessage()    {}
func (*SeenAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{3}
}
func (m *SeenAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SeenAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SeenAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SeenAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeenAttrs.Merge(m, src)
}
func (m *SeenAttrs) XXX_Size() int {
	return m.Size()
}
func (m *SeenAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_SeenAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_SeenAttrs proto.InternalMessageInfo

func (m *SeenAttrs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

type ContactRequestAttrs struct {
	Me                   *Contact `protobuf:"bytes,1,opt,name=me,proto3" json:"me,omitempty"`
	IntroText            string   `protobuf:"bytes,2,opt,name=intro_text,json=introText,proto3" json:"intro_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestAttrs) Reset()         { *m = ContactRequestAttrs{} }
func (m *ContactRequestAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactRequestAttrs) ProtoMessage()    {}
func (*ContactRequestAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{4}
}
func (m *ContactRequestAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestAttrs.Merge(m, src)
}
func (m *ContactRequestAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestAttrs proto.InternalMessageInfo

func (m *ContactRequestAttrs) GetMe() *Contact {
	if m != nil {
		return m.Me
	}
	return nil
}

func (m *ContactRequestAttrs) GetIntroText() string {
	if m != nil {
		return m.IntroText
	}
	return ""
}

type ContactRequestAcceptedAttrs struct {
	T                    bool     `protobuf:"varint,1,opt,name=T,proto3" json:"T,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactRequestAcceptedAttrs) Reset()         { *m = ContactRequestAcceptedAttrs{} }
func (m *ContactRequestAcceptedAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactRequestAcceptedAttrs) ProtoMessage()    {}
func (*ContactRequestAcceptedAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{5}
}
func (m *ContactRequestAcceptedAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactRequestAcceptedAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactRequestAcceptedAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactRequestAcceptedAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestAcceptedAttrs.Merge(m, src)
}
func (m *ContactRequestAcceptedAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactRequestAcceptedAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestAcceptedAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestAcceptedAttrs proto.InternalMessageInfo

func (m *ContactRequestAcceptedAttrs) GetT() bool {
	if m != nil {
		return m.T
	}
	return false
}

type ContactShareMeAttrs struct {
	Me                   *Contact `protobuf:"bytes,1,opt,name=me,proto3" json:"me,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactShareMeAttrs) Reset()         { *m = ContactShareMeAttrs{} }
func (m *ContactShareMeAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactShareMeAttrs) ProtoMessage()    {}
func (*ContactShareMeAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{6}
}
func (m *ContactShareMeAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactShareMeAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactShareMeAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactShareMeAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactShareMeAttrs.Merge(m, src)
}
func (m *ContactShareMeAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactShareMeAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactShareMeAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactShareMeAttrs proto.InternalMessageInfo

func (m *ContactShareMeAttrs) GetMe() *Contact {
	if m != nil {
		return m.Me
	}
	return nil
}

type ContactShareAttrs struct {
	Contact              *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactShareAttrs) Reset()         { *m = ContactShareAttrs{} }
func (m *ContactShareAttrs) String() string { return proto.CompactTextString(m) }
func (*ContactShareAttrs) ProtoMessage()    {}
func (*ContactShareAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{7}
}
func (m *ContactShareAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactShareAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactShareAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactShareAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactShareAttrs.Merge(m, src)
}
func (m *ContactShareAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ContactShareAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactShareAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactShareAttrs proto.InternalMessageInfo

func (m *ContactShareAttrs) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type ConversationInviteAttrs struct {
	Conversation         *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConversationInviteAttrs) Reset()         { *m = ConversationInviteAttrs{} }
func (m *ConversationInviteAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationInviteAttrs) ProtoMessage()    {}
func (*ConversationInviteAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{8}
}
func (m *ConversationInviteAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationInviteAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationInviteAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationInviteAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationInviteAttrs.Merge(m, src)
}
func (m *ConversationInviteAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationInviteAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationInviteAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationInviteAttrs proto.InternalMessageInfo

func (m *ConversationInviteAttrs) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationNewMessageAttrs struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationNewMessageAttrs) Reset()         { *m = ConversationNewMessageAttrs{} }
func (m *ConversationNewMessageAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationNewMessageAttrs) ProtoMessage()    {}
func (*ConversationNewMessageAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{9}
}
func (m *ConversationNewMessageAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationNewMessageAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationNewMessageAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationNewMessageAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationNewMessageAttrs.Merge(m, src)
}
func (m *ConversationNewMessageAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationNewMessageAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationNewMessageAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationNewMessageAttrs proto.InternalMessageInfo

func (m *ConversationNewMessageAttrs) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type ConversationReadAttrs struct {
	Conversation         *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConversationReadAttrs) Reset()         { *m = ConversationReadAttrs{} }
func (m *ConversationReadAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationReadAttrs) ProtoMessage()    {}
func (*ConversationReadAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{10}
}
func (m *ConversationReadAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationReadAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationReadAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationReadAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationReadAttrs.Merge(m, src)
}
func (m *ConversationReadAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationReadAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationReadAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationReadAttrs proto.InternalMessageInfo

func (m *ConversationReadAttrs) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationUpdateAttrs struct {
	Conversation         *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConversationUpdateAttrs) Reset()         { *m = ConversationUpdateAttrs{} }
func (m *ConversationUpdateAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationUpdateAttrs) ProtoMessage()    {}
func (*ConversationUpdateAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{11}
}
func (m *ConversationUpdateAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationUpdateAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationUpdateAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationUpdateAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationUpdateAttrs.Merge(m, src)
}
func (m *ConversationUpdateAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationUpdateAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationUpdateAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationUpdateAttrs proto.InternalMessageInfo

func (m *ConversationUpdateAttrs) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationMemberInviteAttrs struct {
	// id of ConversationMember{Action} is always the id of member that takes actions on conversation
	// it permit to identify the conversation
	// it permit to check if the contact match with the source of event
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// needed for members that doesn't know this contact
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
	// needed for the new member
	Conversation         *Conversation `protobuf:"bytes,3,opt,name=conversation,proto3" json:"conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConversationMemberInviteAttrs) Reset()         { *m = ConversationMemberInviteAttrs{} }
func (m *ConversationMemberInviteAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberInviteAttrs) ProtoMessage()    {}
func (*ConversationMemberInviteAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{12}
}
func (m *ConversationMemberInviteAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberInviteAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberInviteAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberInviteAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberInviteAttrs.Merge(m, src)
}
func (m *ConversationMemberInviteAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberInviteAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberInviteAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberInviteAttrs proto.InternalMessageInfo

func (m *ConversationMemberInviteAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberInviteAttrs) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ConversationMemberInviteAttrs) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationMemberLeaveAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberLeaveAttrs) Reset()         { *m = ConversationMemberLeaveAttrs{} }
func (m *ConversationMemberLeaveAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberLeaveAttrs) ProtoMessage()    {}
func (*ConversationMemberLeaveAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{13}
}
func (m *ConversationMemberLeaveAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberLeaveAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberLeaveAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberLeaveAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberLeaveAttrs.Merge(m, src)
}
func (m *ConversationMemberLeaveAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberLeaveAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberLeaveAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberLeaveAttrs proto.InternalMessageInfo

func (m *ConversationMemberLeaveAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ConversationMemberSetTitleAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberSetTitleAttrs) Reset()         { *m = ConversationMemberSetTitleAttrs{} }
func (m *ConversationMemberSetTitleAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberSetTitleAttrs) ProtoMessage()    {}
func (*ConversationMemberSetTitleAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{14}
}
func (m *ConversationMemberSetTitleAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberSetTitleAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberSetTitleAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberSetTitleAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberSetTitleAttrs.Merge(m, src)
}
func (m *ConversationMemberSetTitleAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberSetTitleAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberSetTitleAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberSetTitleAttrs proto.InternalMessageInfo

func (m *ConversationMemberSetTitleAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberSetTitleAttrs) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ConversationMemberSetTopicAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberSetTopicAttrs) Reset()         { *m = ConversationMemberSetTopicAttrs{} }
func (m *ConversationMemberSetTopicAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberSetTopicAttrs) ProtoMessage()    {}
func (*ConversationMemberSetTopicAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{15}
}
func (m *ConversationMemberSetTopicAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberSetTopicAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberSetTopicAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberSetTopicAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberSetTopicAttrs.Merge(m, src)
}
func (m *ConversationMemberSetTopicAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberSetTopicAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberSetTopicAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberSetTopicAttrs proto.InternalMessageInfo

func (m *ConversationMemberSetTopicAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberSetTopicAttrs) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type ConversationMemberSetOwnerAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContactId            string   `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberSetOwnerAttrs) Reset()         { *m = ConversationMemberSetOwnerAttrs{} }
func (m *ConversationMemberSetOwnerAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberSetOwnerAttrs) ProtoMessage()    {}
func (*ConversationMemberSetOwnerAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{16}
}
func (m *ConversationMemberSetOwnerAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberSetOwnerAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberSetOwnerAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberSetOwnerAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberSetOwnerAttrs.Merge(m, src)
}
func (m *ConversationMemberSetOwnerAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberSetOwnerAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberSetOwnerAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberSetOwnerAttrs proto.InternalMessageInfo

func (m *ConversationMemberSetOwnerAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberSetOwnerAttrs) GetContactId() string {
	if m != nil {
		return m.ContactId
	}
	return ""
}

type ConversationMemberBlockAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContactId            string   `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberBlockAttrs) Reset()         { *m = ConversationMemberBlockAttrs{} }
func (m *ConversationMemberBlockAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberBlockAttrs) ProtoMessage()    {}
func (*ConversationMemberBlockAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{17}
}
func (m *ConversationMemberBlockAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberBlockAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberBlockAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberBlockAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberBlockAttrs.Merge(m, src)
}
func (m *ConversationMemberBlockAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberBlockAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberBlockAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberBlockAttrs proto.InternalMessageInfo

func (m *ConversationMemberBlockAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberBlockAttrs) GetContactId() string {
	if m != nil {
		return m.ContactId
	}
	return ""
}

type ConversationMemberUnblockAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContactId            string   `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberUnblockAttrs) Reset()         { *m = ConversationMemberUnblockAttrs{} }
func (m *ConversationMemberUnblockAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberUnblockAttrs) ProtoMessage()    {}
func (*ConversationMemberUnblockAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{18}
}
func (m *ConversationMemberUnblockAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberUnblockAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberUnblockAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberUnblockAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberUnblockAttrs.Merge(m, src)
}
func (m *ConversationMemberUnblockAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberUnblockAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberUnblockAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberUnblockAttrs proto.InternalMessageInfo

func (m *ConversationMemberUnblockAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberUnblockAttrs) GetContactId() string {
	if m != nil {
		return m.ContactId
	}
	return ""
}

type ConversationMemberReadAttrs struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	At                   time.Time `protobuf:"bytes,2,opt,name=at,proto3,stdtime" json:"at"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ConversationMemberReadAttrs) Reset()         { *m = ConversationMemberReadAttrs{} }
func (m *ConversationMemberReadAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberReadAttrs) ProtoMessage()    {}
func (*ConversationMemberReadAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{19}
}
func (m *ConversationMemberReadAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberReadAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberReadAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberReadAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberReadAttrs.Merge(m, src)
}
func (m *ConversationMemberReadAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberReadAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberReadAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberReadAttrs proto.InternalMessageInfo

func (m *ConversationMemberReadAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberReadAttrs) GetAt() time.Time {
	if m != nil {
		return m.At
	}
	return time.Time{}
}

type ConversationMemberWriteAttrs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversationMemberWriteAttrs) Reset()         { *m = ConversationMemberWriteAttrs{} }
func (m *ConversationMemberWriteAttrs) String() string { return proto.CompactTextString(m) }
func (*ConversationMemberWriteAttrs) ProtoMessage()    {}
func (*ConversationMemberWriteAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{20}
}
func (m *ConversationMemberWriteAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversationMemberWriteAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversationMemberWriteAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversationMemberWriteAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationMemberWriteAttrs.Merge(m, src)
}
func (m *ConversationMemberWriteAttrs) XXX_Size() int {
	return m.Size()
}
func (m *ConversationMemberWriteAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationMemberWriteAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationMemberWriteAttrs proto.InternalMessageInfo

func (m *ConversationMemberWriteAttrs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConversationMemberWriteAttrs) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DevtoolsMapsetAttrs struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevtoolsMapsetAttrs) Reset()         { *m = DevtoolsMapsetAttrs{} }
func (m *DevtoolsMapsetAttrs) String() string { return proto.CompactTextString(m) }
func (*DevtoolsMapsetAttrs) ProtoMessage()    {}
func (*DevtoolsMapsetAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{21}
}
func (m *DevtoolsMapsetAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DevtoolsMapsetAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DevtoolsMapsetAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DevtoolsMapsetAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevtoolsMapsetAttrs.Merge(m, src)
}
func (m *DevtoolsMapsetAttrs) XXX_Size() int {
	return m.Size()
}
func (m *DevtoolsMapsetAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_DevtoolsMapsetAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_DevtoolsMapsetAttrs proto.InternalMessageInfo

func (m *DevtoolsMapsetAttrs) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DevtoolsMapsetAttrs) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type SenderAliasUpdateAttrs struct {
	Aliases              []*SenderAlias `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SenderAliasUpdateAttrs) Reset()         { *m = SenderAliasUpdateAttrs{} }
func (m *SenderAliasUpdateAttrs) String() string { return proto.CompactTextString(m) }
func (*SenderAliasUpdateAttrs) ProtoMessage()    {}
func (*SenderAliasUpdateAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{22}
}
func (m *SenderAliasUpdateAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SenderAliasUpdateAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SenderAliasUpdateAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SenderAliasUpdateAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SenderAliasUpdateAttrs.Merge(m, src)
}
func (m *SenderAliasUpdateAttrs) XXX_Size() int {
	return m.Size()
}
func (m *SenderAliasUpdateAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_SenderAliasUpdateAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_SenderAliasUpdateAttrs proto.InternalMessageInfo

func (m *SenderAliasUpdateAttrs) GetAliases() []*SenderAlias {
	if m != nil {
		return m.Aliases
	}
	return nil
}

type DeviceUpdatePushConfigAttrs struct {
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceUpdatePushConfigAttrs) Reset()         { *m = DeviceUpdatePushConfigAttrs{} }
func (m *DeviceUpdatePushConfigAttrs) String() string { return proto.CompactTextString(m) }
func (*DeviceUpdatePushConfigAttrs) ProtoMessage()    {}
func (*DeviceUpdatePushConfigAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{23}
}
func (m *DeviceUpdatePushConfigAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeviceUpdatePushConfigAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeviceUpdatePushConfigAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeviceUpdatePushConfigAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceUpdatePushConfigAttrs.Merge(m, src)
}
func (m *DeviceUpdatePushConfigAttrs) XXX_Size() int {
	return m.Size()
}
func (m *DeviceUpdatePushConfigAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceUpdatePushConfigAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceUpdatePushConfigAttrs proto.InternalMessageInfo

func (m *DeviceUpdatePushConfigAttrs) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type DevicePushToAttrs struct {
	PushIdentifier       []byte        `protobuf:"bytes,1,opt,name=push_identifier,json=pushIdentifier,proto3" json:"push_identifier,omitempty"`
	Envelope             []byte        `protobuf:"bytes,2,opt,name=envelope,proto3" json:"envelope,omitempty"`
	Priority             push.Priority `protobuf:"varint,3,opt,name=priority,proto3,enum=berty.push.Priority" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DevicePushToAttrs) Reset()         { *m = DevicePushToAttrs{} }
func (m *DevicePushToAttrs) String() string { return proto.CompactTextString(m) }
func (*DevicePushToAttrs) ProtoMessage()    {}
func (*DevicePushToAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{24}
}
func (m *DevicePushToAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DevicePushToAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DevicePushToAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DevicePushToAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevicePushToAttrs.Merge(m, src)
}
func (m *DevicePushToAttrs) XXX_Size() int {
	return m.Size()
}
func (m *DevicePushToAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_DevicePushToAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_DevicePushToAttrs proto.InternalMessageInfo

func (m *DevicePushToAttrs) GetPushIdentifier() []byte {
	if m != nil {
		return m.PushIdentifier
	}
	return nil
}

func (m *DevicePushToAttrs) GetEnvelope() []byte {
	if m != nil {
		return m.Envelope
	}
	return nil
}

func (m *DevicePushToAttrs) GetPriority() push.Priority {
	if m != nil {
		return m.Priority
	}
	return push.Priority_UnknownPriority
}

// NodeAttrs is proto-compatible with api/node.NodeEvent, without enums.
// see api/node/service.proto.
type NodeAttrs struct {
	Kind                 int32    `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Attributes           []byte   `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeAttrs) Reset()         { *m = NodeAttrs{} }
func (m *NodeAttrs) String() string { return proto.CompactTextString(m) }
func (*NodeAttrs) ProtoMessage()    {}
func (*NodeAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8119a288b3154fed, []int{25}
}
func (m *NodeAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NodeAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NodeAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NodeAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAttrs.Merge(m, src)
}
func (m *NodeAttrs) XXX_Size() int {
	return m.Size()
}
func (m *NodeAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAttrs proto.InternalMessageInfo

func (m *NodeAttrs) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *NodeAttrs) GetAttributes() []byte {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func init() {
	proto.RegisterEnum("berty.entity.Kind", Kind_name, Kind_value)
	proto.RegisterType((*SentAttrs)(nil), "berty.entity.SentAttrs")
	proto.RegisterType((*AckAttrs)(nil), "berty.entity.AckAttrs")
	proto.RegisterType((*PingAttrs)(nil), "berty.entity.PingAttrs")
	proto.RegisterType((*SeenAttrs)(nil), "berty.entity.SeenAttrs")
	proto.RegisterType((*ContactRequestAttrs)(nil), "berty.entity.ContactRequestAttrs")
	proto.RegisterType((*ContactRequestAcceptedAttrs)(nil), "berty.entity.ContactRequestAcceptedAttrs")
	proto.RegisterType((*ContactShareMeAttrs)(nil), "berty.entity.ContactShareMeAttrs")
	proto.RegisterType((*ContactShareAttrs)(nil), "berty.entity.ContactShareAttrs")
	proto.RegisterType((*ConversationInviteAttrs)(nil), "berty.entity.ConversationInviteAttrs")
	proto.RegisterType((*ConversationNewMessageAttrs)(nil), "berty.entity.ConversationNewMessageAttrs")
	proto.RegisterType((*ConversationReadAttrs)(nil), "berty.entity.ConversationReadAttrs")
	proto.RegisterType((*ConversationUpdateAttrs)(nil), "berty.entity.ConversationUpdateAttrs")
	proto.RegisterType((*ConversationMemberInviteAttrs)(nil), "berty.entity.ConversationMemberInviteAttrs")
	proto.RegisterType((*ConversationMemberLeaveAttrs)(nil), "berty.entity.ConversationMemberLeaveAttrs")
	proto.RegisterType((*ConversationMemberSetTitleAttrs)(nil), "berty.entity.ConversationMemberSetTitleAttrs")
	proto.RegisterType((*ConversationMemberSetTopicAttrs)(nil), "berty.entity.ConversationMemberSetTopicAttrs")
	proto.RegisterType((*ConversationMemberSetOwnerAttrs)(nil), "berty.entity.ConversationMemberSetOwnerAttrs")
	proto.RegisterType((*ConversationMemberBlockAttrs)(nil), "berty.entity.ConversationMemberBlockAttrs")
	proto.RegisterType((*ConversationMemberUnblockAttrs)(nil), "berty.entity.ConversationMemberUnblockAttrs")
	proto.RegisterType((*ConversationMemberReadAttrs)(nil), "berty.entity.ConversationMemberReadAttrs")
	proto.RegisterType((*ConversationMemberWriteAttrs)(nil), "berty.entity.ConversationMemberWriteAttrs")
	proto.RegisterType((*DevtoolsMapsetAttrs)(nil), "berty.entity.DevtoolsMapsetAttrs")
	proto.RegisterType((*SenderAliasUpdateAttrs)(nil), "berty.entity.SenderAliasUpdateAttrs")
	proto.RegisterType((*DeviceUpdatePushConfigAttrs)(nil), "berty.entity.DeviceUpdatePushConfigAttrs")
	proto.RegisterType((*DevicePushToAttrs)(nil), "berty.entity.DevicePushToAttrs")
	proto.RegisterType((*NodeAttrs)(nil), "berty.entity.NodeAttrs")
}

func init() { proto.RegisterFile("entity/kind.proto", fileDescriptor_8119a288b3154fed) }

var fileDescriptor_8119a288b3154fed = []byte{
	// 1062 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcb, 0x6e, 0x23, 0x45,
	0x14, 0x4d, 0xb7, 0xed, 0xd8, 0xbe, 0xb1, 0x42, 0xa5, 0xf2, 0x76, 0x26, 0x76, 0xd4, 0x12, 0x10,
	0x01, 0xb2, 0xd1, 0x0c, 0x1b, 0x24, 0x34, 0x28, 0x0f, 0x09, 0x45, 0x83, 0x33, 0x51, 0xc7, 0xd1,
	0x08, 0x58, 0x58, 0xed, 0xee, 0x1b, 0xa7, 0x14, 0xbb, 0xcb, 0x74, 0x57, 0x9c, 0xc9, 0x2f, 0xb0,
	0x82, 0x1d, 0x4b, 0x7e, 0x80, 0xc7, 0x0f, 0xf0, 0x06, 0x69, 0x78, 0x2c, 0xd8, 0xc2, 0x62, 0x40,
	0xe1, 0x1b, 0xd8, 0xb0, 0x42, 0xd5, 0x55, 0xed, 0xb4, 0x5f, 0x99, 0x09, 0x9a, 0x4d, 0x54, 0x7d,
	0xeb, 0xd6, 0xa9, 0x93, 0x5b, 0xf7, 0xdc, 0x63, 0x98, 0x43, 0x5f, 0x30, 0x71, 0x51, 0x3d, 0x65,
	0xbe, 0x57, 0xe9, 0x06, 0x5c, 0x70, 0x5a, 0x68, 0x62, 0x20, 0x2e, 0x2a, 0x6a, 0xa3, 0x58, 0x6e,
	0x71, 0xde, 0x6a, 0x63, 0x35, 0xda, 0x6b, 0x9e, 0x1d, 0x57, 0x05, 0xeb, 0x60, 0x28, 0x9c, 0x4e,
	0x57, 0xa5, 0x17, 0x17, 0x34, 0x82, 0xcb, 0x7d, 0xe1, 0xb8, 0x42, 0x47, 0x57, 0xaf, 0xa2, 0x3d,
	0x0c, 0x42, 0x47, 0x30, 0xee, 0x0f, 0x1d, 0xe8, 0x60, 0x18, 0x3a, 0x2d, 0xd4, 0xd1, 0x79, 0x1d,
	0xf5, 0xb0, 0xc7, 0x5c, 0x1c, 0x42, 0x09, 0xd1, 0xf7, 0x30, 0x68, 0x38, 0x6d, 0xe6, 0x84, 0x7a,
	0xeb, 0xb9, 0xee, 0x59, 0x78, 0x52, 0x95, 0x7f, 0x62, 0xd8, 0x16, 0x6f, 0xf1, 0x68, 0x59, 0x95,
	0x2b, 0x15, 0xb5, 0x5e, 0x80, 0xfc, 0x21, 0xfa, 0x62, 0x4b, 0x88, 0x20, 0xa4, 0xab, 0x90, 0x62,
	0x5e, 0xb8, 0x62, 0x6c, 0xa4, 0x36, 0xf3, 0xdb, 0xd9, 0xcb, 0xc7, 0xe5, 0xd4, 0xde, 0x6e, 0x68,
	0xcb, 0x98, 0x75, 0x17, 0x72, 0x5b, 0xee, 0xe9, 0x93, 0xd2, 0xe8, 0x32, 0x64, 0x31, 0x08, 0x1a,
	0x9d, 0xb0, 0xb5, 0x62, 0x6e, 0x18, 0x9b, 0x79, 0x7b, 0x1a, 0x83, 0xa0, 0x16, 0xb6, 0xac, 0x55,
	0xc8, 0x1f, 0x30, 0xbf, 0xa5, 0x00, 0x0a, 0x60, 0xd4, 0x57, 0x8c, 0x0d, 0x63, 0x33, 0x67, 0x1b,
	0x75, 0x45, 0x01, 0xfd, 0x27, 0x52, 0x78, 0x0f, 0xe6, 0x77, 0x54, 0x0d, 0x6d, 0x7c, 0xff, 0x0c,
	0x43, 0x4d, 0xfa, 0x79, 0x30, 0x3b, 0x18, 0xa1, 0xcd, 0xdc, 0x5e, 0xac, 0x24, 0xdf, 0xa6, 0x12,
	0xa7, 0x9b, 0x1d, 0xa4, 0xeb, 0x00, 0xcc, 0x17, 0x01, 0x6f, 0x08, 0x7c, 0x28, 0x34, 0xb9, 0x7c,
	0x14, 0xa9, 0xe3, 0x43, 0x61, 0xbd, 0x0c, 0x6b, 0x43, 0xe0, 0xae, 0x8b, 0x5d, 0x81, 0xde, 0x38,
	0xc6, 0x6f, 0xf4, 0x99, 0x1c, 0x9e, 0x38, 0x01, 0xd6, 0xf0, 0x26, 0x4c, 0xac, 0x5d, 0x98, 0x4b,
	0x9e, 0x56, 0x67, 0xab, 0x90, 0xd5, 0x0d, 0x72, 0x3d, 0x40, 0x9c, 0x65, 0xbd, 0x03, 0xcb, 0x3b,
	0x89, 0xde, 0xd9, 0xf3, 0x7b, 0x4c, 0x68, 0xac, 0xbb, 0x50, 0x48, 0xb6, 0x95, 0x06, 0x2c, 0x8e,
	0x00, 0xf6, 0x33, 0xec, 0x81, 0x7c, 0x6b, 0x3f, 0xaa, 0x45, 0xff, 0x7b, 0x1f, 0xcf, 0x6b, 0xaa,
	0x15, 0xfb, 0x54, 0x75, 0x6b, 0x8e, 0xa7, 0xaa, 0x93, 0xed, 0x38, 0xcb, 0x7a, 0x00, 0x8b, 0x03,
	0xb7, 0xa1, 0xe3, 0x3d, 0x1b, 0xa2, 0x43, 0x35, 0x38, 0xea, 0x7a, 0xce, 0xb3, 0xaa, 0xc1, 0x27,
	0x06, 0xac, 0x27, 0xb7, 0x6b, 0xd8, 0x69, 0x62, 0x90, 0xac, 0xf2, 0x2c, 0x98, 0xcc, 0x8b, 0x70,
	0xf3, 0xb6, 0xc9, 0xbc, 0xe4, 0x0b, 0x9a, 0x4f, 0xf3, 0x82, 0x23, 0x14, 0x53, 0x37, 0xa4, 0x58,
	0x81, 0x5b, 0xa3, 0x0c, 0xdf, 0x46, 0xa7, 0x37, 0x9e, 0xa0, 0xf5, 0x16, 0x94, 0x47, 0xf3, 0x0f,
	0x51, 0xd4, 0x99, 0x68, 0x4f, 0xf8, 0x9f, 0x16, 0x20, 0x23, 0xe4, 0xae, 0xd6, 0x8b, 0xfa, 0x98,
	0x0c, 0xc4, 0xbb, 0xcc, 0x9d, 0x0c, 0x24, 0x77, 0xfb, 0x40, 0xf2, 0xc3, 0x3a, 0x98, 0x00, 0x74,
	0xff, 0xdc, 0xc7, 0x60, 0x3c, 0xd0, 0x3a, 0x80, 0xae, 0x5f, 0x83, 0x79, 0xb1, 0x8c, 0x75, 0x64,
	0xcf, 0xb3, 0x6a, 0xe3, 0x6a, 0xb2, 0xdd, 0xe6, 0xf1, 0xe8, 0xba, 0x21, 0xdc, 0x7d, 0x28, 0x8d,
	0xc2, 0x1d, 0xf9, 0xcd, 0xff, 0x0d, 0xe8, 0x0e, 0x4a, 0x4b, 0x01, 0x5e, 0x09, 0x62, 0x18, 0xed,
	0x35, 0x30, 0x9d, 0xb8, 0x9d, 0x8a, 0x15, 0xe5, 0x34, 0x95, 0xd8, 0x69, 0x2a, 0xf5, 0xd8, 0x69,
	0xb6, 0x73, 0x8f, 0x1e, 0x97, 0xa7, 0x3e, 0xfc, 0xb3, 0x6c, 0xd8, 0xa6, 0x23, 0xac, 0xc6, 0xb8,
	0x22, 0x3c, 0x08, 0xae, 0xeb, 0xdc, 0x58, 0xd0, 0xe6, 0x53, 0x09, 0xfa, 0x75, 0x98, 0xdf, 0xc5,
	0x9e, 0xe0, 0xbc, 0x1d, 0xd6, 0x9c, 0x6e, 0x88, 0x7a, 0x12, 0x13, 0x48, 0x9d, 0xe2, 0x85, 0x06,
	0x96, 0x4b, 0x19, 0xe9, 0x39, 0x6d, 0x5d, 0x06, 0xb9, 0xb4, 0x6a, 0xb0, 0x74, 0x18, 0x99, 0xd5,
	0x96, 0xf4, 0xaa, 0xa4, 0x62, 0xef, 0x40, 0x36, 0xf2, 0x2f, 0x54, 0xd3, 0x7f, 0xe6, 0xf6, 0xea,
	0x20, 0x8b, 0xc4, 0x31, 0x3b, 0xce, 0xb4, 0xee, 0xc1, 0xda, 0x6e, 0x64, 0x88, 0x0a, 0xe9, 0xe0,
	0x2c, 0x3c, 0xd9, 0xe1, 0xfe, 0x31, 0xd3, 0x46, 0xf3, 0x0a, 0x4c, 0x2b, 0xbf, 0xd4, 0xfa, 0x5f,
	0x18, 0x84, 0x54, 0x47, 0x6d, 0x9d, 0x63, 0x7d, 0x60, 0xc0, 0x9c, 0x0a, 0x49, 0x9c, 0x3a, 0x57,
	0x18, 0x2f, 0x42, 0x64, 0xa5, 0x0d, 0xe6, 0xc9, 0x53, 0xc7, 0x0c, 0x83, 0x08, 0xac, 0x60, 0xcf,
	0xca, 0xf0, 0x5e, 0x3f, 0x4a, 0x8b, 0x90, 0x43, 0xbf, 0x87, 0x6d, 0xde, 0x55, 0x75, 0x2c, 0xd8,
	0xfd, 0x6f, 0xfa, 0x2a, 0xe4, 0xba, 0x01, 0xe3, 0x01, 0x13, 0x17, 0x91, 0xce, 0x67, 0xfb, 0x54,
	0x22, 0x87, 0x3e, 0xd0, 0x7b, 0x76, 0x3f, 0xcb, 0x7a, 0x13, 0xf2, 0xfb, 0xdc, 0xd3, 0xb5, 0xa1,
	0x90, 0x96, 0x3f, 0x40, 0xa2, 0x8b, 0x33, 0x76, 0xb4, 0xa6, 0x25, 0x00, 0x47, 0x88, 0x80, 0x35,
	0xcf, 0x04, 0x86, 0xfa, 0xc2, 0x44, 0xe4, 0xa5, 0x7f, 0xd3, 0x90, 0xbe, 0x27, 0x13, 0x67, 0x20,
	0x7b, 0xe4, 0x9f, 0xfa, 0xfc, 0xdc, 0x27, 0x53, 0x34, 0x07, 0x69, 0xe9, 0xf7, 0x04, 0x69, 0x16,
	0x52, 0x5b, 0xee, 0x29, 0x39, 0x96, 0x21, 0x69, 0xcd, 0xa4, 0xa5, 0x36, 0xd1, 0x27, 0x27, 0x74,
	0x1e, 0x66, 0x07, 0xed, 0x90, 0xfc, 0x64, 0xd0, 0x35, 0x58, 0x1a, 0xef, 0x91, 0xe4, 0x67, 0x23,
	0x71, 0x42, 0x7b, 0x22, 0xf9, 0xc5, 0xa0, 0x73, 0x50, 0x48, 0x06, 0xc9, 0xaf, 0x06, 0x5d, 0x06,
	0x3a, 0xea, 0x5b, 0xe4, 0x53, 0x53, 0xa3, 0x8f, 0x71, 0x1d, 0xf2, 0x99, 0x49, 0x17, 0x81, 0x0c,
	0x5b, 0x08, 0xf9, 0xdc, 0x1c, 0x06, 0x53, 0x4d, 0x40, 0xbe, 0x30, 0xe9, 0x3a, 0xac, 0x4c, 0x9a,
	0xde, 0xe4, 0xcb, 0x0c, 0xbd, 0x35, 0x68, 0x1c, 0x89, 0xd1, 0x49, 0xbe, 0xca, 0xd0, 0x32, 0x14,
	0x27, 0x0f, 0x4a, 0xf2, 0xf5, 0x35, 0x09, 0x72, 0xaa, 0x91, 0x6f, 0x26, 0x27, 0x44, 0x83, 0x8d,
	0x7c, 0x3b, 0x81, 0x40, 0x34, 0xa7, 0xc8, 0x77, 0x19, 0x5a, 0x82, 0xd5, 0x89, 0x63, 0x87, 0x7c,
	0x9f, 0x19, 0x2e, 0xd5, 0xd5, 0x14, 0x21, 0x3f, 0x4c, 0x80, 0x8e, 0xd4, 0x4f, 0x7e, 0xcc, 0xc8,
	0x67, 0x1a, 0x94, 0x2e, 0xf9, 0x28, 0x45, 0x97, 0x60, 0x6e, 0x44, 0x94, 0xe4, 0x9f, 0x94, 0xbc,
	0x67, 0xbc, 0xba, 0xc8, 0xef, 0x69, 0xf9, 0xb6, 0x49, 0xb1, 0x90, 0x3f, 0xd2, 0xb2, 0x7f, 0x64,
	0xcf, 0x12, 0x77, 0x7b, 0xf3, 0xd1, 0x65, 0xc9, 0xf8, 0xed, 0xb2, 0x64, 0xfc, 0x75, 0x59, 0x32,
	0x3e, 0xfe, 0xbb, 0x34, 0xf5, 0xee, 0x92, 0x6a, 0x77, 0x81, 0xee, 0x49, 0xd5, 0xe5, 0x01, 0x56,
	0x95, 0x06, 0x9b, 0xd3, 0xd1, 0x38, 0xbb, 0xf3, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x64, 0xb3,
	0x63, 0x28, 0x69, 0x0b, 0x00, 0x00,
}

func (m *SentAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SentAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SentAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IDs) > 0 {
		for iNdEx := len(m.IDs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IDs[iNdEx])
			copy(dAtA[i:], m.IDs[iNdEx])
			i = encodeVarintKind(dAtA, i, uint64(len(m.IDs[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AckAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AckAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AckAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrMsg) > 0 {
		i -= len(m.ErrMsg)
		copy(dAtA[i:], m.ErrMsg)
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.IDs) > 0 {
		for iNdEx := len(m.IDs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IDs[iNdEx])
			copy(dAtA[i:], m.IDs[iNdEx])
			i = encodeVarintKind(dAtA, i, uint64(len(m.IDs[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PingAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PingAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PingAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.T {
		i--
		if m.T {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SeenAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SeenAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SeenAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IDs) > 0 {
		for iNdEx := len(m.IDs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IDs[iNdEx])
			copy(dAtA[i:], m.IDs[iNdEx])
			i = encodeVarintKind(dAtA, i, uint64(len(m.IDs[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IntroText) > 0 {
		i -= len(m.IntroText)
		copy(dAtA[i:], m.IntroText)
		i = encodeVarintKind(dAtA, i, uint64(len(m.IntroText)))
		i--
		dAtA[i] = 0x12
	}
	if m.Me != nil {
		{
			size, err := m.Me.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContactRequestAcceptedAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactRequestAcceptedAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactRequestAcceptedAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.T {
		i--
		if m.T {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ContactShareMeAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactShareMeAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactShareMeAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Me != nil {
		{
			size, err := m.Me.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContactShareAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactShareAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactShareAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Contact != nil {
		{
			size, err := m.Contact.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationInviteAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationInviteAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationInviteAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Conversation != nil {
		{
			size, err := m.Conversation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationNewMessageAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationNewMessageAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationNewMessageAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationReadAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationReadAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationReadAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Conversation != nil {
		{
			size, err := m.Conversation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationUpdateAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationUpdateAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationUpdateAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Conversation != nil {
		{
			size, err := m.Conversation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberInviteAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberInviteAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberInviteAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Conversation != nil {
		{
			size, err := m.Conversation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Contact != nil {
		{
			size, err := m.Contact.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberLeaveAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberLeaveAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberLeaveAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberSetTitleAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberSetTitleAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberSetTitleAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberSetTopicAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberSetTopicAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberSetTopicAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Topic) > 0 {
		i -= len(m.Topic)
		copy(dAtA[i:], m.Topic)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Topic)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberSetOwnerAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberSetOwnerAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberSetOwnerAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ContactId) > 0 {
		i -= len(m.ContactId)
		copy(dAtA[i:], m.ContactId)
		i = encodeVarintKind(dAtA, i, uint64(len(m.ContactId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberBlockAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberBlockAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberBlockAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ContactId) > 0 {
		i -= len(m.ContactId)
		copy(dAtA[i:], m.ContactId)
		i = encodeVarintKind(dAtA, i, uint64(len(m.ContactId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberUnblockAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberUnblockAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberUnblockAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ContactId) > 0 {
		i -= len(m.ContactId)
		copy(dAtA[i:], m.ContactId)
		i = encodeVarintKind(dAtA, i, uint64(len(m.ContactId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberReadAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberReadAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberReadAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	n10, err10 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.At, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.At):])
	if err10 != nil {
		return 0, err10
	}
	i -= n10
	i = encodeVarintKind(dAtA, i, uint64(n10))
	i--
	dAtA[i] = 0x12
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConversationMemberWriteAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversationMemberWriteAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversationMemberWriteAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DevtoolsMapsetAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DevtoolsMapsetAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DevtoolsMapsetAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Val) > 0 {
		i -= len(m.Val)
		copy(dAtA[i:], m.Val)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Val)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SenderAliasUpdateAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SenderAliasUpdateAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SenderAliasUpdateAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Aliases) > 0 {
		for iNdEx := len(m.Aliases) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Aliases[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintKind(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeviceUpdatePushConfigAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeviceUpdatePushConfigAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeviceUpdatePushConfigAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Device != nil {
		{
			size, err := m.Device.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKind(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DevicePushToAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DevicePushToAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DevicePushToAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Priority != 0 {
		i = encodeVarintKind(dAtA, i, uint64(m.Priority))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Envelope) > 0 {
		i -= len(m.Envelope)
		copy(dAtA[i:], m.Envelope)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Envelope)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PushIdentifier) > 0 {
		i -= len(m.PushIdentifier)
		copy(dAtA[i:], m.PushIdentifier)
		i = encodeVarintKind(dAtA, i, uint64(len(m.PushIdentifier)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NodeAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NodeAttrs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NodeAttrs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Attributes) > 0 {
		i -= len(m.Attributes)
		copy(dAtA[i:], m.Attributes)
		i = encodeVarintKind(dAtA, i, uint64(len(m.Attributes)))
		i--
		dAtA[i] = 0x12
	}
	if m.Kind != 0 {
		i = encodeVarintKind(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintKind(dAtA []byte, offset int, v uint64) int {
	offset -= sovKind(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SentAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			l = len(s)
			n += 1 + l + sovKind(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AckAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			l = len(s)
			n += 1 + l + sovKind(uint64(l))
		}
	}
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PingAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.T {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SeenAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.IDs) > 0 {
		for _, s := range m.IDs {
			l = len(s)
			n += 1 + l + sovKind(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Me != nil {
		l = m.Me.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.IntroText)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactRequestAcceptedAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.T {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactShareMeAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Me != nil {
		l = m.Me.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactShareAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Contact != nil {
		l = m.Contact.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationInviteAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Conversation != nil {
		l = m.Conversation.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationNewMessageAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationReadAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Conversation != nil {
		l = m.Conversation.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationUpdateAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Conversation != nil {
		l = m.Conversation.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberInviteAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.Contact != nil {
		l = m.Contact.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.Conversation != nil {
		l = m.Conversation.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberLeaveAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberSetTitleAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberSetTopicAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.Topic)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberSetOwnerAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.ContactId)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberBlockAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.ContactId)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberUnblockAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.ContactId)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberReadAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.At)
	n += 1 + l + sovKind(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConversationMemberWriteAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DevtoolsMapsetAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.Val)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SenderAliasUpdateAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Aliases) > 0 {
		for _, e := range m.Aliases {
			l = e.Size()
			n += 1 + l + sovKind(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeviceUpdatePushConfigAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Device != nil {
		l = m.Device.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DevicePushToAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PushIdentifier)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	l = len(m.Envelope)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.Priority != 0 {
		n += 1 + sovKind(uint64(m.Priority))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NodeAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Kind != 0 {
		n += 1 + sovKind(uint64(m.Kind))
	}
	l = len(m.Attributes)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovKind(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKind(x uint64) (n int) {
	return sovKind(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SentAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SentAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SentAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IDs = append(m.IDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AckAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AckAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AckAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IDs = append(m.IDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PingAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PingAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PingAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field T", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.T = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SeenAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SeenAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SeenAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IDs = append(m.IDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Me", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Me == nil {
				m.Me = &Contact{}
			}
			if err := m.Me.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IntroText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IntroText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactRequestAcceptedAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactRequestAcceptedAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactRequestAcceptedAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field T", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.T = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactShareMeAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactShareMeAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactShareMeAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Me", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Me == nil {
				m.Me = &Contact{}
			}
			if err := m.Me.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactShareAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactShareAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactShareAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contact", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Contact == nil {
				m.Contact = &Contact{}
			}
			if err := m.Contact.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationInviteAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationInviteAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationInviteAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conversation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Conversation == nil {
				m.Conversation = &Conversation{}
			}
			if err := m.Conversation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationNewMessageAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationNewMessageAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationNewMessageAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &Message{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationReadAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationReadAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationReadAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conversation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Conversation == nil {
				m.Conversation = &Conversation{}
			}
			if err := m.Conversation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationUpdateAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationUpdateAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationUpdateAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conversation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Conversation == nil {
				m.Conversation = &Conversation{}
			}
			if err := m.Conversation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberInviteAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberInviteAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberInviteAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contact", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Contact == nil {
				m.Contact = &Contact{}
			}
			if err := m.Contact.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conversation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Conversation == nil {
				m.Conversation = &Conversation{}
			}
			if err := m.Conversation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberLeaveAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberLeaveAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberLeaveAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberSetTitleAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberSetTitleAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberSetTitleAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberSetTopicAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberSetTopicAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberSetTopicAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberSetOwnerAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberSetOwnerAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberSetOwnerAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContactId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberBlockAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberBlockAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberBlockAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContactId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberUnblockAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberUnblockAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberUnblockAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContactId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberReadAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberReadAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberReadAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field At", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.At, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConversationMemberWriteAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversationMemberWriteAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversationMemberWriteAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &Message{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DevtoolsMapsetAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DevtoolsMapsetAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DevtoolsMapsetAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Val", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Val = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SenderAliasUpdateAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SenderAliasUpdateAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SenderAliasUpdateAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aliases", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aliases = append(m.Aliases, &SenderAlias{})
			if err := m.Aliases[len(m.Aliases)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeviceUpdatePushConfigAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeviceUpdatePushConfigAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeviceUpdatePushConfigAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Device == nil {
				m.Device = &Device{}
			}
			if err := m.Device.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DevicePushToAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DevicePushToAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DevicePushToAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushIdentifier", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PushIdentifier = append(m.PushIdentifier[:0], dAtA[iNdEx:postIndex]...)
			if m.PushIdentifier == nil {
				m.PushIdentifier = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Envelope", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Envelope = append(m.Envelope[:0], dAtA[iNdEx:postIndex]...)
			if m.Envelope == nil {
				m.Envelope = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			m.Priority = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Priority |= push.Priority(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NodeAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NodeAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NodeAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKind
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes[:0], dAtA[iNdEx:postIndex]...)
			if m.Attributes == nil {
				m.Attributes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKind(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKind
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKind
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKind
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKind
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthKind
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowKind
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipKind(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthKind
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthKind = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKind   = fmt.Errorf("proto: integer overflow")
)
