name: mage-iOS
on:
  push:
    tags:
      - v*
    branches:
      - master
    paths:
      - 'go/**'
      - '!go/**.md'
      - 'go.*'
      - '**.go'
      - 'js/**'
      - '.github/workflows/ios.yml'
  pull_request:
    paths:
      - 'go/**'
      - '!go/**.md'
      - 'go.*'
      - '**.go'
      - 'js/**'
      - '!js/packages/berty-i18n/locale/*/*.json'
      - '.github/workflows/ios.yml'

jobs:
  build:
    name: Build for iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}  # see https://github.com/actions/checkout/issues/299

      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: '12.0'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.3

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14.x

      - name: Setup mage
        run: |
          cd
          go get -u -d github.com/magefile/mage
          cd `go env GOPATH`/src/github.com/magefile/mage
          go run bootstrap.go

      - name: Setup macOS keychain
        working-directory: tool/build/dummy-identity
        run: |
          security create-keychain -p "dummypass" dummy.keychain
          security default-keychain -s dummy.keychain
          security unlock-keychain -p "dummypass" dummy.keychain
          security set-keychain-settings dummy.keychain
          security import berty-dummy.p12 -t priv -f pkcs12 -P "dummypass" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "dummypass" dummy.keychain

      - name: Build .env
        run: cat tool/build/shakebugs-infos/env >> js/.env

      - name: Init mage
        run: mage

      - name: Gather cache info
        id: cacheInfo
        run: |
          echo "::set-output name=nodeModulesHash::`PRINT_CACHE_INFO=true mage nodeModules`"
          echo "::set-output name=nodeModulesGAPaths::`PRINT_CACHE_GA_JSON_PATHS=true mage nodeModules`"
          echo "::set-output name=iOSTorHash::`PRINT_CACHE_INFO=true mage iOSTor`"
          echo "::set-output name=iOSTorGAPaths::`PRINT_CACHE_GA_JSON_PATHS=true mage iOSTor`"
          echo "::set-output name=xcodeProjHash::`PRINT_CACHE_INFO=true mage xcodeProj`"
          echo "::set-output name=xcodeProjGAPaths::`PRINT_CACHE_GA_JSON_PATHS=true mage xcodeProj`"
          echo "::set-output name=xcWorkspaceHash::`PRINT_CACHE_INFO=true mage xcWorkspace`"
          echo "::set-output name=xcWorkspaceGAPaths::`PRINT_CACHE_GA_JSON_PATHS=true mage xcWorkspace`"
          echo "::set-output name=iOSFrameworkHash::`PRINT_CACHE_INFO=true mage iOSFramework`"
          echo "::set-output name=iOSFrameworkGAPaths::`PRINT_CACHE_GA_JSON_PATHS=true mage iOSFramework`"
      - name: Cache nodeModules
        uses: actions/cache@v2
        with:
          path: ${{ fromJSON(steps.cacheInfo.outputs.nodeModulesGAPaths) }}
          key: ${{ runner.OS }}-mage-nodeModules-v1-${{ steps.cacheInfo.outputs.nodeModulesHash }}
      - name: Cache iOSTor
        uses: actions/cache@v2
        with:
          path: ${{ fromJSON(steps.cacheInfo.outputs.iOSTorGAPaths) }}
          key: ${{ runner.OS }}-mage-iOSTor-v1-${{ steps.cacheInfo.outputs.iOSTorHash }}
      - name: Cache xcodeProj
        uses: actions/cache@v2
        with:
          path: ${{ fromJSON(steps.cacheInfo.outputs.xcodeProjGAPaths) }}
          key: ${{ runner.OS }}-mage-xcodeProj-v2-${{ steps.cacheInfo.outputs.xcodeProjHash }}
      - name: Cache xcWorkspace
        uses: actions/cache@v2
        with:
          path: ${{ fromJSON(steps.cacheInfo.outputs.xcWorkspaceGAPaths) }}
          key: ${{ runner.OS }}-mage-xcWorkspace-v1-${{ steps.cacheInfo.outputs.xcWorkspaceHash }}
      - name: Cache iOSFramework
        uses: actions/cache@v2
        with:
          path: ${{ fromJSON(steps.cacheInfo.outputs.iOSFrameworkGAPaths) }}
          key: ${{ runner.OS }}-mage-iOSFramework-v2-${{ hashFiles('go.sum', 'go.mod') }}-${{ steps.cacheInfo.outputs.iOSFrameworkHash }}
          restore-keys: |
            ${{ runner.OS }}-mage-iOSFramework-v2-${{ hashFiles('go.sum', 'go.mod') }}-
            ${{ runner.OS }}-mage-iOSFramework-v2-

      - name: Build app deps
        run: |
          mage checkXcodebuild
          mage iOSAppDeps

      - name: Build the Archive
        working-directory: js
        run: |
          xcodebuild archive \
                CODE_SIGN_IDENTITY="" \
                CODE_SIGNING_ALLOWED=NO \
                ONLY_ACTIVE_ARCH=NO  \
                EXCLUDED_ARCHS='armv7 armv7s' \
                -workspace ios/Berty.xcworkspace \
                -scheme "Berty Yolo" \
                -sdk iphoneos \
                -archivePath /tmp/Berty.xcarchive
          for lib in /tmp/Berty.xcarchive/Products/Applications/Berty\ Yolo.app/Frameworks/*.dylib; do
            lipo -remove armv7 -remove armv7s "$lib" -output "$lib"
          done
          codesign -fs "Berty Dummy" /tmp/Berty.xcarchive/Products/Applications/Berty\ Yolo.app
          mkdir Payload
          mv /tmp/Berty.xcarchive/Products/Applications/Berty\ Yolo.app Payload/
          zip -r ${{ github.workspace }}/Berty\ Yolo.dummy-signed-ipa Payload

      - name: Upload the Archive
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/Berty Yolo.dummy-signed-ipa
          name: berty-yolo-${{github.sha}}.dummy-signed-ipa
          if-no-files-found: error
