name: Release
on:
  push:
    branches:
      - master

jobs:
  release:
    name: releaser
    runs-on: ubuntu-latest
    strategy:
      matrix:
        golang: [1.16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Load variables from file
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: .github/workflows/utils/variables.json
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Run Semantic Release
        id: semantic
        uses: docker://ghcr.io/codfish/semantic-release-action:v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install libgl
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          sudo apt update
          sudo apt install -f
          sudo apt install -f -y libgl1-mesa-glx libgl1-mesa-dev xorg-dev
      - name: Set up Go
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang }}
      - name: Cache Go modules
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: actions/cache@v2.1.7
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-${{ env.json_cache-version_go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ matrix.golang }}-${{ env.json_cache-version_go }}-
      - name: Run GoReleaser
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: goreleaser/goreleaser-action@v2.9.1
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Register version on pkg.go.dev
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          package=$(cat go.mod | grep ^module | awk '{print $2}')
          version=v${{ steps.semantic.outputs.release-version }}
          url=https://proxy.golang.org/${package}/@v/${version}.info
          set -x +e
          curl -i $url

      # Next step also sets up a .npmrc file for automatic publishing to npm
      - uses: actions/setup-node@v2
        if: steps.semantic.outputs.new-release-published == 'true'
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"
      - name: "Publish npm package: @berty/api"
        if: steps.semantic.outputs.new-release-published == 'true'
        run: go run ./go/cmd/publish-npm-package -path=js/packages/api -version=${{ steps.semantic.outputs.release-version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
