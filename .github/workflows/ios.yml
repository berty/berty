name: iOS
on:
  push:
    tags:
      - v*
    branches:
      - master
    paths:
      - 'go/**'
      - '!go/**.md'
      - 'go.*'
      - '**.go'
      - 'js/**'
      - '.github/workflows/ios.yml'
  pull_request:
    paths:
      - 'go/**'
      - '!go/**.md'
      - 'go.*'
      - '**.go'
      - 'js/**'
      - '!js/packages/berty-i18n/locale/*/*.json'
      - '.github/workflows/ios.yml'

jobs:
  build:
    name: Build for iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}  # see https://github.com/actions/checkout/issues/299

      # setup tools
      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: '12.0'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.3

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14.x

      # xcodederived data
      - name: Cache Xcode DerivedData
        id: cache-xcode-deriveddata
        uses: actions/cache@v2
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ios-deriveddata-v0-${{ steps.xcodebuild-version.outputs.version }}-${{ hashFiles('js/yarn.lock', 'js/ios/Podfile.lock', 'go.sum', 'js/Makefile', 'go/**/*.go', 'go/**/*.m', 'go/**/*.h') }}
          restore-keys: ios-deriveddata-v0-${{ steps.xcodebuild-version.outputs.version }}-

      - name: Touch Xcode DerivedData
        if: steps.cache-xcode-deriveddata.outputs.cache-hit == 'true'
        run: find ~/Library/Developer/Xcode/DerivedData -exec touch -c {} \;

      # system info
      - name: Get node version
        id: node-version
        run: echo "::set-output name=version::$(node --version)"
      - name: Get full go version
        id: go-version
        run: echo "::set-output name=version::$(go version | cut -d ' ' -f 3)"
      - name: Get xcodebuild version
        id: xcodebuild-version
        run: echo "::set-output name=version::$(xcodebuild -version | head -n 1 | cut -d ' ' -f 2)"

      # node modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: js/node_modules
          key: ${{ runner.os }}-nodemods-${{ steps.node-version.outputs.version }}-${{ hashFiles('js/yarn.lock') }}
          restore-keys: ${{ runner.os }}-nodemods-${{ steps.node-version.outputs.version }}-

      - name: Gather Node modules
        run: cd js && make node_modules

      
      # berty framework
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Cache Gomobile framework
        id: cache-gomobile-framework
        uses: actions/cache@v2
        with:
          path: js/ios/Frameworks/Bertybridge.framework
          key: ios-gomobileframework-v1-${{ steps.go-version.outputs.version }}-${{ hashFiles('go.sum', 'js/Makefile', 'go/**/*.go', 'go/**/*.m', 'go/**/*.h') }}

      - name: Touch Gomobile framework and get tor
        if: steps.cache-gomobile-framework.outputs.cache-hit == 'true'
        working-directory: js
        run: |
          touch ios/Frameworks/Bertybridge.framework
          make ios.tor

      - name: Build Gomobile framework
        working-directory: js
        run: make ios.gomobile

      # ruby
      - name: Cache Ruby modules
        uses: actions/cache@v2
        with:
          path: js/ios/vendor/bundle
          key: ${{ runner.OS }}-bundle-v0-${{ hashFiles('js/Gemfile.lock') }}
          restore-keys: ${{ runner.OS }}-bundle-v0-

      - name: Gather Ruby modules
        run: cd js && make ios/vendor/bundle

      # xcodegen
      - name: Cache XCodeGen
        uses: actions/cache@v2
        with:
          path: js/ios/vendor/xcodegen
          key: ios-xcodegen-v0-${{ hashFiles('js/ios/XcodeGen.version') }}-${{ hashFiles('js/yarn.lock', 'js/ios/Podfile.lock', 'go.sum', 'js/Makefile', 'go/**/*.go', 'go/**/*.m', 'go/**/*.h') }}
          restore-keys: ios-xcodegen-${{ hashFiles('js/ios/XcodeGen.version') }}-v0-

      - name: Build XcodeGen
        working-directory: js
        run: make ios/vendor/xcodegen

      # xcodeproj
      - name: Cache XCode project
        uses: actions/cache@v2
        with:
          path: js/ios/Berty.xcodeproj
          key: ios-xcodeproj-${{ hashFiles('js/ios/*.yaml') }}
          restore-keys: ios-xcodeproj-
      
      - name: Build Xcode project
        working-directory: js
        run: make ios/Berty.xcodeproj

      # xcworkspace and pods
      - name: Cache XCode workspace and CocoaPods
        uses: actions/cache@v2
        with:
          path: |
            js/ios/Berty.xcworkspace
            js/ios/Pods
          key: ios-xcodeworkspace-v0-${{ hashFiles('js/ios/Podfile.lock', 'js/yarn.lock') }}
          restore-keys: ios-xcodeworkspace-v0-

      - name: Build Xcode workspace and install CocoaPods
        working-directory: js
        run: make ios/Berty.xcworkspace
        
      # berty app
      - name: Setup macOS keychain
        working-directory: tool/build/dummy-identity
        run: |
          security create-keychain -p "dummypass" dummy.keychain
          security default-keychain -s dummy.keychain
          security unlock-keychain -p "dummypass" dummy.keychain
          security set-keychain-settings dummy.keychain
          security import berty-dummy.p12 -t priv -f pkcs12 -P "dummypass" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "dummypass" dummy.keychain

      - name: Build .env
        run: cat tool/build/shakebugs-infos/env >> js/.env

      - name: Build App
        working-directory: js
        run: |
          make ios.app_deps
          xcodebuild archive \
                CODE_SIGN_IDENTITY="" \
                CODE_SIGNING_ALLOWED=NO \
                ONLY_ACTIVE_ARCH=NO  \
                EXCLUDED_ARCHS='armv7 armv7s' \
                -workspace ios/Berty.xcworkspace \
                -scheme "Berty Yolo" \
                -sdk iphoneos \
                -archivePath /tmp/Berty.xcarchive
          for lib in /tmp/Berty.xcarchive/Products/Applications/Berty\ Yolo.app/Frameworks/*.dylib; do
            lipo -remove armv7 -remove armv7s "$lib" -output "$lib"
          done
          codesign -fs "Berty Dummy" /tmp/Berty.xcarchive/Products/Applications/Berty\ Yolo.app
          mkdir Payload
          mv /tmp/Berty.xcarchive/Products/Applications/Berty\ Yolo.app Payload/
          zip -r ${{ github.workspace }}/Berty\ Yolo.dummy-signed-ipa Payload

      - name: Upload App
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/Berty Yolo.dummy-signed-ipa
          name: berty-yolo-${{github.sha}}.dummy-signed-ipa
          if-no-files-found: error
