// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protocolerrcode.proto

package errcode

import (
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolErrCode int32

const (
	ProtocolUndefined                           ProtocolErrCode = 0
	ProtocolTODO                                ProtocolErrCode = 2001
	ErrProtocolNotImplemented                   ProtocolErrCode = 2002
	ErrProtocolInternal                         ProtocolErrCode = 2003
	ErrProtocolSigChainNoEntries                ProtocolErrCode = 2004
	ErrProtocolSigChainInvalidEntryType         ProtocolErrCode = 2005
	ErrProtocolSigChainAlreadyInitialized       ProtocolErrCode = 2006
	ErrProtocolSigChainPermission               ProtocolErrCode = 2007
	ErrProtocolSigChainOperationAlreadyDone     ProtocolErrCode = 2008
	ErrProtocolHandshakeNoPayload               ProtocolErrCode = 2009
	ErrProtocolHandshakeInvalidFlow             ProtocolErrCode = 2010
	ErrProtocolHandshakeInvalidFlowStepNotFound ProtocolErrCode = 2011
	ErrProtocolHandshakeParams                  ProtocolErrCode = 2012
	ErrProtocolHandshakeNoAuthReturned          ProtocolErrCode = 2013
	ErrProtocolHandshakeInvalidKeyType          ProtocolErrCode = 2014
	ErrProtocolHandshakeInvalidSignature        ProtocolErrCode = 2015
	ErrProtocolHandshakeSessionInvalid          ProtocolErrCode = 2016
	ErrProtocolHandshakeKeyNotInSigChain        ProtocolErrCode = 2017
	ErrProtocolHandshakeDecrypt                 ProtocolErrCode = 2018
	ErrProtocolInvalidInput                     ProtocolErrCode = 2019
	ErrProtocolMissingInput                     ProtocolErrCode = 2020
)

var ProtocolErrCode_name = map[int32]string{
	0:    "ProtocolUndefined",
	2001: "ProtocolTODO",
	2002: "ErrProtocolNotImplemented",
	2003: "ErrProtocolInternal",
	2004: "ErrProtocolSigChainNoEntries",
	2005: "ErrProtocolSigChainInvalidEntryType",
	2006: "ErrProtocolSigChainAlreadyInitialized",
	2007: "ErrProtocolSigChainPermission",
	2008: "ErrProtocolSigChainOperationAlreadyDone",
	2009: "ErrProtocolHandshakeNoPayload",
	2010: "ErrProtocolHandshakeInvalidFlow",
	2011: "ErrProtocolHandshakeInvalidFlowStepNotFound",
	2012: "ErrProtocolHandshakeParams",
	2013: "ErrProtocolHandshakeNoAuthReturned",
	2014: "ErrProtocolHandshakeInvalidKeyType",
	2015: "ErrProtocolHandshakeInvalidSignature",
	2016: "ErrProtocolHandshakeSessionInvalid",
	2017: "ErrProtocolHandshakeKeyNotInSigChain",
	2018: "ErrProtocolHandshakeDecrypt",
	2019: "ErrProtocolInvalidInput",
	2020: "ErrProtocolMissingInput",
}

var ProtocolErrCode_value = map[string]int32{
	"ProtocolUndefined":                           0,
	"ProtocolTODO":                                2001,
	"ErrProtocolNotImplemented":                   2002,
	"ErrProtocolInternal":                         2003,
	"ErrProtocolSigChainNoEntries":                2004,
	"ErrProtocolSigChainInvalidEntryType":         2005,
	"ErrProtocolSigChainAlreadyInitialized":       2006,
	"ErrProtocolSigChainPermission":               2007,
	"ErrProtocolSigChainOperationAlreadyDone":     2008,
	"ErrProtocolHandshakeNoPayload":               2009,
	"ErrProtocolHandshakeInvalidFlow":             2010,
	"ErrProtocolHandshakeInvalidFlowStepNotFound": 2011,
	"ErrProtocolHandshakeParams":                  2012,
	"ErrProtocolHandshakeNoAuthReturned":          2013,
	"ErrProtocolHandshakeInvalidKeyType":          2014,
	"ErrProtocolHandshakeInvalidSignature":        2015,
	"ErrProtocolHandshakeSessionInvalid":          2016,
	"ErrProtocolHandshakeKeyNotInSigChain":        2017,
	"ErrProtocolHandshakeDecrypt":                 2018,
	"ErrProtocolInvalidInput":                     2019,
	"ErrProtocolMissingInput":                     2020,
}

func (ProtocolErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5237fb9b9b54d8f0, []int{0}
}

func init() {
	proto.RegisterEnum("berty.errcode.ProtocolErrCode", ProtocolErrCode_name, ProtocolErrCode_value)
}

func init() { proto.RegisterFile("protocolerrcode.proto", fileDescriptor_5237fb9b9b54d8f0) }

var fileDescriptor_5237fb9b9b54d8f0 = []byte{
	// 588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xbf, 0x4f, 0x1b, 0x4b,
	0x10, 0xc7, 0x87, 0x86, 0x62, 0xf5, 0x9e, 0x76, 0xd9, 0x27, 0xf4, 0x1e, 0x3c, 0x32, 0x24, 0x84,
	0x88, 0x84, 0x24, 0x38, 0x52, 0xfe, 0x02, 0xc2, 0x0f, 0xc5, 0x42, 0x31, 0x56, 0x4c, 0x9a, 0x74,
	0x67, 0xdf, 0x72, 0x3e, 0x71, 0xde, 0x3d, 0xad, 0xf7, 0x12, 0x5d, 0x2a, 0x4a, 0x8a, 0x14, 0x29,
	0x23, 0xa5, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x7e, 0x3b, 0xbf, 0xb9, 0xdd, 0x14, 0x94,
	0x94, 0x94, 0x91, 0xcf, 0xb6, 0x44, 0xd0, 0x91, 0x74, 0x37, 0x33, 0x9f, 0xf9, 0xee, 0xed, 0xce,
	0x7c, 0xc9, 0x68, 0xac, 0x95, 0x51, 0x0d, 0x15, 0x09, 0xad, 0x1b, 0xca, 0x17, 0x73, 0x79, 0xcc,
	0xff, 0xae, 0x0b, 0x6d, 0xd2, 0xb9, 0x7e, 0x72, 0xfc, 0x66, 0x10, 0x9a, 0x66, 0x52, 0x9f, 0x6b,
	0xa8, 0x56, 0x29, 0x50, 0x81, 0x2a, 0xe5, 0x54, 0x3d, 0x59, 0xcf, 0xa3, 0x3c, 0xc8, 0xbf, 0x7a,
	0xdd, 0xb3, 0x4f, 0x87, 0x09, 0xad, 0xf6, 0x75, 0x97, 0xb4, 0x5e, 0x50, 0xbe, 0xe0, 0xa3, 0x64,
	0x64, 0x90, 0x7a, 0x20, 0x7d, 0xb1, 0x1e, 0x4a, 0xe1, 0x33, 0xe0, 0x23, 0xe4, 0xaf, 0x41, 0x7a,
	0x6d, 0x75, 0x71, 0x95, 0xbd, 0xa2, 0x1c, 0xc9, 0xd8, 0x92, 0xd6, 0x83, 0x6c, 0x45, 0x99, 0x72,
	0x2b, 0x8e, 0x44, 0x4b, 0x48, 0x23, 0x7c, 0xf6, 0x9a, 0xf2, 0xff, 0xc8, 0x3f, 0xa7, 0xea, 0x65,
	0x69, 0x84, 0x96, 0x5e, 0xc4, 0xde, 0x50, 0x7e, 0x89, 0x4c, 0x9c, 0xaa, 0xd4, 0xc2, 0x60, 0xa1,
	0xe9, 0x85, 0xb2, 0xa2, 0x96, 0xa4, 0xd1, 0xa1, 0x68, 0xb3, 0xb7, 0x94, 0x5f, 0x25, 0x97, 0x0b,
	0x90, 0xb2, 0x7c, 0xe4, 0x45, 0xa1, 0xdf, 0xe5, 0xd2, 0xb5, 0x34, 0x16, 0xec, 0x1d, 0xe5, 0xb3,
	0xe4, 0x4a, 0x01, 0x39, 0x1f, 0x69, 0xe1, 0xf9, 0x69, 0x59, 0x86, 0x26, 0xf4, 0xa2, 0xf0, 0x89,
	0xf0, 0xd9, 0x7b, 0xca, 0xa7, 0xc8, 0x85, 0x02, 0xb6, 0x2a, 0x74, 0x2b, 0x6c, 0xb7, 0x43, 0x25,
	0xd9, 0x07, 0xca, 0x6f, 0x90, 0x99, 0x02, 0x66, 0x35, 0x16, 0xda, 0x33, 0xa1, 0x1a, 0x08, 0x2f,
	0x2a, 0x29, 0x58, 0xe7, 0xac, 0xe2, 0x5d, 0x4f, 0xfa, 0xed, 0xa6, 0xb7, 0x21, 0x2a, 0xaa, 0xea,
	0xa5, 0x91, 0xf2, 0x7c, 0xf6, 0x91, 0xf2, 0x69, 0x32, 0x59, 0xc4, 0xf4, 0x2f, 0xb3, 0x1c, 0xa9,
	0xc7, 0xec, 0x13, 0xe5, 0xb7, 0xc8, 0xf5, 0x3f, 0x50, 0x35, 0x23, 0xe2, 0x8a, 0x32, 0xcb, 0x2a,
	0x91, 0x3e, 0xfb, 0x4c, 0xf9, 0x24, 0x19, 0x2f, 0xea, 0xa8, 0x7a, 0xda, 0x6b, 0xb5, 0xd9, 0x17,
	0xca, 0x67, 0xc8, 0x54, 0xf1, 0xcf, 0xcd, 0x27, 0xa6, 0x79, 0x5f, 0x98, 0x44, 0x77, 0x87, 0xfb,
	0xf5, 0x5c, 0xb0, 0x7f, 0xf6, 0x8a, 0xe8, 0x3d, 0xf6, 0x37, 0xca, 0xaf, 0x91, 0xe9, 0xdf, 0x80,
	0xb5, 0x30, 0x90, 0x9e, 0x49, 0xb4, 0x60, 0xdf, 0xcf, 0xd5, 0xac, 0x89, 0xfc, 0xa5, 0xfb, 0x1d,
	0xec, 0xf0, 0x5c, 0xcd, 0x15, 0x91, 0x76, 0x77, 0x4a, 0x0e, 0x26, 0xc0, 0x32, 0xca, 0x2f, 0x92,
	0xff, 0x8b, 0xd0, 0x45, 0xd1, 0xd0, 0x69, 0x6c, 0x98, 0xa5, 0x7c, 0x82, 0xfc, 0xfb, 0xcb, 0xd2,
	0xe5, 0xa7, 0x94, 0x65, 0x9c, 0x18, 0xe6, 0xce, 0x56, 0xef, 0x75, 0x87, 0x2e, 0x83, 0x5e, 0xf5,
	0x07, 0xbd, 0xf3, 0x62, 0x68, 0x3f, 0x43, 0x38, 0xc8, 0x10, 0x3a, 0x19, 0xc2, 0x61, 0x86, 0x70,
	0x94, 0x21, 0x1c, 0x67, 0x08, 0x27, 0x19, 0xc2, 0xa6, 0x45, 0xd8, 0xb2, 0x08, 0xdb, 0x16, 0x61,
	0xc7, 0x22, 0xec, 0x5a, 0x84, 0x3d, 0x8b, 0xb0, 0x6f, 0x11, 0x0e, 0x2c, 0x42, 0xc7, 0x22, 0x1c,
	0x5a, 0x84, 0x23, 0x8b, 0x70, 0x6c, 0x11, 0x4e, 0x2c, 0xc2, 0xa6, 0x43, 0xd8, 0x72, 0x08, 0xcf,
	0x1c, 0xc2, 0x73, 0x87, 0xf0, 0xd2, 0x21, 0x6c, 0x3b, 0x84, 0x1d, 0x87, 0xb0, 0xeb, 0x70, 0x68,
	0xcf, 0x21, 0xec, 0x3b, 0x84, 0x03, 0x87, 0xd0, 0x71, 0x08, 0x0f, 0xc7, 0x7a, 0x7e, 0x36, 0xa2,
	0xd1, 0x2c, 0x75, 0xed, 0xbb, 0x11, 0x94, 0xfa, 0xde, 0xae, 0x0f, 0xe7, 0x9e, 0xbd, 0xfd, 0x33,
	0x00, 0x00, 0xff, 0xff, 0x9f, 0xce, 0xec, 0x96, 0x0a, 0x04, 0x00, 0x00,
}
