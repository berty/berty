// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bertydemo.proto

package bertydemo

import (
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type LogOperation struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Cid                  string   `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogOperation) Reset()         { *m = LogOperation{} }
func (m *LogOperation) String() string { return proto.CompactTextString(m) }
func (*LogOperation) ProtoMessage()    {}
func (*LogOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{0}
}
func (m *LogOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogOperation.Unmarshal(m, b)
}
func (m *LogOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogOperation.Marshal(b, m, deterministic)
}
func (m *LogOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogOperation.Merge(m, src)
}
func (m *LogOperation) XXX_Size() int {
	return xxx_messageInfo_LogOperation.Size(m)
}
func (m *LogOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_LogOperation.DiscardUnknown(m)
}

var xxx_messageInfo_LogOperation proto.InternalMessageInfo

func (m *LogOperation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogOperation) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *LogOperation) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type LogStreamOptions struct {
	GT                   string   `protobuf:"bytes,1,opt,name=GT,proto3" json:"GT,omitempty"`
	GTE                  string   `protobuf:"bytes,2,opt,name=GTE,proto3" json:"GTE,omitempty"`
	LT                   string   `protobuf:"bytes,3,opt,name=LT,proto3" json:"LT,omitempty"`
	LTE                  string   `protobuf:"bytes,4,opt,name=LTE,proto3" json:"LTE,omitempty"`
	Amount               uint32   `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogStreamOptions) Reset()         { *m = LogStreamOptions{} }
func (m *LogStreamOptions) String() string { return proto.CompactTextString(m) }
func (*LogStreamOptions) ProtoMessage()    {}
func (*LogStreamOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1}
}
func (m *LogStreamOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStreamOptions.Unmarshal(m, b)
}
func (m *LogStreamOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStreamOptions.Marshal(b, m, deterministic)
}
func (m *LogStreamOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStreamOptions.Merge(m, src)
}
func (m *LogStreamOptions) XXX_Size() int {
	return xxx_messageInfo_LogStreamOptions.Size(m)
}
func (m *LogStreamOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStreamOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LogStreamOptions proto.InternalMessageInfo

func (m *LogStreamOptions) GetGT() string {
	if m != nil {
		return m.GT
	}
	return ""
}

func (m *LogStreamOptions) GetGTE() string {
	if m != nil {
		return m.GTE
	}
	return ""
}

func (m *LogStreamOptions) GetLT() string {
	if m != nil {
		return m.LT
	}
	return ""
}

func (m *LogStreamOptions) GetLTE() string {
	if m != nil {
		return m.LTE
	}
	return ""
}

func (m *LogStreamOptions) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type LogToken struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogToken) Reset()         { *m = LogToken{} }
func (m *LogToken) String() string { return proto.CompactTextString(m) }
func (*LogToken) ProtoMessage()    {}
func (*LogToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{2}
}
func (m *LogToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogToken.Unmarshal(m, b)
}
func (m *LogToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogToken.Marshal(b, m, deterministic)
}
func (m *LogToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogToken.Merge(m, src)
}
func (m *LogToken) XXX_Size() int {
	return xxx_messageInfo_LogToken.Size(m)
}
func (m *LogToken) XXX_DiscardUnknown() {
	xxx_messageInfo_LogToken.DiscardUnknown(m)
}

var xxx_messageInfo_LogToken proto.InternalMessageInfo

type LogToken_Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogToken_Request) Reset()         { *m = LogToken_Request{} }
func (m *LogToken_Request) String() string { return proto.CompactTextString(m) }
func (*LogToken_Request) ProtoMessage()    {}
func (*LogToken_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{2, 0}
}
func (m *LogToken_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogToken_Request.Unmarshal(m, b)
}
func (m *LogToken_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogToken_Request.Marshal(b, m, deterministic)
}
func (m *LogToken_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogToken_Request.Merge(m, src)
}
func (m *LogToken_Request) XXX_Size() int {
	return xxx_messageInfo_LogToken_Request.Size(m)
}
func (m *LogToken_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogToken_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogToken_Request proto.InternalMessageInfo

type LogToken_Reply struct {
	LogToken             string   `protobuf:"bytes,1,opt,name=log_token,json=logToken,proto3" json:"log_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogToken_Reply) Reset()         { *m = LogToken_Reply{} }
func (m *LogToken_Reply) String() string { return proto.CompactTextString(m) }
func (*LogToken_Reply) ProtoMessage()    {}
func (*LogToken_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{2, 1}
}
func (m *LogToken_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogToken_Reply.Unmarshal(m, b)
}
func (m *LogToken_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogToken_Reply.Marshal(b, m, deterministic)
}
func (m *LogToken_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogToken_Reply.Merge(m, src)
}
func (m *LogToken_Reply) XXX_Size() int {
	return xxx_messageInfo_LogToken_Reply.Size(m)
}
func (m *LogToken_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogToken_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogToken_Reply proto.InternalMessageInfo

func (m *LogToken_Reply) GetLogToken() string {
	if m != nil {
		return m.LogToken
	}
	return ""
}

type LogAdd struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAdd) Reset()         { *m = LogAdd{} }
func (m *LogAdd) String() string { return proto.CompactTextString(m) }
func (*LogAdd) ProtoMessage()    {}
func (*LogAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{3}
}
func (m *LogAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAdd.Unmarshal(m, b)
}
func (m *LogAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAdd.Marshal(b, m, deterministic)
}
func (m *LogAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAdd.Merge(m, src)
}
func (m *LogAdd) XXX_Size() int {
	return xxx_messageInfo_LogAdd.Size(m)
}
func (m *LogAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAdd.DiscardUnknown(m)
}

var xxx_messageInfo_LogAdd proto.InternalMessageInfo

type LogAdd_Request struct {
	LogToken             string   `protobuf:"bytes,1,opt,name=log_token,json=logToken,proto3" json:"log_token,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAdd_Request) Reset()         { *m = LogAdd_Request{} }
func (m *LogAdd_Request) String() string { return proto.CompactTextString(m) }
func (*LogAdd_Request) ProtoMessage()    {}
func (*LogAdd_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{3, 0}
}
func (m *LogAdd_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAdd_Request.Unmarshal(m, b)
}
func (m *LogAdd_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAdd_Request.Marshal(b, m, deterministic)
}
func (m *LogAdd_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAdd_Request.Merge(m, src)
}
func (m *LogAdd_Request) XXX_Size() int {
	return xxx_messageInfo_LogAdd_Request.Size(m)
}
func (m *LogAdd_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAdd_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogAdd_Request proto.InternalMessageInfo

func (m *LogAdd_Request) GetLogToken() string {
	if m != nil {
		return m.LogToken
	}
	return ""
}

func (m *LogAdd_Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type LogAdd_Reply struct {
	Cid                  string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAdd_Reply) Reset()         { *m = LogAdd_Reply{} }
func (m *LogAdd_Reply) String() string { return proto.CompactTextString(m) }
func (*LogAdd_Reply) ProtoMessage()    {}
func (*LogAdd_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{3, 1}
}
func (m *LogAdd_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAdd_Reply.Unmarshal(m, b)
}
func (m *LogAdd_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAdd_Reply.Marshal(b, m, deterministic)
}
func (m *LogAdd_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAdd_Reply.Merge(m, src)
}
func (m *LogAdd_Reply) XXX_Size() int {
	return xxx_messageInfo_LogAdd_Reply.Size(m)
}
func (m *LogAdd_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAdd_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogAdd_Reply proto.InternalMessageInfo

func (m *LogAdd_Reply) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type LogGet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogGet) Reset()         { *m = LogGet{} }
func (m *LogGet) String() string { return proto.CompactTextString(m) }
func (*LogGet) ProtoMessage()    {}
func (*LogGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{4}
}
func (m *LogGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogGet.Unmarshal(m, b)
}
func (m *LogGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogGet.Marshal(b, m, deterministic)
}
func (m *LogGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogGet.Merge(m, src)
}
func (m *LogGet) XXX_Size() int {
	return xxx_messageInfo_LogGet.Size(m)
}
func (m *LogGet) XXX_DiscardUnknown() {
	xxx_messageInfo_LogGet.DiscardUnknown(m)
}

var xxx_messageInfo_LogGet proto.InternalMessageInfo

type LogGet_Request struct {
	LogToken             string   `protobuf:"bytes,1,opt,name=log_token,json=logToken,proto3" json:"log_token,omitempty"`
	Cid                  string   `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogGet_Request) Reset()         { *m = LogGet_Request{} }
func (m *LogGet_Request) String() string { return proto.CompactTextString(m) }
func (*LogGet_Request) ProtoMessage()    {}
func (*LogGet_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{4, 0}
}
func (m *LogGet_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogGet_Request.Unmarshal(m, b)
}
func (m *LogGet_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogGet_Request.Marshal(b, m, deterministic)
}
func (m *LogGet_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogGet_Request.Merge(m, src)
}
func (m *LogGet_Request) XXX_Size() int {
	return xxx_messageInfo_LogGet_Request.Size(m)
}
func (m *LogGet_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogGet_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogGet_Request proto.InternalMessageInfo

func (m *LogGet_Request) GetLogToken() string {
	if m != nil {
		return m.LogToken
	}
	return ""
}

func (m *LogGet_Request) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type LogGet_Reply struct {
	Operation            *LogOperation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LogGet_Reply) Reset()         { *m = LogGet_Reply{} }
func (m *LogGet_Reply) String() string { return proto.CompactTextString(m) }
func (*LogGet_Reply) ProtoMessage()    {}
func (*LogGet_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{4, 1}
}
func (m *LogGet_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogGet_Reply.Unmarshal(m, b)
}
func (m *LogGet_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogGet_Reply.Marshal(b, m, deterministic)
}
func (m *LogGet_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogGet_Reply.Merge(m, src)
}
func (m *LogGet_Reply) XXX_Size() int {
	return xxx_messageInfo_LogGet_Reply.Size(m)
}
func (m *LogGet_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogGet_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogGet_Reply proto.InternalMessageInfo

func (m *LogGet_Reply) GetOperation() *LogOperation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type LogList struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogList) Reset()         { *m = LogList{} }
func (m *LogList) String() string { return proto.CompactTextString(m) }
func (*LogList) ProtoMessage()    {}
func (*LogList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{5}
}
func (m *LogList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList.Unmarshal(m, b)
}
func (m *LogList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList.Marshal(b, m, deterministic)
}
func (m *LogList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList.Merge(m, src)
}
func (m *LogList) XXX_Size() int {
	return xxx_messageInfo_LogList.Size(m)
}
func (m *LogList) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList.DiscardUnknown(m)
}

var xxx_messageInfo_LogList proto.InternalMessageInfo

type LogList_Request struct {
	LogToken             string            `protobuf:"bytes,1,opt,name=log_token,json=logToken,proto3" json:"log_token,omitempty"`
	Options              *LogStreamOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogList_Request) Reset()         { *m = LogList_Request{} }
func (m *LogList_Request) String() string { return proto.CompactTextString(m) }
func (*LogList_Request) ProtoMessage()    {}
func (*LogList_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{5, 0}
}
func (m *LogList_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList_Request.Unmarshal(m, b)
}
func (m *LogList_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList_Request.Marshal(b, m, deterministic)
}
func (m *LogList_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList_Request.Merge(m, src)
}
func (m *LogList_Request) XXX_Size() int {
	return xxx_messageInfo_LogList_Request.Size(m)
}
func (m *LogList_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogList_Request proto.InternalMessageInfo

func (m *LogList_Request) GetLogToken() string {
	if m != nil {
		return m.LogToken
	}
	return ""
}

func (m *LogList_Request) GetOptions() *LogStreamOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type LogList_Reply struct {
	Operations           []*LogOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LogList_Reply) Reset()         { *m = LogList_Reply{} }
func (m *LogList_Reply) String() string { return proto.CompactTextString(m) }
func (*LogList_Reply) ProtoMessage()    {}
func (*LogList_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{5, 1}
}
func (m *LogList_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList_Reply.Unmarshal(m, b)
}
func (m *LogList_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList_Reply.Marshal(b, m, deterministic)
}
func (m *LogList_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList_Reply.Merge(m, src)
}
func (m *LogList_Reply) XXX_Size() int {
	return xxx_messageInfo_LogList_Reply.Size(m)
}
func (m *LogList_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogList_Reply proto.InternalMessageInfo

func (m *LogList_Reply) GetOperations() []*LogOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type LogStream struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogStream) Reset()         { *m = LogStream{} }
func (m *LogStream) String() string { return proto.CompactTextString(m) }
func (*LogStream) ProtoMessage()    {}
func (*LogStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{6}
}
func (m *LogStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStream.Unmarshal(m, b)
}
func (m *LogStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStream.Marshal(b, m, deterministic)
}
func (m *LogStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStream.Merge(m, src)
}
func (m *LogStream) XXX_Size() int {
	return xxx_messageInfo_LogStream.Size(m)
}
func (m *LogStream) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStream.DiscardUnknown(m)
}

var xxx_messageInfo_LogStream proto.InternalMessageInfo

type LogStream_Request struct {
	LogToken             string            `protobuf:"bytes,1,opt,name=log_token,json=logToken,proto3" json:"log_token,omitempty"`
	Options              *LogStreamOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogStream_Request) Reset()         { *m = LogStream_Request{} }
func (m *LogStream_Request) String() string { return proto.CompactTextString(m) }
func (*LogStream_Request) ProtoMessage()    {}
func (*LogStream_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{6, 0}
}
func (m *LogStream_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStream_Request.Unmarshal(m, b)
}
func (m *LogStream_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStream_Request.Marshal(b, m, deterministic)
}
func (m *LogStream_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStream_Request.Merge(m, src)
}
func (m *LogStream_Request) XXX_Size() int {
	return xxx_messageInfo_LogStream_Request.Size(m)
}
func (m *LogStream_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStream_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogStream_Request proto.InternalMessageInfo

func (m *LogStream_Request) GetLogToken() string {
	if m != nil {
		return m.LogToken
	}
	return ""
}

func (m *LogStream_Request) GetOptions() *LogStreamOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type LogStream_Reply struct {
	Operation            *LogOperation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LogStream_Reply) Reset()         { *m = LogStream_Reply{} }
func (m *LogStream_Reply) String() string { return proto.CompactTextString(m) }
func (*LogStream_Reply) ProtoMessage()    {}
func (*LogStream_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{6, 1}
}
func (m *LogStream_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStream_Reply.Unmarshal(m, b)
}
func (m *LogStream_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStream_Reply.Marshal(b, m, deterministic)
}
func (m *LogStream_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStream_Reply.Merge(m, src)
}
func (m *LogStream_Reply) XXX_Size() int {
	return xxx_messageInfo_LogStream_Reply.Size(m)
}
func (m *LogStream_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStream_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogStream_Reply proto.InternalMessageInfo

func (m *LogStream_Reply) GetOperation() *LogOperation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func init() {
	proto.RegisterType((*LogOperation)(nil), "berty.protocol.LogOperation")
	proto.RegisterType((*LogStreamOptions)(nil), "berty.protocol.LogStreamOptions")
	proto.RegisterType((*LogToken)(nil), "berty.protocol.LogToken")
	proto.RegisterType((*LogToken_Request)(nil), "berty.protocol.LogToken.Request")
	proto.RegisterType((*LogToken_Reply)(nil), "berty.protocol.LogToken.Reply")
	proto.RegisterType((*LogAdd)(nil), "berty.protocol.LogAdd")
	proto.RegisterType((*LogAdd_Request)(nil), "berty.protocol.LogAdd.Request")
	proto.RegisterType((*LogAdd_Reply)(nil), "berty.protocol.LogAdd.Reply")
	proto.RegisterType((*LogGet)(nil), "berty.protocol.LogGet")
	proto.RegisterType((*LogGet_Request)(nil), "berty.protocol.LogGet.Request")
	proto.RegisterType((*LogGet_Reply)(nil), "berty.protocol.LogGet.Reply")
	proto.RegisterType((*LogList)(nil), "berty.protocol.LogList")
	proto.RegisterType((*LogList_Request)(nil), "berty.protocol.LogList.Request")
	proto.RegisterType((*LogList_Reply)(nil), "berty.protocol.LogList.Reply")
	proto.RegisterType((*LogStream)(nil), "berty.protocol.LogStream")
	proto.RegisterType((*LogStream_Request)(nil), "berty.protocol.LogStream.Request")
	proto.RegisterType((*LogStream_Reply)(nil), "berty.protocol.LogStream.Reply")
}

func init() { proto.RegisterFile("bertydemo.proto", fileDescriptor_bfb219fb5d306d6d) }

var fileDescriptor_bfb219fb5d306d6d = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x65, 0xa7, 0x49, 0xea, 0x4d, 0x29, 0xd5, 0x0a, 0x21, 0x63, 0x0a, 0x75, 0x0d, 0x87,
	0x5c, 0xb0, 0x51, 0xb8, 0xa0, 0xc0, 0xa5, 0x40, 0xb0, 0x40, 0x2b, 0x55, 0xb8, 0x3e, 0x71, 0xa9,
	0xfc, 0xb1, 0x6c, 0xad, 0xda, 0x1e, 0xe3, 0xac, 0x2b, 0xe5, 0x09, 0x10, 0xef, 0xc3, 0x03, 0xa2,
	0x5d, 0x7f, 0x24, 0x95, 0x9c, 0xd0, 0x03, 0xea, 0x6d, 0xc6, 0xf3, 0x9f, 0xdf, 0xfc, 0x35, 0xb3,
	0x32, 0x7a, 0x18, 0xd2, 0x92, 0xaf, 0x62, 0x9a, 0x81, 0x5d, 0x94, 0xc0, 0x01, 0x1f, 0xca, 0x0f,
	0x75, 0x12, 0x41, 0x6a, 0xbc, 0x62, 0x09, 0xbf, 0xaa, 0x42, 0x3b, 0x82, 0xcc, 0x61, 0xc0, 0xc0,
	0x91, 0x95, 0xb0, 0xfa, 0x21, 0x33, 0x99, 0xc8, 0xa8, 0xee, 0xb0, 0xbe, 0xa2, 0x03, 0x02, 0xec,
	0xbc, 0xa0, 0x65, 0xc0, 0x13, 0xc8, 0x31, 0x46, 0x7b, 0x79, 0x90, 0x51, 0x5d, 0x31, 0x95, 0xa9,
	0xe6, 0xc9, 0x18, 0x3f, 0x42, 0xc3, 0x9b, 0x20, 0xad, 0xa8, 0xae, 0x9a, 0xca, 0xf4, 0xc0, 0xab,
	0x13, 0x7c, 0x84, 0x06, 0x51, 0x12, 0xeb, 0x03, 0x29, 0x14, 0xa1, 0x95, 0xa3, 0x23, 0x02, 0xec,
	0x82, 0x97, 0x34, 0xc8, 0xce, 0x0b, 0x81, 0x5b, 0xe2, 0x43, 0xa4, 0xba, 0x7e, 0x43, 0x53, 0x5d,
	0x5f, 0x74, 0xb9, 0xfe, 0x42, 0x92, 0x34, 0x4f, 0x84, 0x42, 0x41, 0xfc, 0x06, 0xa3, 0x12, 0xa9,
	0x20, 0xfe, 0x42, 0xdf, 0xab, 0x15, 0xc4, 0x5f, 0xe0, 0xc7, 0x68, 0x14, 0x64, 0x50, 0xe5, 0x5c,
	0x1f, 0x9a, 0xca, 0xf4, 0x81, 0xd7, 0x64, 0xd6, 0x3b, 0xb4, 0x4f, 0x80, 0xf9, 0x70, 0x4d, 0x73,
	0x43, 0x43, 0x63, 0x8f, 0xfe, 0xac, 0xe8, 0x92, 0x1b, 0x2f, 0xd1, 0xd0, 0xa3, 0x45, 0xba, 0xc2,
	0x4f, 0x91, 0x96, 0x02, 0xbb, 0xe4, 0x42, 0xd0, 0x58, 0xd8, 0x4f, 0x9b, 0x06, 0xeb, 0x12, 0x8d,
	0x08, 0xb0, 0xb3, 0x38, 0x36, 0xe6, 0x5d, 0xeb, 0xce, 0x0e, 0xb1, 0x9a, 0x38, 0xe0, 0x41, 0xb3,
	0x05, 0x19, 0x1b, 0x4f, 0xda, 0x59, 0xcd, 0x36, 0x94, 0xf5, 0x36, 0x7e, 0x29, 0x72, 0x82, 0x4b,
	0xb9, 0xf1, 0xf6, 0x8e, 0x13, 0x1a, 0x88, 0xda, 0x41, 0x8c, 0x8f, 0x2d, 0x7f, 0x8e, 0x34, 0x68,
	0x8f, 0x24, 0xfb, 0x26, 0xb3, 0x63, 0xfb, 0xf6, 0xe9, 0xed, 0xcd, 0x43, 0x7a, 0x6b, 0xb9, 0xf5,
	0x47, 0x41, 0x63, 0x02, 0x8c, 0x24, 0x4b, 0x6e, 0x84, 0x77, 0xb4, 0x32, 0x47, 0x63, 0xa8, 0x4f,
	0x28, 0xed, 0x4c, 0x66, 0x66, 0xcf, 0xb4, 0x5b, 0xa7, 0xf6, 0xda, 0x06, 0x63, 0xd1, 0x9a, 0x7e,
	0x8f, 0x50, 0xe7, 0x62, 0xa9, 0x2b, 0xe6, 0xe0, 0x9f, 0xae, 0x37, 0xf4, 0xc2, 0xb6, 0xd6, 0x0d,
	0xb9, 0x17, 0xe3, 0xff, 0x63, 0xdb, 0xb3, 0xdf, 0x03, 0x34, 0xf9, 0x44, 0x33, 0xb8, 0xa0, 0xe5,
	0x4d, 0x12, 0x51, 0x4c, 0xd6, 0xaf, 0x14, 0xf7, 0x79, 0x91, 0x15, 0xbb, 0x7d, 0xbc, 0xcf, 0x77,
	0x28, 0x84, 0xb3, 0xcf, 0xed, 0xb3, 0xc5, 0x7d, 0xca, 0xb3, 0x38, 0xee, 0x48, 0xc7, 0x5b, 0xeb,
	0x6b, 0x8e, 0x4b, 0x79, 0x2f, 0xc7, 0xa5, 0x7c, 0x27, 0xa7, 0xae, 0x0b, 0xce, 0x97, 0xee, 0x69,
	0xe1, 0x93, 0x1e, 0xa1, 0x28, 0x74, 0xa4, 0x67, 0xdb, 0x05, 0x02, 0xf5, 0x6d, 0xe3, 0xdc, 0xf8,
	0x74, 0xeb, 0xd5, 0x3a, 0xdc, 0xc9, 0x2e, 0x49, 0x91, 0xae, 0x5e, 0x2b, 0x1f, 0x5e, 0x7c, 0x3f,
	0xad, 0x35, 0x9c, 0x46, 0x57, 0x8e, 0x0c, 0x1d, 0xf1, 0x4b, 0xbc, 0x66, 0x4e, 0xf7, 0x1f, 0x0d,
	0x47, 0x12, 0xf0, 0xe6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x67, 0x7e, 0xb2, 0x5b, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	// LogToken Generates a token to feed to other methods. Does not open or create a log
	LogToken(ctx context.Context, in *LogToken_Request, opts ...grpc.CallOption) (*LogToken_Reply, error)
	// LogAdd Appends data to a log. Will create or open the log identified by the token
	LogAdd(ctx context.Context, in *LogAdd_Request, opts ...grpc.CallOption) (*LogAdd_Reply, error)
	// LogGet Gets a log entry by cid. Will create or open the log identified by the token
	LogGet(ctx context.Context, in *LogGet_Request, opts ...grpc.CallOption) (*LogGet_Reply, error)
	// LogList Fetches a list of operation that occurred on a log. Will create or open the log identified by the token
	LogList(ctx context.Context, in *LogList_Request, opts ...grpc.CallOption) (*LogList_Reply, error)
	// LogStream Stream every operation occured on a log in real time
	LogStream(ctx context.Context, in *LogStream_Request, opts ...grpc.CallOption) (DemoService_LogStreamClient, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) LogToken(ctx context.Context, in *LogToken_Request, opts ...grpc.CallOption) (*LogToken_Reply, error) {
	out := new(LogToken_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogAdd(ctx context.Context, in *LogAdd_Request, opts ...grpc.CallOption) (*LogAdd_Reply, error) {
	out := new(LogAdd_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogGet(ctx context.Context, in *LogGet_Request, opts ...grpc.CallOption) (*LogGet_Reply, error) {
	out := new(LogGet_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogList(ctx context.Context, in *LogList_Request, opts ...grpc.CallOption) (*LogList_Reply, error) {
	out := new(LogList_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogStream(ctx context.Context, in *LogStream_Request, opts ...grpc.CallOption) (DemoService_LogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DemoService_serviceDesc.Streams[0], "/berty.protocol.DemoService/LogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &demoServiceLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DemoService_LogStreamClient interface {
	Recv() (*LogStream_Reply, error)
	grpc.ClientStream
}

type demoServiceLogStreamClient struct {
	grpc.ClientStream
}

func (x *demoServiceLogStreamClient) Recv() (*LogStream_Reply, error) {
	m := new(LogStream_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	// LogToken Generates a token to feed to other methods. Does not open or create a log
	LogToken(context.Context, *LogToken_Request) (*LogToken_Reply, error)
	// LogAdd Appends data to a log. Will create or open the log identified by the token
	LogAdd(context.Context, *LogAdd_Request) (*LogAdd_Reply, error)
	// LogGet Gets a log entry by cid. Will create or open the log identified by the token
	LogGet(context.Context, *LogGet_Request) (*LogGet_Reply, error)
	// LogList Fetches a list of operation that occurred on a log. Will create or open the log identified by the token
	LogList(context.Context, *LogList_Request) (*LogList_Reply, error)
	// LogStream Stream every operation occured on a log in real time
	LogStream(*LogStream_Request, DemoService_LogStreamServer) error
}

// UnimplementedDemoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServiceServer struct {
}

func (*UnimplementedDemoServiceServer) LogToken(ctx context.Context, req *LogToken_Request) (*LogToken_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogToken not implemented")
}
func (*UnimplementedDemoServiceServer) LogAdd(ctx context.Context, req *LogAdd_Request) (*LogAdd_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogAdd not implemented")
}
func (*UnimplementedDemoServiceServer) LogGet(ctx context.Context, req *LogGet_Request) (*LogGet_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogGet not implemented")
}
func (*UnimplementedDemoServiceServer) LogList(ctx context.Context, req *LogList_Request) (*LogList_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogList not implemented")
}
func (*UnimplementedDemoServiceServer) LogStream(req *LogStream_Request, srv DemoService_LogStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method LogStream not implemented")
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_LogToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogToken_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogToken(ctx, req.(*LogToken_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogAdd_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogAdd(ctx, req.(*LogAdd_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogGet_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogGet(ctx, req.(*LogGet_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogList_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogList(ctx, req.(*LogList_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogStream_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DemoServiceServer).LogStream(m, &demoServiceLogStreamServer{stream})
}

type DemoService_LogStreamServer interface {
	Send(*LogStream_Reply) error
	grpc.ServerStream
}

type demoServiceLogStreamServer struct {
	grpc.ServerStream
}

func (x *demoServiceLogStreamServer) Send(m *LogStream_Reply) error {
	return x.ServerStream.SendMsg(m)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "berty.protocol.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogToken",
			Handler:    _DemoService_LogToken_Handler,
		},
		{
			MethodName: "LogAdd",
			Handler:    _DemoService_LogAdd_Handler,
		},
		{
			MethodName: "LogGet",
			Handler:    _DemoService_LogGet_Handler,
		},
		{
			MethodName: "LogList",
			Handler:    _DemoService_LogList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LogStream",
			Handler:       _DemoService_LogStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertydemo.proto",
}
