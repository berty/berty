// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bertydemo.proto

package bertydemo

import (
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AddKey struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddKey) Reset()         { *m = AddKey{} }
func (m *AddKey) String() string { return proto.CompactTextString(m) }
func (*AddKey) ProtoMessage()    {}
func (*AddKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{0}
}
func (m *AddKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKey.Unmarshal(m, b)
}
func (m *AddKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKey.Marshal(b, m, deterministic)
}
func (m *AddKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKey.Merge(m, src)
}
func (m *AddKey) XXX_Size() int {
	return xxx_messageInfo_AddKey.Size(m)
}
func (m *AddKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKey.DiscardUnknown(m)
}

var xxx_messageInfo_AddKey proto.InternalMessageInfo

type AddKey_Request struct {
	PrivKey              []byte   `protobuf:"bytes,1,opt,name=priv_key,json=privKey,proto3" json:"priv_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddKey_Request) Reset()         { *m = AddKey_Request{} }
func (m *AddKey_Request) String() string { return proto.CompactTextString(m) }
func (*AddKey_Request) ProtoMessage()    {}
func (*AddKey_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{0, 0}
}
func (m *AddKey_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKey_Request.Unmarshal(m, b)
}
func (m *AddKey_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKey_Request.Marshal(b, m, deterministic)
}
func (m *AddKey_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKey_Request.Merge(m, src)
}
func (m *AddKey_Request) XXX_Size() int {
	return xxx_messageInfo_AddKey_Request.Size(m)
}
func (m *AddKey_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKey_Request.DiscardUnknown(m)
}

var xxx_messageInfo_AddKey_Request proto.InternalMessageInfo

func (m *AddKey_Request) GetPrivKey() []byte {
	if m != nil {
		return m.PrivKey
	}
	return nil
}

type AddKey_Reply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddKey_Reply) Reset()         { *m = AddKey_Reply{} }
func (m *AddKey_Reply) String() string { return proto.CompactTextString(m) }
func (*AddKey_Reply) ProtoMessage()    {}
func (*AddKey_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{0, 1}
}
func (m *AddKey_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKey_Reply.Unmarshal(m, b)
}
func (m *AddKey_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKey_Reply.Marshal(b, m, deterministic)
}
func (m *AddKey_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKey_Reply.Merge(m, src)
}
func (m *AddKey_Reply) XXX_Size() int {
	return xxx_messageInfo_AddKey_Reply.Size(m)
}
func (m *AddKey_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKey_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_AddKey_Reply proto.InternalMessageInfo

type Log struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1}
}
func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

type Log_Operation struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Cid                  string   `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log_Operation) Reset()         { *m = Log_Operation{} }
func (m *Log_Operation) String() string { return proto.CompactTextString(m) }
func (*Log_Operation) ProtoMessage()    {}
func (*Log_Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1, 0}
}
func (m *Log_Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log_Operation.Unmarshal(m, b)
}
func (m *Log_Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log_Operation.Marshal(b, m, deterministic)
}
func (m *Log_Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log_Operation.Merge(m, src)
}
func (m *Log_Operation) XXX_Size() int {
	return xxx_messageInfo_Log_Operation.Size(m)
}
func (m *Log_Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Log_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Log_Operation proto.InternalMessageInfo

func (m *Log_Operation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Log_Operation) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Log_Operation) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type Log_StreamOptions struct {
	GT                   string   `protobuf:"bytes,1,opt,name=GT,proto3" json:"GT,omitempty"`
	GTE                  string   `protobuf:"bytes,2,opt,name=GTE,proto3" json:"GTE,omitempty"`
	LT                   string   `protobuf:"bytes,3,opt,name=LT,proto3" json:"LT,omitempty"`
	LTE                  string   `protobuf:"bytes,4,opt,name=LTE,proto3" json:"LTE,omitempty"`
	Amount               uint32   `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log_StreamOptions) Reset()         { *m = Log_StreamOptions{} }
func (m *Log_StreamOptions) String() string { return proto.CompactTextString(m) }
func (*Log_StreamOptions) ProtoMessage()    {}
func (*Log_StreamOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1, 1}
}
func (m *Log_StreamOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log_StreamOptions.Unmarshal(m, b)
}
func (m *Log_StreamOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log_StreamOptions.Marshal(b, m, deterministic)
}
func (m *Log_StreamOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log_StreamOptions.Merge(m, src)
}
func (m *Log_StreamOptions) XXX_Size() int {
	return xxx_messageInfo_Log_StreamOptions.Size(m)
}
func (m *Log_StreamOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_Log_StreamOptions.DiscardUnknown(m)
}

var xxx_messageInfo_Log_StreamOptions proto.InternalMessageInfo

func (m *Log_StreamOptions) GetGT() string {
	if m != nil {
		return m.GT
	}
	return ""
}

func (m *Log_StreamOptions) GetGTE() string {
	if m != nil {
		return m.GTE
	}
	return ""
}

func (m *Log_StreamOptions) GetLT() string {
	if m != nil {
		return m.LT
	}
	return ""
}

func (m *Log_StreamOptions) GetLTE() string {
	if m != nil {
		return m.LTE
	}
	return ""
}

func (m *Log_StreamOptions) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Log_ManifestEntry struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log_ManifestEntry) Reset()         { *m = Log_ManifestEntry{} }
func (m *Log_ManifestEntry) String() string { return proto.CompactTextString(m) }
func (*Log_ManifestEntry) ProtoMessage()    {}
func (*Log_ManifestEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1, 2}
}
func (m *Log_ManifestEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log_ManifestEntry.Unmarshal(m, b)
}
func (m *Log_ManifestEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log_ManifestEntry.Marshal(b, m, deterministic)
}
func (m *Log_ManifestEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log_ManifestEntry.Merge(m, src)
}
func (m *Log_ManifestEntry) XXX_Size() int {
	return xxx_messageInfo_Log_ManifestEntry.Size(m)
}
func (m *Log_ManifestEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Log_ManifestEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Log_ManifestEntry proto.InternalMessageInfo

func (m *Log_ManifestEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Log_ManifestEntry) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type Log_Request struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ManifestType         string               `protobuf:"bytes,2,opt,name=manifest_type,json=manifestType,proto3" json:"manifest_type,omitempty"`
	ManifestAccess       []*Log_ManifestEntry `protobuf:"bytes,3,rep,name=manifest_access,json=manifestAccess,proto3" json:"manifest_access,omitempty"`
	IdentityType         string               `protobuf:"bytes,4,opt,name=identity_type,json=identityType,proto3" json:"identity_type,omitempty"`
	IdentityId           string               `protobuf:"bytes,5,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Log_Request) Reset()         { *m = Log_Request{} }
func (m *Log_Request) String() string { return proto.CompactTextString(m) }
func (*Log_Request) ProtoMessage()    {}
func (*Log_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1, 3}
}
func (m *Log_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log_Request.Unmarshal(m, b)
}
func (m *Log_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log_Request.Marshal(b, m, deterministic)
}
func (m *Log_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log_Request.Merge(m, src)
}
func (m *Log_Request) XXX_Size() int {
	return xxx_messageInfo_Log_Request.Size(m)
}
func (m *Log_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Log_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Log_Request proto.InternalMessageInfo

func (m *Log_Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Log_Request) GetManifestType() string {
	if m != nil {
		return m.ManifestType
	}
	return ""
}

func (m *Log_Request) GetManifestAccess() []*Log_ManifestEntry {
	if m != nil {
		return m.ManifestAccess
	}
	return nil
}

func (m *Log_Request) GetIdentityType() string {
	if m != nil {
		return m.IdentityType
	}
	return ""
}

func (m *Log_Request) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

type Log_Reply struct {
	LogHandle            string   `protobuf:"bytes,1,opt,name=log_handle,json=logHandle,proto3" json:"log_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log_Reply) Reset()         { *m = Log_Reply{} }
func (m *Log_Reply) String() string { return proto.CompactTextString(m) }
func (*Log_Reply) ProtoMessage()    {}
func (*Log_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{1, 4}
}
func (m *Log_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log_Reply.Unmarshal(m, b)
}
func (m *Log_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log_Reply.Marshal(b, m, deterministic)
}
func (m *Log_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log_Reply.Merge(m, src)
}
func (m *Log_Reply) XXX_Size() int {
	return xxx_messageInfo_Log_Reply.Size(m)
}
func (m *Log_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Log_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Log_Reply proto.InternalMessageInfo

func (m *Log_Reply) GetLogHandle() string {
	if m != nil {
		return m.LogHandle
	}
	return ""
}

type GroupToLog struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupToLog) Reset()         { *m = GroupToLog{} }
func (m *GroupToLog) String() string { return proto.CompactTextString(m) }
func (*GroupToLog) ProtoMessage()    {}
func (*GroupToLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{2}
}
func (m *GroupToLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupToLog.Unmarshal(m, b)
}
func (m *GroupToLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupToLog.Marshal(b, m, deterministic)
}
func (m *GroupToLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupToLog.Merge(m, src)
}
func (m *GroupToLog) XXX_Size() int {
	return xxx_messageInfo_GroupToLog.Size(m)
}
func (m *GroupToLog) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupToLog.DiscardUnknown(m)
}

var xxx_messageInfo_GroupToLog proto.InternalMessageInfo

type GroupToLog_Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GroupPubKey          []byte   `protobuf:"bytes,2,opt,name=group_pub_key,json=groupPubKey,proto3" json:"group_pub_key,omitempty"`
	GroupSigningKey      []byte   `protobuf:"bytes,3,opt,name=group_signing_key,json=groupSigningKey,proto3" json:"group_signing_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupToLog_Request) Reset()         { *m = GroupToLog_Request{} }
func (m *GroupToLog_Request) String() string { return proto.CompactTextString(m) }
func (*GroupToLog_Request) ProtoMessage()    {}
func (*GroupToLog_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{2, 0}
}
func (m *GroupToLog_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupToLog_Request.Unmarshal(m, b)
}
func (m *GroupToLog_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupToLog_Request.Marshal(b, m, deterministic)
}
func (m *GroupToLog_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupToLog_Request.Merge(m, src)
}
func (m *GroupToLog_Request) XXX_Size() int {
	return xxx_messageInfo_GroupToLog_Request.Size(m)
}
func (m *GroupToLog_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupToLog_Request.DiscardUnknown(m)
}

var xxx_messageInfo_GroupToLog_Request proto.InternalMessageInfo

func (m *GroupToLog_Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupToLog_Request) GetGroupPubKey() []byte {
	if m != nil {
		return m.GroupPubKey
	}
	return nil
}

func (m *GroupToLog_Request) GetGroupSigningKey() []byte {
	if m != nil {
		return m.GroupSigningKey
	}
	return nil
}

type GroupToLog_Reply struct {
	LogHandle            string   `protobuf:"bytes,1,opt,name=log_handle,json=logHandle,proto3" json:"log_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupToLog_Reply) Reset()         { *m = GroupToLog_Reply{} }
func (m *GroupToLog_Reply) String() string { return proto.CompactTextString(m) }
func (*GroupToLog_Reply) ProtoMessage()    {}
func (*GroupToLog_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{2, 1}
}
func (m *GroupToLog_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupToLog_Reply.Unmarshal(m, b)
}
func (m *GroupToLog_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupToLog_Reply.Marshal(b, m, deterministic)
}
func (m *GroupToLog_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupToLog_Reply.Merge(m, src)
}
func (m *GroupToLog_Reply) XXX_Size() int {
	return xxx_messageInfo_GroupToLog_Reply.Size(m)
}
func (m *GroupToLog_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupToLog_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupToLog_Reply proto.InternalMessageInfo

func (m *GroupToLog_Reply) GetLogHandle() string {
	if m != nil {
		return m.LogHandle
	}
	return ""
}

type LogAdd struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAdd) Reset()         { *m = LogAdd{} }
func (m *LogAdd) String() string { return proto.CompactTextString(m) }
func (*LogAdd) ProtoMessage()    {}
func (*LogAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{3}
}
func (m *LogAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAdd.Unmarshal(m, b)
}
func (m *LogAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAdd.Marshal(b, m, deterministic)
}
func (m *LogAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAdd.Merge(m, src)
}
func (m *LogAdd) XXX_Size() int {
	return xxx_messageInfo_LogAdd.Size(m)
}
func (m *LogAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAdd.DiscardUnknown(m)
}

var xxx_messageInfo_LogAdd proto.InternalMessageInfo

type LogAdd_Request struct {
	LogHandle            string   `protobuf:"bytes,1,opt,name=log_handle,json=logHandle,proto3" json:"log_handle,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAdd_Request) Reset()         { *m = LogAdd_Request{} }
func (m *LogAdd_Request) String() string { return proto.CompactTextString(m) }
func (*LogAdd_Request) ProtoMessage()    {}
func (*LogAdd_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{3, 0}
}
func (m *LogAdd_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAdd_Request.Unmarshal(m, b)
}
func (m *LogAdd_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAdd_Request.Marshal(b, m, deterministic)
}
func (m *LogAdd_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAdd_Request.Merge(m, src)
}
func (m *LogAdd_Request) XXX_Size() int {
	return xxx_messageInfo_LogAdd_Request.Size(m)
}
func (m *LogAdd_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAdd_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogAdd_Request proto.InternalMessageInfo

func (m *LogAdd_Request) GetLogHandle() string {
	if m != nil {
		return m.LogHandle
	}
	return ""
}

func (m *LogAdd_Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type LogAdd_Reply struct {
	Cid                  string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAdd_Reply) Reset()         { *m = LogAdd_Reply{} }
func (m *LogAdd_Reply) String() string { return proto.CompactTextString(m) }
func (*LogAdd_Reply) ProtoMessage()    {}
func (*LogAdd_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{3, 1}
}
func (m *LogAdd_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAdd_Reply.Unmarshal(m, b)
}
func (m *LogAdd_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAdd_Reply.Marshal(b, m, deterministic)
}
func (m *LogAdd_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAdd_Reply.Merge(m, src)
}
func (m *LogAdd_Reply) XXX_Size() int {
	return xxx_messageInfo_LogAdd_Reply.Size(m)
}
func (m *LogAdd_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAdd_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogAdd_Reply proto.InternalMessageInfo

func (m *LogAdd_Reply) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type LogGet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogGet) Reset()         { *m = LogGet{} }
func (m *LogGet) String() string { return proto.CompactTextString(m) }
func (*LogGet) ProtoMessage()    {}
func (*LogGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{4}
}
func (m *LogGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogGet.Unmarshal(m, b)
}
func (m *LogGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogGet.Marshal(b, m, deterministic)
}
func (m *LogGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogGet.Merge(m, src)
}
func (m *LogGet) XXX_Size() int {
	return xxx_messageInfo_LogGet.Size(m)
}
func (m *LogGet) XXX_DiscardUnknown() {
	xxx_messageInfo_LogGet.DiscardUnknown(m)
}

var xxx_messageInfo_LogGet proto.InternalMessageInfo

type LogGet_Request struct {
	LogHandle            string   `protobuf:"bytes,1,opt,name=log_handle,json=logHandle,proto3" json:"log_handle,omitempty"`
	Cid                  string   `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogGet_Request) Reset()         { *m = LogGet_Request{} }
func (m *LogGet_Request) String() string { return proto.CompactTextString(m) }
func (*LogGet_Request) ProtoMessage()    {}
func (*LogGet_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{4, 0}
}
func (m *LogGet_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogGet_Request.Unmarshal(m, b)
}
func (m *LogGet_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogGet_Request.Marshal(b, m, deterministic)
}
func (m *LogGet_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogGet_Request.Merge(m, src)
}
func (m *LogGet_Request) XXX_Size() int {
	return xxx_messageInfo_LogGet_Request.Size(m)
}
func (m *LogGet_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogGet_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogGet_Request proto.InternalMessageInfo

func (m *LogGet_Request) GetLogHandle() string {
	if m != nil {
		return m.LogHandle
	}
	return ""
}

func (m *LogGet_Request) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type LogGet_Reply struct {
	Op                   *Log_Operation `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LogGet_Reply) Reset()         { *m = LogGet_Reply{} }
func (m *LogGet_Reply) String() string { return proto.CompactTextString(m) }
func (*LogGet_Reply) ProtoMessage()    {}
func (*LogGet_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{4, 1}
}
func (m *LogGet_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogGet_Reply.Unmarshal(m, b)
}
func (m *LogGet_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogGet_Reply.Marshal(b, m, deterministic)
}
func (m *LogGet_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogGet_Reply.Merge(m, src)
}
func (m *LogGet_Reply) XXX_Size() int {
	return xxx_messageInfo_LogGet_Reply.Size(m)
}
func (m *LogGet_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogGet_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogGet_Reply proto.InternalMessageInfo

func (m *LogGet_Reply) GetOp() *Log_Operation {
	if m != nil {
		return m.Op
	}
	return nil
}

type LogStream struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogStream) Reset()         { *m = LogStream{} }
func (m *LogStream) String() string { return proto.CompactTextString(m) }
func (*LogStream) ProtoMessage()    {}
func (*LogStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{5}
}
func (m *LogStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStream.Unmarshal(m, b)
}
func (m *LogStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStream.Marshal(b, m, deterministic)
}
func (m *LogStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStream.Merge(m, src)
}
func (m *LogStream) XXX_Size() int {
	return xxx_messageInfo_LogStream.Size(m)
}
func (m *LogStream) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStream.DiscardUnknown(m)
}

var xxx_messageInfo_LogStream proto.InternalMessageInfo

type LogStream_Request struct {
	LogHandle            string             `protobuf:"bytes,1,opt,name=log_handle,json=logHandle,proto3" json:"log_handle,omitempty"`
	Options              *Log_StreamOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LogStream_Request) Reset()         { *m = LogStream_Request{} }
func (m *LogStream_Request) String() string { return proto.CompactTextString(m) }
func (*LogStream_Request) ProtoMessage()    {}
func (*LogStream_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{5, 0}
}
func (m *LogStream_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStream_Request.Unmarshal(m, b)
}
func (m *LogStream_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStream_Request.Marshal(b, m, deterministic)
}
func (m *LogStream_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStream_Request.Merge(m, src)
}
func (m *LogStream_Request) XXX_Size() int {
	return xxx_messageInfo_LogStream_Request.Size(m)
}
func (m *LogStream_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStream_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogStream_Request proto.InternalMessageInfo

func (m *LogStream_Request) GetLogHandle() string {
	if m != nil {
		return m.LogHandle
	}
	return ""
}

func (m *LogStream_Request) GetOptions() *Log_StreamOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type LogList struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogList) Reset()         { *m = LogList{} }
func (m *LogList) String() string { return proto.CompactTextString(m) }
func (*LogList) ProtoMessage()    {}
func (*LogList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{6}
}
func (m *LogList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList.Unmarshal(m, b)
}
func (m *LogList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList.Marshal(b, m, deterministic)
}
func (m *LogList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList.Merge(m, src)
}
func (m *LogList) XXX_Size() int {
	return xxx_messageInfo_LogList.Size(m)
}
func (m *LogList) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList.DiscardUnknown(m)
}

var xxx_messageInfo_LogList proto.InternalMessageInfo

type LogList_Request struct {
	LogHandle            string             `protobuf:"bytes,1,opt,name=log_handle,json=logHandle,proto3" json:"log_handle,omitempty"`
	Options              *Log_StreamOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LogList_Request) Reset()         { *m = LogList_Request{} }
func (m *LogList_Request) String() string { return proto.CompactTextString(m) }
func (*LogList_Request) ProtoMessage()    {}
func (*LogList_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{6, 0}
}
func (m *LogList_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList_Request.Unmarshal(m, b)
}
func (m *LogList_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList_Request.Marshal(b, m, deterministic)
}
func (m *LogList_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList_Request.Merge(m, src)
}
func (m *LogList_Request) XXX_Size() int {
	return xxx_messageInfo_LogList_Request.Size(m)
}
func (m *LogList_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList_Request.DiscardUnknown(m)
}

var xxx_messageInfo_LogList_Request proto.InternalMessageInfo

func (m *LogList_Request) GetLogHandle() string {
	if m != nil {
		return m.LogHandle
	}
	return ""
}

func (m *LogList_Request) GetOptions() *Log_StreamOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type LogList_Reply struct {
	Ops                  []*Log_Operation `protobuf:"bytes,1,rep,name=ops,proto3" json:"ops,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LogList_Reply) Reset()         { *m = LogList_Reply{} }
func (m *LogList_Reply) String() string { return proto.CompactTextString(m) }
func (*LogList_Reply) ProtoMessage()    {}
func (*LogList_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb219fb5d306d6d, []int{6, 1}
}
func (m *LogList_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList_Reply.Unmarshal(m, b)
}
func (m *LogList_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList_Reply.Marshal(b, m, deterministic)
}
func (m *LogList_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList_Reply.Merge(m, src)
}
func (m *LogList_Reply) XXX_Size() int {
	return xxx_messageInfo_LogList_Reply.Size(m)
}
func (m *LogList_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_LogList_Reply proto.InternalMessageInfo

func (m *LogList_Reply) GetOps() []*Log_Operation {
	if m != nil {
		return m.Ops
	}
	return nil
}

func init() {
	proto.RegisterType((*AddKey)(nil), "berty.protocol.AddKey")
	proto.RegisterType((*AddKey_Request)(nil), "berty.protocol.AddKey.Request")
	proto.RegisterType((*AddKey_Reply)(nil), "berty.protocol.AddKey.Reply")
	proto.RegisterType((*Log)(nil), "berty.protocol.Log")
	proto.RegisterType((*Log_Operation)(nil), "berty.protocol.Log.Operation")
	proto.RegisterType((*Log_StreamOptions)(nil), "berty.protocol.Log.StreamOptions")
	proto.RegisterType((*Log_ManifestEntry)(nil), "berty.protocol.Log.ManifestEntry")
	proto.RegisterType((*Log_Request)(nil), "berty.protocol.Log.Request")
	proto.RegisterType((*Log_Reply)(nil), "berty.protocol.Log.Reply")
	proto.RegisterType((*GroupToLog)(nil), "berty.protocol.GroupToLog")
	proto.RegisterType((*GroupToLog_Request)(nil), "berty.protocol.GroupToLog.Request")
	proto.RegisterType((*GroupToLog_Reply)(nil), "berty.protocol.GroupToLog.Reply")
	proto.RegisterType((*LogAdd)(nil), "berty.protocol.LogAdd")
	proto.RegisterType((*LogAdd_Request)(nil), "berty.protocol.LogAdd.Request")
	proto.RegisterType((*LogAdd_Reply)(nil), "berty.protocol.LogAdd.Reply")
	proto.RegisterType((*LogGet)(nil), "berty.protocol.LogGet")
	proto.RegisterType((*LogGet_Request)(nil), "berty.protocol.LogGet.Request")
	proto.RegisterType((*LogGet_Reply)(nil), "berty.protocol.LogGet.Reply")
	proto.RegisterType((*LogStream)(nil), "berty.protocol.LogStream")
	proto.RegisterType((*LogStream_Request)(nil), "berty.protocol.LogStream.Request")
	proto.RegisterType((*LogList)(nil), "berty.protocol.LogList")
	proto.RegisterType((*LogList_Request)(nil), "berty.protocol.LogList.Request")
	proto.RegisterType((*LogList_Reply)(nil), "berty.protocol.LogList.Reply")
}

func init() { proto.RegisterFile("bertydemo.proto", fileDescriptor_bfb219fb5d306d6d) }

var fileDescriptor_bfb219fb5d306d6d = []byte{
	// 741 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdd, 0x4e, 0xdb, 0x48,
	0x14, 0x96, 0x6d, 0x48, 0xd6, 0x27, 0x04, 0x76, 0x47, 0xab, 0x95, 0xf1, 0x2e, 0x4b, 0x30, 0xab,
	0x55, 0x54, 0x89, 0xa4, 0xa2, 0x52, 0xff, 0x7b, 0x41, 0xd5, 0xe0, 0x52, 0x5c, 0x51, 0x19, 0x5f,
	0xf5, 0x26, 0x72, 0xe2, 0xc1, 0x58, 0xc4, 0x1e, 0xd7, 0x1e, 0x23, 0x59, 0xea, 0x63, 0xf4, 0x0d,
	0x7a, 0xd7, 0xe7, 0xe9, 0xab, 0xf4, 0xbe, 0x9a, 0x33, 0xb6, 0x03, 0x34, 0xa4, 0x5c, 0xf5, 0xee,
	0xfc, 0x7c, 0xdf, 0x77, 0xce, 0x99, 0x39, 0x63, 0xc3, 0xc6, 0x84, 0x66, 0xbc, 0x0c, 0x68, 0xcc,
	0x06, 0x69, 0xc6, 0x38, 0x23, 0xeb, 0x18, 0x90, 0xce, 0x94, 0xcd, 0xcc, 0xbd, 0x30, 0xe2, 0xe7,
	0xc5, 0x64, 0x30, 0x65, 0xf1, 0x30, 0x64, 0x21, 0x1b, 0x62, 0x66, 0x52, 0x9c, 0xa1, 0x87, 0x0e,
	0x5a, 0x92, 0x61, 0x3d, 0x82, 0xd6, 0x41, 0x10, 0x1c, 0xd3, 0xd2, 0xfc, 0x0f, 0xda, 0x2e, 0xfd,
	0x50, 0xd0, 0x9c, 0x93, 0x4d, 0xf8, 0x2d, 0xcd, 0xa2, 0xcb, 0xf1, 0x05, 0x2d, 0x0d, 0xa5, 0xa7,
	0xf4, 0xd7, 0xdc, 0xb6, 0xf0, 0x05, 0xaa, 0x0d, 0xab, 0x2e, 0x4d, 0x67, 0xa5, 0xf5, 0x4d, 0x03,
	0xcd, 0x61, 0xa1, 0x69, 0x83, 0x7e, 0x92, 0xd2, 0xcc, 0xe7, 0x11, 0x4b, 0x08, 0x81, 0x95, 0xc4,
	0x8f, 0x29, 0x92, 0x74, 0x17, 0x6d, 0xf2, 0x27, 0xac, 0x5e, 0xfa, 0xb3, 0x82, 0x1a, 0x2a, 0x2a,
	0x49, 0x87, 0xfc, 0x0e, 0xda, 0x34, 0x0a, 0x0c, 0x0d, 0x81, 0xc2, 0x34, 0x2f, 0xa0, 0x7b, 0xca,
	0x33, 0xea, 0xc7, 0x27, 0xa9, 0xd0, 0xca, 0xc9, 0x3a, 0xa8, 0xb6, 0x57, 0x49, 0xa9, 0xb6, 0x27,
	0x28, 0xb6, 0x37, 0x42, 0x19, 0xdd, 0x15, 0xa6, 0x40, 0x38, 0x5e, 0xa5, 0xa1, 0x3a, 0x88, 0x70,
	0xbc, 0x91, 0xb1, 0x22, 0x11, 0x8e, 0x37, 0x22, 0x7f, 0x41, 0xcb, 0x8f, 0x59, 0x91, 0x70, 0x63,
	0xb5, 0xa7, 0xf4, 0xbb, 0x6e, 0xe5, 0x99, 0x4f, 0xa0, 0xfb, 0xd6, 0x4f, 0xa2, 0x33, 0x9a, 0xf3,
	0x51, 0xc2, 0xb3, 0x52, 0x50, 0xeb, 0x69, 0x75, 0x57, 0x98, 0x82, 0x8a, 0xad, 0xe6, 0x86, 0xda,
	0xd3, 0xfa, 0xba, 0x5b, 0x79, 0xe6, 0x57, 0x65, 0x7e, 0x50, 0x8b, 0xe6, 0xdd, 0x85, 0x6e, 0x5c,
	0x49, 0x8f, 0x79, 0x99, 0xd2, 0xaa, 0xe1, 0xb5, 0x3a, 0xe8, 0x95, 0x29, 0x25, 0x6f, 0x60, 0xa3,
	0x01, 0xf9, 0xd3, 0x29, 0xcd, 0x73, 0x43, 0xeb, 0x69, 0xfd, 0xce, 0xfe, 0xce, 0xe0, 0xfa, 0x7d,
	0x0e, 0x1c, 0x16, 0x0e, 0xae, 0xb5, 0xea, 0xae, 0xd7, 0xcc, 0x03, 0x24, 0x8a, 0x82, 0x51, 0x40,
	0x13, 0x1e, 0xf1, 0x52, 0x16, 0x94, 0xf3, 0xaf, 0xd5, 0x41, 0x2c, 0xb8, 0x0d, 0x9d, 0x06, 0x14,
	0x05, 0x78, 0x1a, 0xba, 0x0b, 0x75, 0xe8, 0x28, 0x30, 0xff, 0xaf, 0x2e, 0x96, 0x6c, 0x01, 0xcc,
	0x58, 0x38, 0x3e, 0xf7, 0x93, 0x60, 0x56, 0x4f, 0xa6, 0xcf, 0x58, 0xf8, 0x1a, 0x03, 0xd6, 0x67,
	0x05, 0xc0, 0xce, 0x58, 0x91, 0x7a, 0x4c, 0x5c, 0x7f, 0xbc, 0xfc, 0x30, 0x2c, 0xe8, 0x86, 0x02,
	0x3c, 0x4e, 0x8b, 0x09, 0xae, 0x93, 0x5c, 0x82, 0x0e, 0x06, 0xdf, 0x15, 0x93, 0x63, 0x5a, 0x92,
	0x7b, 0xf0, 0x87, 0xc4, 0xe4, 0x51, 0x98, 0x44, 0x49, 0x88, 0x38, 0x0d, 0x71, 0x1b, 0x98, 0x38,
	0x95, 0x71, 0xb1, 0x7e, 0x77, 0xed, 0xd2, 0x87, 0x96, 0xc3, 0xc2, 0x83, 0x20, 0x30, 0x9f, 0xcf,
	0x1b, 0x5c, 0xce, 0x11, 0xfd, 0x07, 0x3e, 0xf7, 0xab, 0x16, 0xd1, 0x36, 0x37, 0xeb, 0x7a, 0xd5,
	0xbe, 0x2a, 0xcd, 0xbe, 0x5a, 0x1f, 0xb1, 0x84, 0x4d, 0xb9, 0xf9, 0xf4, 0xce, 0x25, 0x2a, 0x15,
	0x75, 0xbe, 0xf5, 0x0f, 0xeb, 0x02, 0x7b, 0xa0, 0xb2, 0x14, 0x19, 0x9d, 0xfd, 0xad, 0x45, 0x4b,
	0xd0, 0xbc, 0x32, 0x57, 0x65, 0xa9, 0x95, 0x81, 0xee, 0xb0, 0x50, 0x3e, 0x18, 0x93, 0xde, 0xb9,
	0x81, 0x67, 0xd0, 0x66, 0xf2, 0x79, 0x61, 0x13, 0xb7, 0xec, 0xdb, 0xb5, 0x77, 0xe8, 0xd6, 0x0c,
	0xeb, 0x8b, 0x02, 0x6d, 0x87, 0x85, 0x4e, 0x94, 0xf3, 0x5f, 0x54, 0xd2, 0x7c, 0x5c, 0x1f, 0xcf,
	0x10, 0x34, 0x96, 0xe6, 0x86, 0x82, 0x8f, 0xe4, 0x27, 0xe7, 0x23, 0x90, 0xfb, 0x9f, 0x56, 0xa0,
	0xf3, 0x8a, 0xc6, 0xec, 0x94, 0x66, 0x97, 0xd1, 0x94, 0x92, 0xc3, 0xfa, 0x43, 0x47, 0xfe, 0xbd,
	0xc9, 0x96, 0xf1, 0x41, 0x35, 0x8f, 0xf9, 0xcf, 0xad, 0x79, 0xd1, 0xc8, 0x0b, 0xfc, 0xec, 0x91,
	0xbf, 0x17, 0xb5, 0x50, 0x2b, 0x6c, 0x2e, 0x4e, 0x0a, 0xba, 0x7b, 0xf5, 0xf5, 0x10, 0xeb, 0x26,
	0x70, 0x9e, 0x6b, 0xc4, 0x7a, 0x4b, 0x31, 0x42, 0xf3, 0xb0, 0x5e, 0xf6, 0x1f, 0x47, 0x93, 0xf1,
	0xdb, 0x47, 0x6b, 0xf2, 0x73, 0x1d, 0x9b, 0xf2, 0x85, 0x3a, 0x36, 0xe5, 0x4b, 0x75, 0x64, 0x5e,
	0xe8, 0x9c, 0x5c, 0xd9, 0x4d, 0xb2, 0xe8, 0xb6, 0x65, 0xaa, 0x51, 0x5b, 0x7e, 0x9d, 0xf7, 0x15,
	0x72, 0xd4, 0xec, 0x1d, 0xd9, 0x5e, 0x80, 0x15, 0x89, 0xa5, 0x62, 0x15, 0x20, 0x9d, 0x95, 0x2f,
	0x77, 0xdf, 0xef, 0xc8, 0x3c, 0xa7, 0xd3, 0xf3, 0x21, 0x9a, 0x43, 0xf1, 0x93, 0xbc, 0x08, 0x87,
	0xcd, 0x9f, 0x75, 0xd2, 0x42, 0xf2, 0x83, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x21, 0x61,
	0xdf, 0x6d, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	// AddKey Adds an ed25519 keypair in the keystore passed on Log initialization, noop if already added
	AddKey(ctx context.Context, in *AddKey_Request, opts ...grpc.CallOption) (*AddKey_Reply, error)
	// Log Creates or opens an EventLogStore
	Log(ctx context.Context, in *Log_Request, opts ...grpc.CallOption) (*Log_Reply, error)
	// GroupToLog Create or opens an EventLogStore from a group pubkey and signing key
	GroupToLog(ctx context.Context, in *GroupToLog_Request, opts ...grpc.CallOption) (*GroupToLog_Reply, error)
	// LogAdd Appends data to a log previously opened with Log
	LogAdd(ctx context.Context, in *LogAdd_Request, opts ...grpc.CallOption) (*LogAdd_Reply, error)
	// LogGet Gets a log entry by cid in a Log opened previously
	LogGet(ctx context.Context, in *LogGet_Request, opts ...grpc.CallOption) (*LogGet_Reply, error)
	// LogStream Populates a chan of operations from a Log
	LogStream(ctx context.Context, in *LogStream_Request, opts ...grpc.CallOption) (DemoService_LogStreamClient, error)
	// LogList Fetches a list of operation that occurred on a Log
	LogList(ctx context.Context, in *LogList_Request, opts ...grpc.CallOption) (*LogList_Reply, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) AddKey(ctx context.Context, in *AddKey_Request, opts ...grpc.CallOption) (*AddKey_Reply, error) {
	out := new(AddKey_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/AddKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) Log(ctx context.Context, in *Log_Request, opts ...grpc.CallOption) (*Log_Reply, error) {
	out := new(Log_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/Log", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) GroupToLog(ctx context.Context, in *GroupToLog_Request, opts ...grpc.CallOption) (*GroupToLog_Reply, error) {
	out := new(GroupToLog_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/GroupToLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogAdd(ctx context.Context, in *LogAdd_Request, opts ...grpc.CallOption) (*LogAdd_Reply, error) {
	out := new(LogAdd_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogGet(ctx context.Context, in *LogGet_Request, opts ...grpc.CallOption) (*LogGet_Reply, error) {
	out := new(LogGet_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) LogStream(ctx context.Context, in *LogStream_Request, opts ...grpc.CallOption) (DemoService_LogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DemoService_serviceDesc.Streams[0], "/berty.protocol.DemoService/LogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &demoServiceLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DemoService_LogStreamClient interface {
	Recv() (*Log_Operation, error)
	grpc.ClientStream
}

type demoServiceLogStreamClient struct {
	grpc.ClientStream
}

func (x *demoServiceLogStreamClient) Recv() (*Log_Operation, error) {
	m := new(Log_Operation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *demoServiceClient) LogList(ctx context.Context, in *LogList_Request, opts ...grpc.CallOption) (*LogList_Reply, error) {
	out := new(LogList_Reply)
	err := c.cc.Invoke(ctx, "/berty.protocol.DemoService/LogList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	// AddKey Adds an ed25519 keypair in the keystore passed on Log initialization, noop if already added
	AddKey(context.Context, *AddKey_Request) (*AddKey_Reply, error)
	// Log Creates or opens an EventLogStore
	Log(context.Context, *Log_Request) (*Log_Reply, error)
	// GroupToLog Create or opens an EventLogStore from a group pubkey and signing key
	GroupToLog(context.Context, *GroupToLog_Request) (*GroupToLog_Reply, error)
	// LogAdd Appends data to a log previously opened with Log
	LogAdd(context.Context, *LogAdd_Request) (*LogAdd_Reply, error)
	// LogGet Gets a log entry by cid in a Log opened previously
	LogGet(context.Context, *LogGet_Request) (*LogGet_Reply, error)
	// LogStream Populates a chan of operations from a Log
	LogStream(*LogStream_Request, DemoService_LogStreamServer) error
	// LogList Fetches a list of operation that occurred on a Log
	LogList(context.Context, *LogList_Request) (*LogList_Reply, error)
}

// UnimplementedDemoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServiceServer struct {
}

func (*UnimplementedDemoServiceServer) AddKey(ctx context.Context, req *AddKey_Request) (*AddKey_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKey not implemented")
}
func (*UnimplementedDemoServiceServer) Log(ctx context.Context, req *Log_Request) (*Log_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Log not implemented")
}
func (*UnimplementedDemoServiceServer) GroupToLog(ctx context.Context, req *GroupToLog_Request) (*GroupToLog_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupToLog not implemented")
}
func (*UnimplementedDemoServiceServer) LogAdd(ctx context.Context, req *LogAdd_Request) (*LogAdd_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogAdd not implemented")
}
func (*UnimplementedDemoServiceServer) LogGet(ctx context.Context, req *LogGet_Request) (*LogGet_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogGet not implemented")
}
func (*UnimplementedDemoServiceServer) LogStream(req *LogStream_Request, srv DemoService_LogStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method LogStream not implemented")
}
func (*UnimplementedDemoServiceServer) LogList(ctx context.Context, req *LogList_Request) (*LogList_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogList not implemented")
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_AddKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKey_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).AddKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/AddKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).AddKey(ctx, req.(*AddKey_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Log_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).Log(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/Log",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).Log(ctx, req.(*Log_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_GroupToLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupToLog_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).GroupToLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/GroupToLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).GroupToLog(ctx, req.(*GroupToLog_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogAdd_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogAdd(ctx, req.(*LogAdd_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogGet_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogGet(ctx, req.(*LogGet_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_LogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogStream_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DemoServiceServer).LogStream(m, &demoServiceLogStreamServer{stream})
}

type DemoService_LogStreamServer interface {
	Send(*Log_Operation) error
	grpc.ServerStream
}

type demoServiceLogStreamServer struct {
	grpc.ServerStream
}

func (x *demoServiceLogStreamServer) Send(m *Log_Operation) error {
	return x.ServerStream.SendMsg(m)
}

func _DemoService_LogList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogList_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).LogList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.protocol.DemoService/LogList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).LogList(ctx, req.(*LogList_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "berty.protocol.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddKey",
			Handler:    _DemoService_AddKey_Handler,
		},
		{
			MethodName: "Log",
			Handler:    _DemoService_Log_Handler,
		},
		{
			MethodName: "GroupToLog",
			Handler:    _DemoService_GroupToLog_Handler,
		},
		{
			MethodName: "LogAdd",
			Handler:    _DemoService_LogAdd_Handler,
		},
		{
			MethodName: "LogGet",
			Handler:    _DemoService_LogGet_Handler,
		},
		{
			MethodName: "LogList",
			Handler:    _DemoService_LogList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LogStream",
			Handler:       _DemoService_LogStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bertydemo.proto",
}
