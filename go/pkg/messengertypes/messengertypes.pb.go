// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: messengertypes/messengertypes.proto

package messengertypes

import (
	pushtypes "berty.tech/berty/v2/go/pkg/pushtypes"
	protocoltypes "berty.tech/weshnet/v2/pkg/protocoltypes"
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BertyLink_Kind int32

const (
	BertyLink_UnknownKind         BertyLink_Kind = 0
	BertyLink_ContactInviteV1Kind BertyLink_Kind = 1
	BertyLink_GroupV1Kind         BertyLink_Kind = 2
	BertyLink_EncryptedV1Kind     BertyLink_Kind = 3
	BertyLink_MessageV1Kind       BertyLink_Kind = 4
)

// Enum value maps for BertyLink_Kind.
var (
	BertyLink_Kind_name = map[int32]string{
		0: "UnknownKind",
		1: "ContactInviteV1Kind",
		2: "GroupV1Kind",
		3: "EncryptedV1Kind",
		4: "MessageV1Kind",
	}
	BertyLink_Kind_value = map[string]int32{
		"UnknownKind":         0,
		"ContactInviteV1Kind": 1,
		"GroupV1Kind":         2,
		"EncryptedV1Kind":     3,
		"MessageV1Kind":       4,
	}
)

func (x BertyLink_Kind) Enum() *BertyLink_Kind {
	p := new(BertyLink_Kind)
	*p = x
	return p
}

func (x BertyLink_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BertyLink_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[0].Descriptor()
}

func (BertyLink_Kind) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[0]
}

func (x BertyLink_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BertyLink_Kind.Descriptor instead.
func (BertyLink_Kind) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{12, 0}
}

type AppMessage_Type int32

const (
	AppMessage_Undefined                               AppMessage_Type = 0
	AppMessage_TypeUserMessage                         AppMessage_Type = 1
	AppMessage_TypeGroupInvitation                     AppMessage_Type = 3
	AppMessage_TypeSetGroupInfo                        AppMessage_Type = 4
	AppMessage_TypeSetUserInfo                         AppMessage_Type = 5
	AppMessage_TypeAcknowledge                         AppMessage_Type = 6
	AppMessage_TypeAccountDirectoryServiceRegistered   AppMessage_Type = 8
	AppMessage_TypeAccountDirectoryServiceUnregistered AppMessage_Type = 9
	AppMessage_TypeServiceAddToken                     AppMessage_Type = 10
	AppMessage_TypeServiceRemoveToken                  AppMessage_Type = 11
	AppMessage_TypePushSetDeviceToken                  AppMessage_Type = 12
	AppMessage_TypePushSetServer                       AppMessage_Type = 13
	AppMessage_TypePushSetMemberToken                  AppMessage_Type = 14
)

// Enum value maps for AppMessage_Type.
var (
	AppMessage_Type_name = map[int32]string{
		0:  "Undefined",
		1:  "TypeUserMessage",
		3:  "TypeGroupInvitation",
		4:  "TypeSetGroupInfo",
		5:  "TypeSetUserInfo",
		6:  "TypeAcknowledge",
		8:  "TypeAccountDirectoryServiceRegistered",
		9:  "TypeAccountDirectoryServiceUnregistered",
		10: "TypeServiceAddToken",
		11: "TypeServiceRemoveToken",
		12: "TypePushSetDeviceToken",
		13: "TypePushSetServer",
		14: "TypePushSetMemberToken",
	}
	AppMessage_Type_value = map[string]int32{
		"Undefined":                               0,
		"TypeUserMessage":                         1,
		"TypeGroupInvitation":                     3,
		"TypeSetGroupInfo":                        4,
		"TypeSetUserInfo":                         5,
		"TypeAcknowledge":                         6,
		"TypeAccountDirectoryServiceRegistered":   8,
		"TypeAccountDirectoryServiceUnregistered": 9,
		"TypeServiceAddToken":                     10,
		"TypeServiceRemoveToken":                  11,
		"TypePushSetDeviceToken":                  12,
		"TypePushSetServer":                       13,
		"TypePushSetMemberToken":                  14,
	}
)

func (x AppMessage_Type) Enum() *AppMessage_Type {
	p := new(AppMessage_Type)
	*p = x
	return p
}

func (x AppMessage_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppMessage_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[1].Descriptor()
}

func (AppMessage_Type) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[1]
}

func (x AppMessage_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppMessage_Type.Descriptor instead.
func (AppMessage_Type) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 0}
}

type Contact_State int32

const (
	Contact_Undefined               Contact_State = 0
	Contact_IncomingRequest         Contact_State = 1
	Contact_OutgoingRequestEnqueued Contact_State = 2
	Contact_OutgoingRequestSent     Contact_State = 3
	Contact_Accepted                Contact_State = 4
)

// Enum value maps for Contact_State.
var (
	Contact_State_name = map[int32]string{
		0: "Undefined",
		1: "IncomingRequest",
		2: "OutgoingRequestEnqueued",
		3: "OutgoingRequestSent",
		4: "Accepted",
	}
	Contact_State_value = map[string]int32{
		"Undefined":               0,
		"IncomingRequest":         1,
		"OutgoingRequestEnqueued": 2,
		"OutgoingRequestSent":     3,
		"Accepted":                4,
	}
)

func (x Contact_State) Enum() *Contact_State {
	p := new(Contact_State)
	*p = x
	return p
}

func (x Contact_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_State) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[2].Descriptor()
}

func (Contact_State) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[2]
}

func (x Contact_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_State.Descriptor instead.
func (Contact_State) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{29, 0}
}

type Conversation_Type int32

const (
	Conversation_Undefined       Conversation_Type = 0
	Conversation_AccountType     Conversation_Type = 1
	Conversation_ContactType     Conversation_Type = 2
	Conversation_MultiMemberType Conversation_Type = 3
)

// Enum value maps for Conversation_Type.
var (
	Conversation_Type_name = map[int32]string{
		0: "Undefined",
		1: "AccountType",
		2: "ContactType",
		3: "MultiMemberType",
	}
	Conversation_Type_value = map[string]int32{
		"Undefined":       0,
		"AccountType":     1,
		"ContactType":     2,
		"MultiMemberType": 3,
	}
)

func (x Conversation_Type) Enum() *Conversation_Type {
	p := new(Conversation_Type)
	*p = x
	return p
}

func (x Conversation_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Conversation_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[3].Descriptor()
}

func (Conversation_Type) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[3]
}

func (x Conversation_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Conversation_Type.Descriptor instead.
func (Conversation_Type) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{30, 0}
}

type StreamEvent_Type int32

const (
	StreamEvent_Undefined                     StreamEvent_Type = 0
	StreamEvent_TypeListEnded                 StreamEvent_Type = 1
	StreamEvent_TypeConversationUpdated       StreamEvent_Type = 2
	StreamEvent_TypeConversationDeleted       StreamEvent_Type = 3
	StreamEvent_TypeInteractionUpdated        StreamEvent_Type = 4
	StreamEvent_TypeInteractionDeleted        StreamEvent_Type = 5
	StreamEvent_TypeContactUpdated            StreamEvent_Type = 6
	StreamEvent_TypeAccountUpdated            StreamEvent_Type = 7
	StreamEvent_TypeMemberUpdated             StreamEvent_Type = 8
	StreamEvent_TypeDeviceUpdated             StreamEvent_Type = 9
	StreamEvent_TypeNotified                  StreamEvent_Type = 10
	StreamEvent_TypeConversationPartialLoad   StreamEvent_Type = 12
	StreamEvent_TypePeerStatusConnected       StreamEvent_Type = 13
	StreamEvent_TypePeerStatusReconnecting    StreamEvent_Type = 14
	StreamEvent_TypePeerStatusDisconnected    StreamEvent_Type = 15
	StreamEvent_TypePeerStatusGroupAssociated StreamEvent_Type = 16
	StreamEvent_TypeServiceTokenAdded         StreamEvent_Type = 17
)

// Enum value maps for StreamEvent_Type.
var (
	StreamEvent_Type_name = map[int32]string{
		0:  "Undefined",
		1:  "TypeListEnded",
		2:  "TypeConversationUpdated",
		3:  "TypeConversationDeleted",
		4:  "TypeInteractionUpdated",
		5:  "TypeInteractionDeleted",
		6:  "TypeContactUpdated",
		7:  "TypeAccountUpdated",
		8:  "TypeMemberUpdated",
		9:  "TypeDeviceUpdated",
		10: "TypeNotified",
		12: "TypeConversationPartialLoad",
		13: "TypePeerStatusConnected",
		14: "TypePeerStatusReconnecting",
		15: "TypePeerStatusDisconnected",
		16: "TypePeerStatusGroupAssociated",
		17: "TypeServiceTokenAdded",
	}
	StreamEvent_Type_value = map[string]int32{
		"Undefined":                     0,
		"TypeListEnded":                 1,
		"TypeConversationUpdated":       2,
		"TypeConversationDeleted":       3,
		"TypeInteractionUpdated":        4,
		"TypeInteractionDeleted":        5,
		"TypeContactUpdated":            6,
		"TypeAccountUpdated":            7,
		"TypeMemberUpdated":             8,
		"TypeDeviceUpdated":             9,
		"TypeNotified":                  10,
		"TypeConversationPartialLoad":   12,
		"TypePeerStatusConnected":       13,
		"TypePeerStatusReconnecting":    14,
		"TypePeerStatusDisconnected":    15,
		"TypePeerStatusGroupAssociated": 16,
		"TypeServiceTokenAdded":         17,
	}
)

func (x StreamEvent_Type) Enum() *StreamEvent_Type {
	p := new(StreamEvent_Type)
	*p = x
	return p
}

func (x StreamEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[4].Descriptor()
}

func (StreamEvent_Type) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[4]
}

func (x StreamEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamEvent_Type.Descriptor instead.
func (StreamEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 0}
}

type StreamEvent_Notified_Type int32

const (
	StreamEvent_Notified_Unknown                    StreamEvent_Notified_Type = 0
	StreamEvent_Notified_TypeBasic                  StreamEvent_Notified_Type = 1
	StreamEvent_Notified_TypeMessageReceived        StreamEvent_Notified_Type = 2
	StreamEvent_Notified_TypeContactRequestSent     StreamEvent_Notified_Type = 3
	StreamEvent_Notified_TypeContactRequestReceived StreamEvent_Notified_Type = 4
	StreamEvent_Notified_TypeGroupInvitation        StreamEvent_Notified_Type = 5
)

// Enum value maps for StreamEvent_Notified_Type.
var (
	StreamEvent_Notified_Type_name = map[int32]string{
		0: "Unknown",
		1: "TypeBasic",
		2: "TypeMessageReceived",
		3: "TypeContactRequestSent",
		4: "TypeContactRequestReceived",
		5: "TypeGroupInvitation",
	}
	StreamEvent_Notified_Type_value = map[string]int32{
		"Unknown":                    0,
		"TypeBasic":                  1,
		"TypeMessageReceived":        2,
		"TypeContactRequestSent":     3,
		"TypeContactRequestReceived": 4,
		"TypeGroupInvitation":        5,
	}
)

func (x StreamEvent_Notified_Type) Enum() *StreamEvent_Notified_Type {
	p := new(StreamEvent_Notified_Type)
	*p = x
	return p
}

func (x StreamEvent_Notified_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamEvent_Notified_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[5].Descriptor()
}

func (StreamEvent_Notified_Type) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[5]
}

func (x StreamEvent_Notified_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamEvent_Notified_Type.Descriptor instead.
func (StreamEvent_Notified_Type) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10, 0}
}

type StreamEvent_PeerStatusConnected_Transport int32

const (
	StreamEvent_PeerStatusConnected_Unknown   StreamEvent_PeerStatusConnected_Transport = 0
	StreamEvent_PeerStatusConnected_LAN       StreamEvent_PeerStatusConnected_Transport = 1
	StreamEvent_PeerStatusConnected_WAN       StreamEvent_PeerStatusConnected_Transport = 2
	StreamEvent_PeerStatusConnected_Proximity StreamEvent_PeerStatusConnected_Transport = 3
)

// Enum value maps for StreamEvent_PeerStatusConnected_Transport.
var (
	StreamEvent_PeerStatusConnected_Transport_name = map[int32]string{
		0: "Unknown",
		1: "LAN",
		2: "WAN",
		3: "Proximity",
	}
	StreamEvent_PeerStatusConnected_Transport_value = map[string]int32{
		"Unknown":   0,
		"LAN":       1,
		"WAN":       2,
		"Proximity": 3,
	}
)

func (x StreamEvent_PeerStatusConnected_Transport) Enum() *StreamEvent_PeerStatusConnected_Transport {
	p := new(StreamEvent_PeerStatusConnected_Transport)
	*p = x
	return p
}

func (x StreamEvent_PeerStatusConnected_Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamEvent_PeerStatusConnected_Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_messengertypes_messengertypes_proto_enumTypes[6].Descriptor()
}

func (StreamEvent_PeerStatusConnected_Transport) Type() protoreflect.EnumType {
	return &file_messengertypes_messengertypes_proto_enumTypes[6]
}

func (x StreamEvent_PeerStatusConnected_Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamEvent_PeerStatusConnected_Transport.Descriptor instead.
func (StreamEvent_PeerStatusConnected_Transport) EnumDescriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 11, 0}
}

type PaginatedInteractionsOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// amount Number of entries to be returned. Default is 5.
	Amount int32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// ref_cid Reference CID for used for pagination defaulting to oldest/newest depending on sorting. When specified this CID won't be included in the results.
	RefCid string `protobuf:"bytes,2,opt,name=ref_cid,json=refCid,proto3" json:"ref_cid,omitempty"`
	// conversation_pk Filter by conversation, otherwise X latest message of each conversation are returned
	ConversationPk string `protobuf:"bytes,3,opt,name=conversation_pk,json=conversationPk,proto3" json:"conversation_pk,omitempty"`
	// oldest_to_newest Default sort of results is latest to oldest message
	OldestToNewest bool `protobuf:"varint,4,opt,name=oldest_to_newest,json=oldestToNewest,proto3" json:"oldest_to_newest,omitempty"`
	// no_bulk should interactions be via atomic update in the stream
	NoBulk bool `protobuf:"varint,6,opt,name=no_bulk,json=noBulk,proto3" json:"no_bulk,omitempty"`
}

func (x *PaginatedInteractionsOptions) Reset() {
	*x = PaginatedInteractionsOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedInteractionsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedInteractionsOptions) ProtoMessage() {}

func (x *PaginatedInteractionsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedInteractionsOptions.ProtoReflect.Descriptor instead.
func (*PaginatedInteractionsOptions) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{0}
}

func (x *PaginatedInteractionsOptions) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaginatedInteractionsOptions) GetRefCid() string {
	if x != nil {
		return x.RefCid
	}
	return ""
}

func (x *PaginatedInteractionsOptions) GetConversationPk() string {
	if x != nil {
		return x.ConversationPk
	}
	return ""
}

func (x *PaginatedInteractionsOptions) GetOldestToNewest() bool {
	if x != nil {
		return x.OldestToNewest
	}
	return false
}

func (x *PaginatedInteractionsOptions) GetNoBulk() bool {
	if x != nil {
		return x.NoBulk
	}
	return false
}

type ConversationOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationOpen) Reset() {
	*x = ConversationOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationOpen) ProtoMessage() {}

func (x *ConversationOpen) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationOpen.ProtoReflect.Descriptor instead.
func (*ConversationOpen) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{1}
}

type ConversationClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationClose) Reset() {
	*x = ConversationClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationClose) ProtoMessage() {}

func (x *ConversationClose) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationClose.ProtoReflect.Descriptor instead.
func (*ConversationClose) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{2}
}

type ConversationLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationLoad) Reset() {
	*x = ConversationLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationLoad) ProtoMessage() {}

func (x *ConversationLoad) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationLoad.ProtoReflect.Descriptor instead.
func (*ConversationLoad) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{3}
}

type ConversationMute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationMute) Reset() {
	*x = ConversationMute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationMute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMute) ProtoMessage() {}

func (x *ConversationMute) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMute.ProtoReflect.Descriptor instead.
func (*ConversationMute) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{4}
}

type EchoTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EchoTest) Reset() {
	*x = EchoTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoTest) ProtoMessage() {}

func (x *EchoTest) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoTest.ProtoReflect.Descriptor instead.
func (*EchoTest) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{5}
}

type EchoDuplexTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EchoDuplexTest) Reset() {
	*x = EchoDuplexTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoDuplexTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoDuplexTest) ProtoMessage() {}

func (x *EchoDuplexTest) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoDuplexTest.ProtoReflect.Descriptor instead.
func (*EchoDuplexTest) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{6}
}

type InstanceShareableBertyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceShareableBertyID) Reset() {
	*x = InstanceShareableBertyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceShareableBertyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceShareableBertyID) ProtoMessage() {}

func (x *InstanceShareableBertyID) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceShareableBertyID.ProtoReflect.Descriptor instead.
func (*InstanceShareableBertyID) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{7}
}

type ShareableBertyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShareableBertyGroup) Reset() {
	*x = ShareableBertyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareableBertyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareableBertyGroup) ProtoMessage() {}

func (x *ShareableBertyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareableBertyGroup.ProtoReflect.Descriptor instead.
func (*ShareableBertyGroup) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{8}
}

type DevShareInstanceBertyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DevShareInstanceBertyID) Reset() {
	*x = DevShareInstanceBertyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevShareInstanceBertyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevShareInstanceBertyID) ProtoMessage() {}

func (x *DevShareInstanceBertyID) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevShareInstanceBertyID.ProtoReflect.Descriptor instead.
func (*DevShareInstanceBertyID) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{9}
}

type DevStreamLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DevStreamLogs) Reset() {
	*x = DevStreamLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevStreamLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevStreamLogs) ProtoMessage() {}

func (x *DevStreamLogs) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevStreamLogs.ProtoReflect.Descriptor instead.
func (*DevStreamLogs) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{10}
}

type ParseDeepLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ParseDeepLink) Reset() {
	*x = ParseDeepLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseDeepLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDeepLink) ProtoMessage() {}

func (x *ParseDeepLink) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDeepLink.ProtoReflect.Descriptor instead.
func (*ParseDeepLink) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{11}
}

type BertyLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind            BertyLink_Kind             `protobuf:"varint,1,opt,name=kind,proto3,enum=berty.messenger.v1.BertyLink_Kind" json:"kind,omitempty"`
	BertyId         *BertyID                   `protobuf:"bytes,2,opt,name=berty_id,json=bertyId,proto3" json:"berty_id,omitempty"`
	BertyGroup      *BertyGroup                `protobuf:"bytes,3,opt,name=berty_group,json=bertyGroup,proto3" json:"berty_group,omitempty"`
	BertyMessageRef *BertyLink_BertyMessageRef `protobuf:"bytes,5,opt,name=berty_message_ref,json=bertyMessageRef,proto3" json:"berty_message_ref,omitempty"`
	Encrypted       *BertyLink_Encrypted       `protobuf:"bytes,4,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
}

func (x *BertyLink) Reset() {
	*x = BertyLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BertyLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BertyLink) ProtoMessage() {}

func (x *BertyLink) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BertyLink.ProtoReflect.Descriptor instead.
func (*BertyLink) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{12}
}

func (x *BertyLink) GetKind() BertyLink_Kind {
	if x != nil {
		return x.Kind
	}
	return BertyLink_UnknownKind
}

func (x *BertyLink) GetBertyId() *BertyID {
	if x != nil {
		return x.BertyId
	}
	return nil
}

func (x *BertyLink) GetBertyGroup() *BertyGroup {
	if x != nil {
		return x.BertyGroup
	}
	return nil
}

func (x *BertyLink) GetBertyMessageRef() *BertyLink_BertyMessageRef {
	if x != nil {
		return x.BertyMessageRef
	}
	return nil
}

func (x *BertyLink) GetEncrypted() *BertyLink_Encrypted {
	if x != nil {
		return x.Encrypted
	}
	return nil
}

type SendContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendContactRequest) Reset() {
	*x = SendContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactRequest) ProtoMessage() {}

func (x *SendContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactRequest.ProtoReflect.Descriptor instead.
func (*SendContactRequest) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{13}
}

type BertyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicRendezvousSeed []byte `protobuf:"bytes,1,opt,name=public_rendezvous_seed,json=publicRendezvousSeed,proto3" json:"public_rendezvous_seed,omitempty"`
	AccountPk            []byte `protobuf:"bytes,2,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty"`
	DisplayName          string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *BertyID) Reset() {
	*x = BertyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BertyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BertyID) ProtoMessage() {}

func (x *BertyID) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BertyID.ProtoReflect.Descriptor instead.
func (*BertyID) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{14}
}

func (x *BertyID) GetPublicRendezvousSeed() []byte {
	if x != nil {
		return x.PublicRendezvousSeed
	}
	return nil
}

func (x *BertyID) GetAccountPk() []byte {
	if x != nil {
		return x.AccountPk
	}
	return nil
}

func (x *BertyID) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type BertyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group       *protocoltypes.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	DisplayName string               `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *BertyGroup) Reset() {
	*x = BertyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BertyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BertyGroup) ProtoMessage() {}

func (x *BertyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BertyGroup.ProtoReflect.Descriptor instead.
func (*BertyGroup) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{15}
}

func (x *BertyGroup) GetGroup() *protocoltypes.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *BertyGroup) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// AppMessage is the app layer format
type AppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      AppMessage_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.AppMessage_Type" json:"type,omitempty"`
	Payload   []byte          `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	SentDate  int64           `protobuf:"varint,3,opt,name=sent_date,json=sentDate,proto3" json:"sent_date,omitempty"`
	TargetCid string          `protobuf:"bytes,5,opt,name=target_cid,json=targetCid,proto3" json:"target_cid,omitempty"`
}

func (x *AppMessage) Reset() {
	*x = AppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage) ProtoMessage() {}

func (x *AppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage.ProtoReflect.Descriptor instead.
func (*AppMessage) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16}
}

func (x *AppMessage) GetType() AppMessage_Type {
	if x != nil {
		return x.Type
	}
	return AppMessage_Undefined
}

func (x *AppMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AppMessage) GetSentDate() int64 {
	if x != nil {
		return x.SentDate
	}
	return 0
}

func (x *AppMessage) GetTargetCid() string {
	if x != nil {
		return x.TargetCid
	}
	return ""
}

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{17}
}

type ConversationJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationJoin) Reset() {
	*x = ConversationJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationJoin) ProtoMessage() {}

func (x *ConversationJoin) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationJoin.ProtoReflect.Descriptor instead.
func (*ConversationJoin) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{18}
}

type DebugAuthServiceSetToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DebugAuthServiceSetToken) Reset() {
	*x = DebugAuthServiceSetToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugAuthServiceSetToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugAuthServiceSetToken) ProtoMessage() {}

func (x *DebugAuthServiceSetToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugAuthServiceSetToken.ProtoReflect.Descriptor instead.
func (*DebugAuthServiceSetToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{19}
}

type ServicesTokenList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServicesTokenList) Reset() {
	*x = ServicesTokenList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesTokenList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesTokenList) ProtoMessage() {}

func (x *ServicesTokenList) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesTokenList.ProtoReflect.Descriptor instead.
func (*ServicesTokenList) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{20}
}

type AuthServiceCompleteFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthServiceCompleteFlow) Reset() {
	*x = AuthServiceCompleteFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthServiceCompleteFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceCompleteFlow) ProtoMessage() {}

func (x *AuthServiceCompleteFlow) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceCompleteFlow.ProtoReflect.Descriptor instead.
func (*AuthServiceCompleteFlow) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{21}
}

type AuthServiceInitFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthServiceInitFlow) Reset() {
	*x = AuthServiceInitFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthServiceInitFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceInitFlow) ProtoMessage() {}

func (x *AuthServiceInitFlow) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceInitFlow.ProtoReflect.Descriptor instead.
func (*AuthServiceInitFlow) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{22}
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey                       string                           `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	DisplayName                     string                           `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Link                            string                           `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	ServiceTokens                   []*ServiceToken                  `protobuf:"bytes,5,rep,name=service_tokens,json=serviceTokens,proto3" json:"service_tokens,omitempty" gorm:"foreignKey:AccountPk"`
	ReplicateNewGroupsAutomatically bool                             `protobuf:"varint,6,opt,name=replicate_new_groups_automatically,json=replicateNewGroupsAutomatically,proto3" json:"replicate_new_groups_automatically,omitempty" gorm:"default:true"`
	AutoSharePushTokenFlag          bool                             `protobuf:"varint,8,opt,name=auto_share_push_token_flag,json=autoSharePushTokenFlag,proto3" json:"auto_share_push_token_flag,omitempty"`
	PushDeviceToken                 *PushDeviceToken                 `protobuf:"bytes,9,opt,name=push_device_token,json=pushDeviceToken,proto3" json:"push_device_token,omitempty" gorm:"foreignKey:AccountPk"`
	PushServerRecords               []*PushServerRecord              `protobuf:"bytes,10,rep,name=push_server_records,json=pushServerRecords,proto3" json:"push_server_records,omitempty" gorm:"foreignKey:AccountPk"`
	MutedUntil                      int64                            `protobuf:"varint,11,opt,name=muted_until,json=mutedUntil,proto3" json:"muted_until,omitempty"`
	HideInAppNotifications          bool                             `protobuf:"varint,12,opt,name=hide_in_app_notifications,json=hideInAppNotifications,proto3" json:"hide_in_app_notifications,omitempty"`
	HidePushPreviews                bool                             `protobuf:"varint,13,opt,name=hide_push_previews,json=hidePushPreviews,proto3" json:"hide_push_previews,omitempty"`
	VerifiedCredentials             []*AccountVerifiedCredential     `protobuf:"bytes,14,rep,name=verified_credentials,json=verifiedCredentials,proto3" json:"verified_credentials,omitempty" gorm:"foreignKey:AccountPk"`
	DirectoryServiceRecords         []*AccountDirectoryServiceRecord `protobuf:"bytes,15,rep,name=directory_service_records,json=directoryServiceRecords,proto3" json:"directory_service_records,omitempty" gorm:"foreignKey:AccountPk"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{23}
}

func (x *Account) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Account) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Account) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Account) GetServiceTokens() []*ServiceToken {
	if x != nil {
		return x.ServiceTokens
	}
	return nil
}

func (x *Account) GetReplicateNewGroupsAutomatically() bool {
	if x != nil {
		return x.ReplicateNewGroupsAutomatically
	}
	return false
}

func (x *Account) GetAutoSharePushTokenFlag() bool {
	if x != nil {
		return x.AutoSharePushTokenFlag
	}
	return false
}

func (x *Account) GetPushDeviceToken() *PushDeviceToken {
	if x != nil {
		return x.PushDeviceToken
	}
	return nil
}

func (x *Account) GetPushServerRecords() []*PushServerRecord {
	if x != nil {
		return x.PushServerRecords
	}
	return nil
}

func (x *Account) GetMutedUntil() int64 {
	if x != nil {
		return x.MutedUntil
	}
	return 0
}

func (x *Account) GetHideInAppNotifications() bool {
	if x != nil {
		return x.HideInAppNotifications
	}
	return false
}

func (x *Account) GetHidePushPreviews() bool {
	if x != nil {
		return x.HidePushPreviews
	}
	return false
}

func (x *Account) GetVerifiedCredentials() []*AccountVerifiedCredential {
	if x != nil {
		return x.VerifiedCredentials
	}
	return nil
}

func (x *Account) GetDirectoryServiceRecords() []*AccountDirectoryServiceRecord {
	if x != nil {
		return x.DirectoryServiceRecords
	}
	return nil
}

type ServiceTokenSupportedService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" gorm:"primaryKey"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ServiceTokenSupportedService) Reset() {
	*x = ServiceTokenSupportedService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTokenSupportedService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTokenSupportedService) ProtoMessage() {}

func (x *ServiceTokenSupportedService) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTokenSupportedService.ProtoReflect.Descriptor instead.
func (*ServiceTokenSupportedService) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{24}
}

func (x *ServiceTokenSupportedService) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ServiceTokenSupportedService) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ServiceTokenSupportedServiceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty" gorm:"primaryKey"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" gorm:"primaryKey"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ServiceTokenSupportedServiceRecord) Reset() {
	*x = ServiceTokenSupportedServiceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTokenSupportedServiceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTokenSupportedServiceRecord) ProtoMessage() {}

func (x *ServiceTokenSupportedServiceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTokenSupportedServiceRecord.ProtoReflect.Descriptor instead.
func (*ServiceTokenSupportedServiceRecord) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{25}
}

func (x *ServiceTokenSupportedServiceRecord) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ServiceTokenSupportedServiceRecord) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ServiceTokenSupportedServiceRecord) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ServiceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountPk         string                                `protobuf:"bytes,1,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty"`
	TokenId           string                                `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty" gorm:"primaryKey"`
	Token             string                                `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	SupportedServices []*ServiceTokenSupportedServiceRecord `protobuf:"bytes,4,rep,name=supported_services,json=supportedServices,proto3" json:"supported_services,omitempty" gorm:"foreignKey:TokenId"`
	AuthenticationUrl string                                `protobuf:"bytes,5,opt,name=authentication_url,json=authenticationUrl,proto3" json:"authentication_url,omitempty"`
	Expiration        int64                                 `protobuf:"varint,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *ServiceToken) Reset() {
	*x = ServiceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceToken) ProtoMessage() {}

func (x *ServiceToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceToken.ProtoReflect.Descriptor instead.
func (*ServiceToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{26}
}

func (x *ServiceToken) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *ServiceToken) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ServiceToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ServiceToken) GetSupportedServices() []*ServiceTokenSupportedServiceRecord {
	if x != nil {
		return x.SupportedServices
	}
	return nil
}

func (x *ServiceToken) GetAuthenticationUrl() string {
	if x != nil {
		return x.AuthenticationUrl
	}
	return ""
}

func (x *ServiceToken) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type MetadataEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid                   string                  `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty" gorm:"primaryKey;column:cid"`
	ConversationPublicKey string                  `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty" gorm:"index"`
	MetadataEventType     protocoltypes.EventType `protobuf:"varint,3,opt,name=metadata_event_type,json=metadataEventType,proto3,enum=weshnet.protocol.v1.EventType" json:"metadata_event_type,omitempty"`
	Payload               []byte                  `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MetadataEvent) Reset() {
	*x = MetadataEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataEvent) ProtoMessage() {}

func (x *MetadataEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataEvent.ProtoReflect.Descriptor instead.
func (*MetadataEvent) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{27}
}

func (x *MetadataEvent) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *MetadataEvent) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *MetadataEvent) GetMetadataEventType() protocoltypes.EventType {
	if x != nil {
		return x.MetadataEventType
	}
	return protocoltypes.EventType(0)
}

func (x *MetadataEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid                   string          `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty" gorm:"primaryKey;column:cid"`
	Type                  AppMessage_Type `protobuf:"varint,2,opt,name=type,proto3,enum=berty.messenger.v1.AppMessage_Type" json:"type,omitempty" gorm:"index"`
	MemberPublicKey       string          `protobuf:"bytes,7,opt,name=member_public_key,json=memberPublicKey,proto3" json:"member_public_key,omitempty"`
	DevicePublicKey       string          `protobuf:"bytes,12,opt,name=device_public_key,json=devicePublicKey,proto3" json:"device_public_key,omitempty"`
	Member                *Member         `protobuf:"bytes,8,opt,name=member,proto3" json:"member,omitempty" gorm:"foreignKey:PublicKey;references:MemberPublicKey"`
	ConversationPublicKey string          `protobuf:"bytes,3,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty" gorm:"index"`
	Conversation          *Conversation   `protobuf:"bytes,4,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Payload               []byte          `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	IsMine                bool            `protobuf:"varint,6,opt,name=is_mine,json=isMine,proto3" json:"is_mine,omitempty"`
	SentDate              int64           `protobuf:"varint,9,opt,name=sent_date,json=sentDate,proto3" json:"sent_date,omitempty" gorm:"index"`
	Acknowledged          bool            `protobuf:"varint,10,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	TargetCid             string          `protobuf:"bytes,13,opt,name=target_cid,json=targetCid,proto3" json:"target_cid,omitempty" gorm:"index;column:target_cid"`
	OutOfStoreMessage     bool            `protobuf:"varint,17,opt,name=out_of_store_message,json=outOfStoreMessage,proto3" json:"out_of_store_message,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{28}
}

func (x *Interaction) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Interaction) GetType() AppMessage_Type {
	if x != nil {
		return x.Type
	}
	return AppMessage_Undefined
}

func (x *Interaction) GetMemberPublicKey() string {
	if x != nil {
		return x.MemberPublicKey
	}
	return ""
}

func (x *Interaction) GetDevicePublicKey() string {
	if x != nil {
		return x.DevicePublicKey
	}
	return ""
}

func (x *Interaction) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Interaction) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *Interaction) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *Interaction) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Interaction) GetIsMine() bool {
	if x != nil {
		return x.IsMine
	}
	return false
}

func (x *Interaction) GetSentDate() int64 {
	if x != nil {
		return x.SentDate
	}
	return 0
}

func (x *Interaction) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *Interaction) GetTargetCid() string {
	if x != nil {
		return x.TargetCid
	}
	return ""
}

func (x *Interaction) GetOutOfStoreMessage() bool {
	if x != nil {
		return x.OutOfStoreMessage
	}
	return false
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey             string        `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	ConversationPublicKey string        `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty" gorm:"primaryKey"`
	Conversation          *Conversation `protobuf:"bytes,3,opt,name=conversation,proto3" json:"conversation,omitempty"`
	State                 Contact_State `protobuf:"varint,4,opt,name=state,proto3,enum=berty.messenger.v1.Contact_State" json:"state,omitempty"`
	DisplayName           string        `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CreatedDate           int64         `protobuf:"varint,7,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	// specific to outgoing requests
	SentDate int64     `protobuf:"varint,8,opt,name=sent_date,json=sentDate,proto3" json:"sent_date,omitempty"`
	Devices  []*Device `protobuf:"bytes,6,rep,name=devices,proto3" json:"devices,omitempty" gorm:"foreignKey:MemberPublicKey;references:PublicKey"`
	InfoDate int64     `protobuf:"varint,10,opt,name=info_date,json=infoDate,proto3" json:"info_date,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{29}
}

func (x *Contact) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Contact) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *Contact) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *Contact) GetState() Contact_State {
	if x != nil {
		return x.State
	}
	return Contact_Undefined
}

func (x *Contact) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Contact) GetCreatedDate() int64 {
	if x != nil {
		return x.CreatedDate
	}
	return 0
}

func (x *Contact) GetSentDate() int64 {
	if x != nil {
		return x.SentDate
	}
	return 0
}

func (x *Contact) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Contact) GetInfoDate() int64 {
	if x != nil {
		return x.InfoDate
	}
	return 0
}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey   string            `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	Type        Conversation_Type `protobuf:"varint,2,opt,name=type,proto3,enum=berty.messenger.v1.Conversation_Type" json:"type,omitempty"`
	IsOpen      bool              `protobuf:"varint,3,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	DisplayName string            `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Link        string            `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	UnreadCount int32             `protobuf:"varint,6,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	// last_update is used to sort conversations, it should be updated for each "visible" event
	LastUpdate int64 `protobuf:"varint,7,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	// specific to ContactType conversations
	ContactPublicKey string `protobuf:"bytes,8,opt,name=contact_public_key,json=contactPublicKey,proto3" json:"contact_public_key,omitempty"`
	// specific to ContactType conversations
	Contact *Contact `protobuf:"bytes,9,opt,name=contact,proto3" json:"contact,omitempty"`
	// specific to MultiMemberType conversations
	Members                []*Member                      `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	AccountMemberPublicKey string                         `protobuf:"bytes,11,opt,name=account_member_public_key,json=accountMemberPublicKey,proto3" json:"account_member_public_key,omitempty"`
	LocalDevicePublicKey   string                         `protobuf:"bytes,12,opt,name=local_device_public_key,json=localDevicePublicKey,proto3" json:"local_device_public_key,omitempty"`
	CreatedDate            int64                          `protobuf:"varint,13,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	ReplicationInfo        []*ConversationReplicationInfo `protobuf:"bytes,16,rep,name=replication_info,json=replicationInfo,proto3" json:"replication_info,omitempty" gorm:"foreignKey:ConversationPublicKey"`
	// info_date is used when SetGroupInfo is called
	InfoDate                    int64                         `protobuf:"varint,18,opt,name=info_date,json=infoDate,proto3" json:"info_date,omitempty"`
	LocalMemberPublicKey        string                        `protobuf:"bytes,19,opt,name=local_member_public_key,json=localMemberPublicKey,proto3" json:"local_member_public_key,omitempty"`
	MutedUntil                  int64                         `protobuf:"varint,20,opt,name=muted_until,json=mutedUntil,proto3" json:"muted_until,omitempty"`
	PushLocalDeviceSharedTokens []*PushLocalDeviceSharedToken `protobuf:"bytes,21,rep,name=push_local_device_shared_tokens,json=pushLocalDeviceSharedTokens,proto3" json:"push_local_device_shared_tokens,omitempty" gorm:"foreignKey:ConversationPublicKey"`
	PushMemberTokens            []*PushMemberToken            `protobuf:"bytes,22,rep,name=push_member_tokens,json=pushMemberTokens,proto3" json:"push_member_tokens,omitempty" gorm:"foreignKey:ConversationPublicKey"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{30}
}

func (x *Conversation) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Conversation) GetType() Conversation_Type {
	if x != nil {
		return x.Type
	}
	return Conversation_Undefined
}

func (x *Conversation) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *Conversation) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Conversation) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Conversation) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *Conversation) GetContactPublicKey() string {
	if x != nil {
		return x.ContactPublicKey
	}
	return ""
}

func (x *Conversation) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *Conversation) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Conversation) GetAccountMemberPublicKey() string {
	if x != nil {
		return x.AccountMemberPublicKey
	}
	return ""
}

func (x *Conversation) GetLocalDevicePublicKey() string {
	if x != nil {
		return x.LocalDevicePublicKey
	}
	return ""
}

func (x *Conversation) GetCreatedDate() int64 {
	if x != nil {
		return x.CreatedDate
	}
	return 0
}

func (x *Conversation) GetReplicationInfo() []*ConversationReplicationInfo {
	if x != nil {
		return x.ReplicationInfo
	}
	return nil
}

func (x *Conversation) GetInfoDate() int64 {
	if x != nil {
		return x.InfoDate
	}
	return 0
}

func (x *Conversation) GetLocalMemberPublicKey() string {
	if x != nil {
		return x.LocalMemberPublicKey
	}
	return ""
}

func (x *Conversation) GetMutedUntil() int64 {
	if x != nil {
		return x.MutedUntil
	}
	return 0
}

func (x *Conversation) GetPushLocalDeviceSharedTokens() []*PushLocalDeviceSharedToken {
	if x != nil {
		return x.PushLocalDeviceSharedTokens
	}
	return nil
}

func (x *Conversation) GetPushMemberTokens() []*PushMemberToken {
	if x != nil {
		return x.PushMemberTokens
	}
	return nil
}

type ConversationReplicationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid                   string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty" gorm:"primaryKey;column:cid"`
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
	MemberPublicKey       string `protobuf:"bytes,3,opt,name=member_public_key,json=memberPublicKey,proto3" json:"member_public_key,omitempty"`
	AuthenticationUrl     string `protobuf:"bytes,4,opt,name=authentication_url,json=authenticationUrl,proto3" json:"authentication_url,omitempty"`
	ReplicationServer     string `protobuf:"bytes,5,opt,name=replication_server,json=replicationServer,proto3" json:"replication_server,omitempty"`
}

func (x *ConversationReplicationInfo) Reset() {
	*x = ConversationReplicationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationReplicationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationReplicationInfo) ProtoMessage() {}

func (x *ConversationReplicationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationReplicationInfo.ProtoReflect.Descriptor instead.
func (*ConversationReplicationInfo) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{31}
}

func (x *ConversationReplicationInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ConversationReplicationInfo) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *ConversationReplicationInfo) GetMemberPublicKey() string {
	if x != nil {
		return x.MemberPublicKey
	}
	return ""
}

func (x *ConversationReplicationInfo) GetAuthenticationUrl() string {
	if x != nil {
		return x.AuthenticationUrl
	}
	return ""
}

func (x *ConversationReplicationInfo) GetReplicationServer() string {
	if x != nil {
		return x.ReplicationServer
	}
	return ""
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey             string        `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	DisplayName           string        `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ConversationPublicKey string        `protobuf:"bytes,3,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty" gorm:"primaryKey"`
	IsMe                  bool          `protobuf:"varint,9,opt,name=is_me,json=isMe,proto3" json:"is_me,omitempty"`
	IsCreator             bool          `protobuf:"varint,8,opt,name=is_creator,json=isCreator,proto3" json:"is_creator,omitempty"`
	InfoDate              int64         `protobuf:"varint,7,opt,name=info_date,json=infoDate,proto3" json:"info_date,omitempty"`
	Conversation          *Conversation `protobuf:"bytes,4,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Devices               []*Device     `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty" gorm:"foreignKey:MemberPublicKey;references:PublicKey"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{32}
}

func (x *Member) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Member) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Member) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *Member) GetIsMe() bool {
	if x != nil {
		return x.IsMe
	}
	return false
}

func (x *Member) GetIsCreator() bool {
	if x != nil {
		return x.IsCreator
	}
	return false
}

func (x *Member) GetInfoDate() int64 {
	if x != nil {
		return x.InfoDate
	}
	return 0
}

func (x *Member) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *Member) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey       string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	MemberPublicKey string `protobuf:"bytes,2,opt,name=member_public_key,json=memberPublicKey,proto3" json:"member_public_key,omitempty" gorm:"index"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{33}
}

func (x *Device) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Device) GetMemberPublicKey() string {
	if x != nil {
		return x.MemberPublicKey
	}
	return ""
}

type AccountVerifiedCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountPk        string `protobuf:"bytes,1,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty"`
	Identifier       string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	RegistrationDate int64  `protobuf:"varint,3,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	ExpirationDate   int64  `protobuf:"varint,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	Issuer           string `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (x *AccountVerifiedCredential) Reset() {
	*x = AccountVerifiedCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountVerifiedCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountVerifiedCredential) ProtoMessage() {}

func (x *AccountVerifiedCredential) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountVerifiedCredential.ProtoReflect.Descriptor instead.
func (*AccountVerifiedCredential) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{34}
}

func (x *AccountVerifiedCredential) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *AccountVerifiedCredential) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AccountVerifiedCredential) GetRegistrationDate() int64 {
	if x != nil {
		return x.RegistrationDate
	}
	return 0
}

func (x *AccountVerifiedCredential) GetExpirationDate() int64 {
	if x != nil {
		return x.ExpirationDate
	}
	return 0
}

func (x *AccountVerifiedCredential) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type AccountDirectoryServiceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountPk                      string `protobuf:"bytes,1,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty"`
	Identifier                     string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty" gorm:"primaryKey"`
	IdentifierProofIssuer          string `protobuf:"bytes,3,opt,name=identifier_proof_issuer,json=identifierProofIssuer,proto3" json:"identifier_proof_issuer,omitempty"`
	ServerAddr                     string `protobuf:"bytes,4,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty" gorm:"primaryKey"`
	RegistrationDate               int64  `protobuf:"varint,5,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	ExpirationDate                 int64  `protobuf:"varint,6,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	Revoked                        bool   `protobuf:"varint,7,opt,name=revoked,proto3" json:"revoked,omitempty"`
	DirectoryRecordToken           string `protobuf:"bytes,8,opt,name=directory_record_token,json=directoryRecordToken,proto3" json:"directory_record_token,omitempty"`
	DirectoryRecordUnregisterToken string `protobuf:"bytes,9,opt,name=directory_record_unregister_token,json=directoryRecordUnregisterToken,proto3" json:"directory_record_unregister_token,omitempty"`
}

func (x *AccountDirectoryServiceRecord) Reset() {
	*x = AccountDirectoryServiceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDirectoryServiceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDirectoryServiceRecord) ProtoMessage() {}

func (x *AccountDirectoryServiceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDirectoryServiceRecord.ProtoReflect.Descriptor instead.
func (*AccountDirectoryServiceRecord) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{35}
}

func (x *AccountDirectoryServiceRecord) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *AccountDirectoryServiceRecord) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AccountDirectoryServiceRecord) GetIdentifierProofIssuer() string {
	if x != nil {
		return x.IdentifierProofIssuer
	}
	return ""
}

func (x *AccountDirectoryServiceRecord) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *AccountDirectoryServiceRecord) GetRegistrationDate() int64 {
	if x != nil {
		return x.RegistrationDate
	}
	return 0
}

func (x *AccountDirectoryServiceRecord) GetExpirationDate() int64 {
	if x != nil {
		return x.ExpirationDate
	}
	return 0
}

func (x *AccountDirectoryServiceRecord) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *AccountDirectoryServiceRecord) GetDirectoryRecordToken() string {
	if x != nil {
		return x.DirectoryRecordToken
	}
	return ""
}

func (x *AccountDirectoryServiceRecord) GetDirectoryRecordUnregisterToken() string {
	if x != nil {
		return x.DirectoryRecordUnregisterToken
	}
	return ""
}

type PushDeviceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// account_pk is the account public key that owns the device token
	AccountPk string `protobuf:"bytes,1,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty" gorm:"primaryKey"`
	// token_type is the type of the token used, it allows us to act as a proxy to the appropriate push server
	TokenType pushtypes.PushServiceTokenType `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3,enum=berty.push.v1.PushServiceTokenType" json:"token_type,omitempty"`
	// bundle_id is the app identifier
	BundleId string `protobuf:"bytes,3,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	// token is the device identifier used
	Token []byte `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// public_key is the public key which will be used to encrypt the payload
	PublicKey []byte `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *PushDeviceToken) Reset() {
	*x = PushDeviceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushDeviceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDeviceToken) ProtoMessage() {}

func (x *PushDeviceToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDeviceToken.ProtoReflect.Descriptor instead.
func (*PushDeviceToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{36}
}

func (x *PushDeviceToken) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *PushDeviceToken) GetTokenType() pushtypes.PushServiceTokenType {
	if x != nil {
		return x.TokenType
	}
	return pushtypes.PushServiceTokenType(0)
}

func (x *PushDeviceToken) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushDeviceToken) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *PushDeviceToken) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type PushServerRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountPk  string `protobuf:"bytes,1,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty" gorm:"primaryKey"`
	ServerAddr string `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty" gorm:"primaryKey"`
	ServerKey  []byte `protobuf:"bytes,3,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
}

func (x *PushServerRecord) Reset() {
	*x = PushServerRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushServerRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushServerRecord) ProtoMessage() {}

func (x *PushServerRecord) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushServerRecord.ProtoReflect.Descriptor instead.
func (*PushServerRecord) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{37}
}

func (x *PushServerRecord) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *PushServerRecord) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *PushServerRecord) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

type ContactMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *ContactMetadata) Reset() {
	*x = ContactMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactMetadata) ProtoMessage() {}

func (x *ContactMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactMetadata.ProtoReflect.Descriptor instead.
func (*ContactMetadata) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{38}
}

func (x *ContactMetadata) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type StreamEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    StreamEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.StreamEvent_Type" json:"type,omitempty"`
	Payload []byte           `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// specific to "*Updated" events
	IsNew bool `protobuf:"varint,3,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (x *StreamEvent) Reset() {
	*x = StreamEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent) ProtoMessage() {}

func (x *StreamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent.ProtoReflect.Descriptor instead.
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39}
}

func (x *StreamEvent) GetType() StreamEvent_Type {
	if x != nil {
		return x.Type
	}
	return StreamEvent_Undefined
}

func (x *StreamEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamEvent) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type ConversationStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationStream) Reset() {
	*x = ConversationStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationStream) ProtoMessage() {}

func (x *ConversationStream) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationStream.ProtoReflect.Descriptor instead.
func (*ConversationStream) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{40}
}

type ConversationCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationCreate) Reset() {
	*x = ConversationCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCreate) ProtoMessage() {}

func (x *ConversationCreate) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCreate.ProtoReflect.Descriptor instead.
func (*ConversationCreate) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{41}
}

type AccountGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountGet) Reset() {
	*x = AccountGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGet) ProtoMessage() {}

func (x *AccountGet) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGet.ProtoReflect.Descriptor instead.
func (*AccountGet) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{42}
}

type EventStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventStream) Reset() {
	*x = EventStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStream) ProtoMessage() {}

func (x *EventStream) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStream.ProtoReflect.Descriptor instead.
func (*EventStream) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{43}
}

type AccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountUpdate) Reset() {
	*x = AccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate) ProtoMessage() {}

func (x *AccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{44}
}

type AccountPushConfigure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountPushConfigure) Reset() {
	*x = AccountPushConfigure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPushConfigure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPushConfigure) ProtoMessage() {}

func (x *AccountPushConfigure) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPushConfigure.ProtoReflect.Descriptor instead.
func (*AccountPushConfigure) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{45}
}

type ContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContactRequest) Reset() {
	*x = ContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactRequest) ProtoMessage() {}

func (x *ContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactRequest.ProtoReflect.Descriptor instead.
func (*ContactRequest) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{46}
}

type ContactAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContactAccept) Reset() {
	*x = ContactAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactAccept) ProtoMessage() {}

func (x *ContactAccept) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactAccept.ProtoReflect.Descriptor instead.
func (*ContactAccept) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{47}
}

type Interact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Interact) Reset() {
	*x = Interact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interact) ProtoMessage() {}

func (x *Interact) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interact.ProtoReflect.Descriptor instead.
func (*Interact) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{48}
}

type ReplicationServiceRegisterGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplicationServiceRegisterGroup) Reset() {
	*x = ReplicationServiceRegisterGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationServiceRegisterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationServiceRegisterGroup) ProtoMessage() {}

func (x *ReplicationServiceRegisterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationServiceRegisterGroup.ProtoReflect.Descriptor instead.
func (*ReplicationServiceRegisterGroup) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{49}
}

type ReplicationSetAutoEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplicationSetAutoEnable) Reset() {
	*x = ReplicationSetAutoEnable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationSetAutoEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationSetAutoEnable) ProtoMessage() {}

func (x *ReplicationSetAutoEnable) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationSetAutoEnable.ProtoReflect.Descriptor instead.
func (*ReplicationSetAutoEnable) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{50}
}

type BannerQuote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BannerQuote) Reset() {
	*x = BannerQuote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerQuote) ProtoMessage() {}

func (x *BannerQuote) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerQuote.ProtoReflect.Descriptor instead.
func (*BannerQuote) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{51}
}

type InstanceExportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceExportData) Reset() {
	*x = InstanceExportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceExportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceExportData) ProtoMessage() {}

func (x *InstanceExportData) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceExportData.ProtoReflect.Descriptor instead.
func (*InstanceExportData) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{52}
}

type LocalDatabaseState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey               string                    `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	DisplayName             string                    `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ReplicateFlag           bool                      `protobuf:"varint,3,opt,name=replicate_flag,json=replicateFlag,proto3" json:"replicate_flag,omitempty"`
	LocalConversationsState []*LocalConversationState `protobuf:"bytes,4,rep,name=local_conversations_state,json=localConversationsState,proto3" json:"local_conversations_state,omitempty"`
	AccountLink             string                    `protobuf:"bytes,5,opt,name=account_link,json=accountLink,proto3" json:"account_link,omitempty"`
	AutoSharePushTokenFlag  bool                      `protobuf:"varint,6,opt,name=auto_share_push_token_flag,json=autoSharePushTokenFlag,proto3" json:"auto_share_push_token_flag,omitempty"`
}

func (x *LocalDatabaseState) Reset() {
	*x = LocalDatabaseState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalDatabaseState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalDatabaseState) ProtoMessage() {}

func (x *LocalDatabaseState) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalDatabaseState.ProtoReflect.Descriptor instead.
func (*LocalDatabaseState) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{53}
}

func (x *LocalDatabaseState) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *LocalDatabaseState) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *LocalDatabaseState) GetReplicateFlag() bool {
	if x != nil {
		return x.ReplicateFlag
	}
	return false
}

func (x *LocalDatabaseState) GetLocalConversationsState() []*LocalConversationState {
	if x != nil {
		return x.LocalConversationsState
	}
	return nil
}

func (x *LocalDatabaseState) GetAccountLink() string {
	if x != nil {
		return x.AccountLink
	}
	return ""
}

func (x *LocalDatabaseState) GetAutoSharePushTokenFlag() bool {
	if x != nil {
		return x.AutoSharePushTokenFlag
	}
	return false
}

type LocalConversationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey   string            `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	UnreadCount int32             `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	IsOpen      bool              `protobuf:"varint,3,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	Type        Conversation_Type `protobuf:"varint,4,opt,name=type,proto3,enum=berty.messenger.v1.Conversation_Type" json:"type,omitempty"`
}

func (x *LocalConversationState) Reset() {
	*x = LocalConversationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalConversationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalConversationState) ProtoMessage() {}

func (x *LocalConversationState) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalConversationState.ProtoReflect.Descriptor instead.
func (*LocalConversationState) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{54}
}

func (x *LocalConversationState) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *LocalConversationState) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *LocalConversationState) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *LocalConversationState) GetType() Conversation_Type {
	if x != nil {
		return x.Type
	}
	return Conversation_Undefined
}

type MessageSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageSearch) Reset() {
	*x = MessageSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSearch) ProtoMessage() {}

func (x *MessageSearch) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSearch.ProtoReflect.Descriptor instead.
func (*MessageSearch) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{55}
}

type TyberHostSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TyberHostSearch) Reset() {
	*x = TyberHostSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TyberHostSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TyberHostSearch) ProtoMessage() {}

func (x *TyberHostSearch) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TyberHostSearch.ProtoReflect.Descriptor instead.
func (*TyberHostSearch) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{56}
}

type TyberHostAttach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TyberHostAttach) Reset() {
	*x = TyberHostAttach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TyberHostAttach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TyberHostAttach) ProtoMessage() {}

func (x *TyberHostAttach) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TyberHostAttach.ProtoReflect.Descriptor instead.
func (*TyberHostAttach) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{57}
}

type PushSetDeviceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSetDeviceToken) Reset() {
	*x = PushSetDeviceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetDeviceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetDeviceToken) ProtoMessage() {}

func (x *PushSetDeviceToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetDeviceToken.ProtoReflect.Descriptor instead.
func (*PushSetDeviceToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{58}
}

type PushSetAutoShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSetAutoShare) Reset() {
	*x = PushSetAutoShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetAutoShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetAutoShare) ProtoMessage() {}

func (x *PushSetAutoShare) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetAutoShare.ProtoReflect.Descriptor instead.
func (*PushSetAutoShare) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{59}
}

type PushReceivedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolData      *protocoltypes.OutOfStoreReceive_Reply `protobuf:"bytes,1,opt,name=protocol_data,json=protocolData,proto3" json:"protocol_data,omitempty"`
	Interaction       *Interaction                           `protobuf:"bytes,2,opt,name=interaction,proto3" json:"interaction,omitempty"`
	AlreadyReceived   bool                                   `protobuf:"varint,3,opt,name=already_received,json=alreadyReceived,proto3" json:"already_received,omitempty"`
	AccountMuted      bool                                   `protobuf:"varint,4,opt,name=account_muted,json=accountMuted,proto3" json:"account_muted,omitempty"`
	ConversationMuted bool                                   `protobuf:"varint,5,opt,name=conversation_muted,json=conversationMuted,proto3" json:"conversation_muted,omitempty"`
	HidePreview       bool                                   `protobuf:"varint,6,opt,name=hide_preview,json=hidePreview,proto3" json:"hide_preview,omitempty"`
}

func (x *PushReceivedData) Reset() {
	*x = PushReceivedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReceivedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReceivedData) ProtoMessage() {}

func (x *PushReceivedData) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReceivedData.ProtoReflect.Descriptor instead.
func (*PushReceivedData) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{60}
}

func (x *PushReceivedData) GetProtocolData() *protocoltypes.OutOfStoreReceive_Reply {
	if x != nil {
		return x.ProtocolData
	}
	return nil
}

func (x *PushReceivedData) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *PushReceivedData) GetAlreadyReceived() bool {
	if x != nil {
		return x.AlreadyReceived
	}
	return false
}

func (x *PushReceivedData) GetAccountMuted() bool {
	if x != nil {
		return x.AccountMuted
	}
	return false
}

func (x *PushReceivedData) GetConversationMuted() bool {
	if x != nil {
		return x.ConversationMuted
	}
	return false
}

func (x *PushReceivedData) GetHidePreview() bool {
	if x != nil {
		return x.HidePreview
	}
	return false
}

type PushReceive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushReceive) Reset() {
	*x = PushReceive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReceive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReceive) ProtoMessage() {}

func (x *PushReceive) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReceive.ProtoReflect.Descriptor instead.
func (*PushReceive) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{61}
}

type ListMemberDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMemberDevices) Reset() {
	*x = ListMemberDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberDevices) ProtoMessage() {}

func (x *ListMemberDevices) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberDevices.ProtoReflect.Descriptor instead.
func (*ListMemberDevices) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{62}
}

type PushShareTokenForConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushShareTokenForConversation) Reset() {
	*x = PushShareTokenForConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushShareTokenForConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushShareTokenForConversation) ProtoMessage() {}

func (x *PushShareTokenForConversation) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushShareTokenForConversation.ProtoReflect.Descriptor instead.
func (*PushShareTokenForConversation) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{63}
}

type PushTokenSharedForConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushTokenSharedForConversation) Reset() {
	*x = PushTokenSharedForConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTokenSharedForConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTokenSharedForConversation) ProtoMessage() {}

func (x *PushTokenSharedForConversation) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTokenSharedForConversation.ProtoReflect.Descriptor instead.
func (*PushTokenSharedForConversation) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{64}
}

type DirectoryServiceRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryServiceRegister) Reset() {
	*x = DirectoryServiceRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceRegister) ProtoMessage() {}

func (x *DirectoryServiceRegister) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceRegister.ProtoReflect.Descriptor instead.
func (*DirectoryServiceRegister) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{65}
}

type DirectoryServiceUnregister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryServiceUnregister) Reset() {
	*x = DirectoryServiceUnregister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceUnregister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceUnregister) ProtoMessage() {}

func (x *DirectoryServiceUnregister) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceUnregister.ProtoReflect.Descriptor instead.
func (*DirectoryServiceUnregister) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{66}
}

type DirectoryServiceQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryServiceQuery) Reset() {
	*x = DirectoryServiceQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceQuery) ProtoMessage() {}

func (x *DirectoryServiceQuery) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceQuery.ProtoReflect.Descriptor instead.
func (*DirectoryServiceQuery) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{67}
}

type PushServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Key  []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PushServer) Reset() {
	*x = PushServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushServer) ProtoMessage() {}

func (x *PushServer) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushServer.ProtoReflect.Descriptor instead.
func (*PushServer) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{68}
}

func (x *PushServer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *PushServer) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type PushLocalDeviceSharedToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty" gorm:"primaryKey"`
	// group_pk is the public key of the group for whom the token is for
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
}

func (x *PushLocalDeviceSharedToken) Reset() {
	*x = PushLocalDeviceSharedToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushLocalDeviceSharedToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushLocalDeviceSharedToken) ProtoMessage() {}

func (x *PushLocalDeviceSharedToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushLocalDeviceSharedToken.ProtoReflect.Descriptor instead.
func (*PushLocalDeviceSharedToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{69}
}

func (x *PushLocalDeviceSharedToken) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *PushLocalDeviceSharedToken) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

type PushMemberToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token_id is the id of the token
	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty" gorm:"primaryKey"`
	// group_pk is the public key of the group for whom the token is for
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
	// device_pk is the public key of the device sending the message
	DevicePk string `protobuf:"bytes,3,opt,name=device_pk,json=devicePk,proto3" json:"device_pk,omitempty"`
	// server_addr is the push server address
	ServerAddr string `protobuf:"bytes,4,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	// server_key is the push server public key
	ServerKey []byte `protobuf:"bytes,5,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	// token is the sealed token of the device
	Token []byte `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PushMemberToken) Reset() {
	*x = PushMemberToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMemberToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMemberToken) ProtoMessage() {}

func (x *PushMemberToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMemberToken.ProtoReflect.Descriptor instead.
func (*PushMemberToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{70}
}

func (x *PushMemberToken) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *PushMemberToken) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *PushMemberToken) GetDevicePk() string {
	if x != nil {
		return x.DevicePk
	}
	return ""
}

func (x *PushMemberToken) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *PushMemberToken) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *PushMemberToken) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type PushMemberTokenUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// device_pk is the public key of the device sending the message
	DevicePk string `protobuf:"bytes,1,opt,name=device_pk,json=devicePk,proto3" json:"device_pk,omitempty"`
	// server is the push server to use
	Server *PushServer `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	// token is the sealed token of the device
	Token []byte `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PushMemberTokenUpdate) Reset() {
	*x = PushMemberTokenUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMemberTokenUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMemberTokenUpdate) ProtoMessage() {}

func (x *PushMemberTokenUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMemberTokenUpdate.ProtoReflect.Descriptor instead.
func (*PushMemberTokenUpdate) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{71}
}

func (x *PushMemberTokenUpdate) GetDevicePk() string {
	if x != nil {
		return x.DevicePk
	}
	return ""
}

func (x *PushMemberTokenUpdate) GetServer() *PushServer {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *PushMemberTokenUpdate) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type MemberWithDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberPk   string   `protobuf:"bytes,1,opt,name=member_pk,json=memberPk,proto3" json:"member_pk,omitempty"`
	DevicesPks []string `protobuf:"bytes,2,rep,name=devices_pks,json=devicesPks,proto3" json:"devices_pks,omitempty"`
}

func (x *MemberWithDevices) Reset() {
	*x = MemberWithDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberWithDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberWithDevices) ProtoMessage() {}

func (x *MemberWithDevices) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberWithDevices.ProtoReflect.Descriptor instead.
func (*MemberWithDevices) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{72}
}

func (x *MemberWithDevices) GetMemberPk() string {
	if x != nil {
		return x.MemberPk
	}
	return ""
}

func (x *MemberWithDevices) GetDevicesPks() []string {
	if x != nil {
		return x.DevicesPks
	}
	return nil
}

type PushSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSend) Reset() {
	*x = PushSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSend) ProtoMessage() {}

func (x *PushSend) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSend.ProtoReflect.Descriptor instead.
func (*PushSend) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{73}
}

type PushShareToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushShareToken) Reset() {
	*x = PushShareToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushShareToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushShareToken) ProtoMessage() {}

func (x *PushShareToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushShareToken.ProtoReflect.Descriptor instead.
func (*PushShareToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{74}
}

type PushSetServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSetServer) Reset() {
	*x = PushSetServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetServer) ProtoMessage() {}

func (x *PushSetServer) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetServer.ProtoReflect.Descriptor instead.
func (*PushSetServer) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{75}
}

type AuthExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string            `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Scope            string            `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Error            string            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	ErrorDescription string            `protobuf:"bytes,4,opt,name=error_description,json=errorDescription,proto3" json:"error_description,omitempty"`
	Services         map[string]string `protobuf:"bytes,5,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuthExchangeResponse) Reset() {
	*x = AuthExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthExchangeResponse) ProtoMessage() {}

func (x *AuthExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthExchangeResponse.ProtoReflect.Descriptor instead.
func (*AuthExchangeResponse) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{76}
}

func (x *AuthExchangeResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthExchangeResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthExchangeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AuthExchangeResponse) GetErrorDescription() string {
	if x != nil {
		return x.ErrorDescription
	}
	return ""
}

func (x *AuthExchangeResponse) GetServices() map[string]string {
	if x != nil {
		return x.Services
	}
	return nil
}

type ServicesTokenCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services      []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	CodeChallenge string   `protobuf:"bytes,2,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	TokenId       string   `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *ServicesTokenCode) Reset() {
	*x = ServicesTokenCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesTokenCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesTokenCode) ProtoMessage() {}

func (x *ServicesTokenCode) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesTokenCode.ProtoReflect.Descriptor instead.
func (*ServicesTokenCode) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{77}
}

func (x *ServicesTokenCode) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ServicesTokenCode) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *ServicesTokenCode) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type ConversationOpen_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupPk string `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
}

func (x *ConversationOpen_Request) Reset() {
	*x = ConversationOpen_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationOpen_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationOpen_Request) ProtoMessage() {}

func (x *ConversationOpen_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationOpen_Request.ProtoReflect.Descriptor instead.
func (*ConversationOpen_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ConversationOpen_Request) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

type ConversationOpen_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationOpen_Reply) Reset() {
	*x = ConversationOpen_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationOpen_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationOpen_Reply) ProtoMessage() {}

func (x *ConversationOpen_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationOpen_Reply.ProtoReflect.Descriptor instead.
func (*ConversationOpen_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{1, 1}
}

type ConversationClose_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupPk string `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
}

func (x *ConversationClose_Request) Reset() {
	*x = ConversationClose_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationClose_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationClose_Request) ProtoMessage() {}

func (x *ConversationClose_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationClose_Request.ProtoReflect.Descriptor instead.
func (*ConversationClose_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ConversationClose_Request) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

type ConversationClose_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationClose_Reply) Reset() {
	*x = ConversationClose_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationClose_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationClose_Reply) ProtoMessage() {}

func (x *ConversationClose_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationClose_Reply.ProtoReflect.Descriptor instead.
func (*ConversationClose_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{2, 1}
}

type ConversationLoad_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *PaginatedInteractionsOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ConversationLoad_Request) Reset() {
	*x = ConversationLoad_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationLoad_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationLoad_Request) ProtoMessage() {}

func (x *ConversationLoad_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationLoad_Request.ProtoReflect.Descriptor instead.
func (*ConversationLoad_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ConversationLoad_Request) GetOptions() *PaginatedInteractionsOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ConversationLoad_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationLoad_Reply) Reset() {
	*x = ConversationLoad_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationLoad_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationLoad_Reply) ProtoMessage() {}

func (x *ConversationLoad_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationLoad_Reply.ProtoReflect.Descriptor instead.
func (*ConversationLoad_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{3, 1}
}

type ConversationMute_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupPk     string `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	MutedUntil  int64  `protobuf:"varint,2,opt,name=muted_until,json=mutedUntil,proto3" json:"muted_until,omitempty"`
	Unmute      bool   `protobuf:"varint,3,opt,name=unmute,proto3" json:"unmute,omitempty"`
	MuteForever bool   `protobuf:"varint,4,opt,name=mute_forever,json=muteForever,proto3" json:"mute_forever,omitempty"`
}

func (x *ConversationMute_Request) Reset() {
	*x = ConversationMute_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationMute_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMute_Request) ProtoMessage() {}

func (x *ConversationMute_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMute_Request.ProtoReflect.Descriptor instead.
func (*ConversationMute_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ConversationMute_Request) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

func (x *ConversationMute_Request) GetMutedUntil() int64 {
	if x != nil {
		return x.MutedUntil
	}
	return 0
}

func (x *ConversationMute_Request) GetUnmute() bool {
	if x != nil {
		return x.Unmute
	}
	return false
}

func (x *ConversationMute_Request) GetMuteForever() bool {
	if x != nil {
		return x.MuteForever
	}
	return false
}

type ConversationMute_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationMute_Reply) Reset() {
	*x = ConversationMute_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationMute_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMute_Reply) ProtoMessage() {}

func (x *ConversationMute_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMute_Reply.ProtoReflect.Descriptor instead.
func (*ConversationMute_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{4, 1}
}

type EchoTest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delay        uint64 `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"` // in ms
	Echo         string `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError bool   `protobuf:"varint,3,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
}

func (x *EchoTest_Request) Reset() {
	*x = EchoTest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoTest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoTest_Request) ProtoMessage() {}

func (x *EchoTest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoTest_Request.ProtoReflect.Descriptor instead.
func (*EchoTest_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{5, 0}
}

func (x *EchoTest_Request) GetDelay() uint64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *EchoTest_Request) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

func (x *EchoTest_Request) GetTriggerError() bool {
	if x != nil {
		return x.TriggerError
	}
	return false
}

type EchoTest_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Echo string `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (x *EchoTest_Reply) Reset() {
	*x = EchoTest_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoTest_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoTest_Reply) ProtoMessage() {}

func (x *EchoTest_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoTest_Reply.ProtoReflect.Descriptor instead.
func (*EchoTest_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{5, 1}
}

func (x *EchoTest_Reply) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

type EchoDuplexTest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Echo         string `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError bool   `protobuf:"varint,3,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
}

func (x *EchoDuplexTest_Request) Reset() {
	*x = EchoDuplexTest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoDuplexTest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoDuplexTest_Request) ProtoMessage() {}

func (x *EchoDuplexTest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoDuplexTest_Request.ProtoReflect.Descriptor instead.
func (*EchoDuplexTest_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{6, 0}
}

func (x *EchoDuplexTest_Request) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

func (x *EchoDuplexTest_Request) GetTriggerError() bool {
	if x != nil {
		return x.TriggerError
	}
	return false
}

type EchoDuplexTest_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Echo string `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (x *EchoDuplexTest_Reply) Reset() {
	*x = EchoDuplexTest_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoDuplexTest_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoDuplexTest_Reply) ProtoMessage() {}

func (x *EchoDuplexTest_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoDuplexTest_Reply.ProtoReflect.Descriptor instead.
func (*EchoDuplexTest_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{6, 1}
}

func (x *EchoDuplexTest_Reply) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

type InstanceShareableBertyID_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// reset will regenerate a new link
	Reset_      bool   `protobuf:"varint,1,opt,name=reset,proto3" json:"reset,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// optional passphase to encrypt the link
	Passphrase []byte `protobuf:"bytes,3,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *InstanceShareableBertyID_Request) Reset() {
	*x = InstanceShareableBertyID_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceShareableBertyID_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceShareableBertyID_Request) ProtoMessage() {}

func (x *InstanceShareableBertyID_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceShareableBertyID_Request.ProtoReflect.Descriptor instead.
func (*InstanceShareableBertyID_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{7, 0}
}

func (x *InstanceShareableBertyID_Request) GetReset_() bool {
	if x != nil {
		return x.Reset_
	}
	return false
}

func (x *InstanceShareableBertyID_Request) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *InstanceShareableBertyID_Request) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type InstanceShareableBertyID_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link        *BertyLink `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	InternalUrl string     `protobuf:"bytes,2,opt,name=internal_url,json=internalUrl,proto3" json:"internal_url,omitempty"`
	WebUrl      string     `protobuf:"bytes,3,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (x *InstanceShareableBertyID_Reply) Reset() {
	*x = InstanceShareableBertyID_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceShareableBertyID_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceShareableBertyID_Reply) ProtoMessage() {}

func (x *InstanceShareableBertyID_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceShareableBertyID_Reply.ProtoReflect.Descriptor instead.
func (*InstanceShareableBertyID_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{7, 1}
}

func (x *InstanceShareableBertyID_Reply) GetLink() *BertyLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *InstanceShareableBertyID_Reply) GetInternalUrl() string {
	if x != nil {
		return x.InternalUrl
	}
	return ""
}

func (x *InstanceShareableBertyID_Reply) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

type ShareableBertyGroup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupPk   []byte `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *ShareableBertyGroup_Request) Reset() {
	*x = ShareableBertyGroup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareableBertyGroup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareableBertyGroup_Request) ProtoMessage() {}

func (x *ShareableBertyGroup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareableBertyGroup_Request.ProtoReflect.Descriptor instead.
func (*ShareableBertyGroup_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ShareableBertyGroup_Request) GetGroupPk() []byte {
	if x != nil {
		return x.GroupPk
	}
	return nil
}

func (x *ShareableBertyGroup_Request) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type ShareableBertyGroup_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link        *BertyLink `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	InternalUrl string     `protobuf:"bytes,2,opt,name=internal_url,json=internalUrl,proto3" json:"internal_url,omitempty"`
	WebUrl      string     `protobuf:"bytes,3,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (x *ShareableBertyGroup_Reply) Reset() {
	*x = ShareableBertyGroup_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareableBertyGroup_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareableBertyGroup_Reply) ProtoMessage() {}

func (x *ShareableBertyGroup_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareableBertyGroup_Reply.ProtoReflect.Descriptor instead.
func (*ShareableBertyGroup_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ShareableBertyGroup_Reply) GetLink() *BertyLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *ShareableBertyGroup_Reply) GetInternalUrl() string {
	if x != nil {
		return x.InternalUrl
	}
	return ""
}

func (x *ShareableBertyGroup_Reply) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

type DevShareInstanceBertyID_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// reset will regenerate a new link
	Reset_      bool   `protobuf:"varint,1,opt,name=reset,proto3" json:"reset,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *DevShareInstanceBertyID_Request) Reset() {
	*x = DevShareInstanceBertyID_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevShareInstanceBertyID_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevShareInstanceBertyID_Request) ProtoMessage() {}

func (x *DevShareInstanceBertyID_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevShareInstanceBertyID_Request.ProtoReflect.Descriptor instead.
func (*DevShareInstanceBertyID_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{9, 0}
}

func (x *DevShareInstanceBertyID_Request) GetReset_() bool {
	if x != nil {
		return x.Reset_
	}
	return false
}

func (x *DevShareInstanceBertyID_Request) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type DevShareInstanceBertyID_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DevShareInstanceBertyID_Reply) Reset() {
	*x = DevShareInstanceBertyID_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevShareInstanceBertyID_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevShareInstanceBertyID_Reply) ProtoMessage() {}

func (x *DevShareInstanceBertyID_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevShareInstanceBertyID_Reply.ProtoReflect.Descriptor instead.
func (*DevShareInstanceBertyID_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{9, 1}
}

type DevStreamLogs_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DevStreamLogs_Request) Reset() {
	*x = DevStreamLogs_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevStreamLogs_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevStreamLogs_Request) ProtoMessage() {}

func (x *DevStreamLogs_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevStreamLogs_Request.ProtoReflect.Descriptor instead.
func (*DevStreamLogs_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{10, 0}
}

type DevStreamLogs_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *DevStreamLogs_Reply) Reset() {
	*x = DevStreamLogs_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevStreamLogs_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevStreamLogs_Reply) ProtoMessage() {}

func (x *DevStreamLogs_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevStreamLogs_Reply.ProtoReflect.Descriptor instead.
func (*DevStreamLogs_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{10, 1}
}

func (x *DevStreamLogs_Reply) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type ParseDeepLink_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// optional passphase to decrypt the link
	Passphrase []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *ParseDeepLink_Request) Reset() {
	*x = ParseDeepLink_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseDeepLink_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDeepLink_Request) ProtoMessage() {}

func (x *ParseDeepLink_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDeepLink_Request.ProtoReflect.Descriptor instead.
func (*ParseDeepLink_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ParseDeepLink_Request) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ParseDeepLink_Request) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type ParseDeepLink_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link *BertyLink `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *ParseDeepLink_Reply) Reset() {
	*x = ParseDeepLink_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseDeepLink_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDeepLink_Reply) ProtoMessage() {}

func (x *ParseDeepLink_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDeepLink_Reply.ProtoReflect.Descriptor instead.
func (*ParseDeepLink_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{11, 1}
}

func (x *ParseDeepLink_Reply) GetLink() *BertyLink {
	if x != nil {
		return x.Link
	}
	return nil
}

// Encrypted is a clear structure containing clear and encrypted fields.
//
// We prefer to use a clear struct with encrypted fields instead of a simple
// encrypted struct, to improves chances of having a valid structure even
// with an invalid passphase. This will force an attacker to have more resources
// to test more false-positive guesses.
type BertyLink_Encrypted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// kind is a clear representation of the unencrypted link type.
	Kind BertyLink_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=berty.messenger.v1.BertyLink_Kind" json:"kind,omitempty"`
	// nonce is a clear field used by scrypt as "salt" to derive the passphrase and
	// also used by cipher.NewCTR as "iv" to initialize a stream cipher.
	Nonce []byte `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// display_name is an optional clear representation of the display name.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// checksum is an optional field used to check if the decryption was successful.
	// the length is customizable (SHAKE256). a longer checksum means less conflicts.
	// having more conflicts may be bad in term of UX, but make it easier for an attacker
	// to run an offline bruteforce.
	Checksum                    []byte                  `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	ContactPublicRendezvousSeed []byte                  `protobuf:"bytes,10,opt,name=contact_public_rendezvous_seed,json=contactPublicRendezvousSeed,proto3" json:"contact_public_rendezvous_seed,omitempty"`
	ContactAccountPk            []byte                  `protobuf:"bytes,11,opt,name=contact_account_pk,json=contactAccountPk,proto3" json:"contact_account_pk,omitempty"`
	GroupPublicKey              []byte                  `protobuf:"bytes,20,opt,name=group_public_key,json=groupPublicKey,proto3" json:"group_public_key,omitempty"`
	GroupSecret                 []byte                  `protobuf:"bytes,21,opt,name=group_secret,json=groupSecret,proto3" json:"group_secret,omitempty"`
	GroupSecretSig              []byte                  `protobuf:"bytes,22,opt,name=group_secret_sig,json=groupSecretSig,proto3" json:"group_secret_sig,omitempty"`
	GroupType                   protocoltypes.GroupType `protobuf:"varint,23,opt,name=group_type,json=groupType,proto3,enum=weshnet.protocol.v1.GroupType" json:"group_type,omitempty"` // clear
	GroupSignPub                []byte                  `protobuf:"bytes,24,opt,name=group_sign_pub,json=groupSignPub,proto3" json:"group_sign_pub,omitempty"`
	GroupLinkKeySig             []byte                  `protobuf:"bytes,25,opt,name=group_link_key_sig,json=groupLinkKeySig,proto3" json:"group_link_key_sig,omitempty"`
}

func (x *BertyLink_Encrypted) Reset() {
	*x = BertyLink_Encrypted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BertyLink_Encrypted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BertyLink_Encrypted) ProtoMessage() {}

func (x *BertyLink_Encrypted) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BertyLink_Encrypted.ProtoReflect.Descriptor instead.
func (*BertyLink_Encrypted) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{12, 0}
}

func (x *BertyLink_Encrypted) GetKind() BertyLink_Kind {
	if x != nil {
		return x.Kind
	}
	return BertyLink_UnknownKind
}

func (x *BertyLink_Encrypted) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *BertyLink_Encrypted) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *BertyLink_Encrypted) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *BertyLink_Encrypted) GetContactPublicRendezvousSeed() []byte {
	if x != nil {
		return x.ContactPublicRendezvousSeed
	}
	return nil
}

func (x *BertyLink_Encrypted) GetContactAccountPk() []byte {
	if x != nil {
		return x.ContactAccountPk
	}
	return nil
}

func (x *BertyLink_Encrypted) GetGroupPublicKey() []byte {
	if x != nil {
		return x.GroupPublicKey
	}
	return nil
}

func (x *BertyLink_Encrypted) GetGroupSecret() []byte {
	if x != nil {
		return x.GroupSecret
	}
	return nil
}

func (x *BertyLink_Encrypted) GetGroupSecretSig() []byte {
	if x != nil {
		return x.GroupSecretSig
	}
	return nil
}

func (x *BertyLink_Encrypted) GetGroupType() protocoltypes.GroupType {
	if x != nil {
		return x.GroupType
	}
	return protocoltypes.GroupType(0)
}

func (x *BertyLink_Encrypted) GetGroupSignPub() []byte {
	if x != nil {
		return x.GroupSignPub
	}
	return nil
}

func (x *BertyLink_Encrypted) GetGroupLinkKeySig() []byte {
	if x != nil {
		return x.GroupLinkKeySig
	}
	return nil
}

type BertyLink_BertyMessageRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	GroupPk   string `protobuf:"bytes,2,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	MessageId string `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *BertyLink_BertyMessageRef) Reset() {
	*x = BertyLink_BertyMessageRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BertyLink_BertyMessageRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BertyLink_BertyMessageRef) ProtoMessage() {}

func (x *BertyLink_BertyMessageRef) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BertyLink_BertyMessageRef.ProtoReflect.Descriptor instead.
func (*BertyLink_BertyMessageRef) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{12, 1}
}

func (x *BertyLink_BertyMessageRef) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *BertyLink_BertyMessageRef) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

func (x *BertyLink_BertyMessageRef) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type SendContactRequest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BertyId     *BertyID `protobuf:"bytes,1,opt,name=berty_id,json=bertyId,proto3" json:"berty_id,omitempty"`
	Metadata    []byte   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	OwnMetadata []byte   `protobuf:"bytes,3,opt,name=own_metadata,json=ownMetadata,proto3" json:"own_metadata,omitempty"`
}

func (x *SendContactRequest_Request) Reset() {
	*x = SendContactRequest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactRequest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactRequest_Request) ProtoMessage() {}

func (x *SendContactRequest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactRequest_Request.ProtoReflect.Descriptor instead.
func (*SendContactRequest_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{13, 0}
}

func (x *SendContactRequest_Request) GetBertyId() *BertyID {
	if x != nil {
		return x.BertyId
	}
	return nil
}

func (x *SendContactRequest_Request) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SendContactRequest_Request) GetOwnMetadata() []byte {
	if x != nil {
		return x.OwnMetadata
	}
	return nil
}

type SendContactRequest_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendContactRequest_Reply) Reset() {
	*x = SendContactRequest_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactRequest_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactRequest_Reply) ProtoMessage() {}

func (x *SendContactRequest_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactRequest_Reply.ProtoReflect.Descriptor instead.
func (*SendContactRequest_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{13, 1}
}

type AppMessage_UserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *AppMessage_UserMessage) Reset() {
	*x = AppMessage_UserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_UserMessage) ProtoMessage() {}

func (x *AppMessage_UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_UserMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_UserMessage) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 0}
}

func (x *AppMessage_UserMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type AppMessage_GroupInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"` // TODO: optimize message size
}

func (x *AppMessage_GroupInvitation) Reset() {
	*x = AppMessage_GroupInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_GroupInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_GroupInvitation) ProtoMessage() {}

func (x *AppMessage_GroupInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_GroupInvitation.ProtoReflect.Descriptor instead.
func (*AppMessage_GroupInvitation) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 1}
}

func (x *AppMessage_GroupInvitation) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type AppMessage_SetGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *AppMessage_SetGroupInfo) Reset() {
	*x = AppMessage_SetGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_SetGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_SetGroupInfo) ProtoMessage() {}

func (x *AppMessage_SetGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_SetGroupInfo.ProtoReflect.Descriptor instead.
func (*AppMessage_SetGroupInfo) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 2}
}

func (x *AppMessage_SetGroupInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type AppMessage_SetUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *AppMessage_SetUserInfo) Reset() {
	*x = AppMessage_SetUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_SetUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_SetUserInfo) ProtoMessage() {}

func (x *AppMessage_SetUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_SetUserInfo.ProtoReflect.Descriptor instead.
func (*AppMessage_SetUserInfo) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 3}
}

func (x *AppMessage_SetUserInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type AppMessage_Acknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppMessage_Acknowledge) Reset() {
	*x = AppMessage_Acknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_Acknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_Acknowledge) ProtoMessage() {}

func (x *AppMessage_Acknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_Acknowledge.ProtoReflect.Descriptor instead.
func (*AppMessage_Acknowledge) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 4}
}

type AppMessage_AccountDirectoryServiceRegistered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier                     string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	IdentifierProofIssuer          string `protobuf:"bytes,2,opt,name=identifier_proof_issuer,json=identifierProofIssuer,proto3" json:"identifier_proof_issuer,omitempty"`
	RegistrationDate               int64  `protobuf:"varint,3,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	ExpirationDate                 int64  `protobuf:"varint,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	ServerAddr                     string `protobuf:"bytes,5,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	DirectoryRecordToken           string `protobuf:"bytes,6,opt,name=directory_record_token,json=directoryRecordToken,proto3" json:"directory_record_token,omitempty"`
	DirectoryRecordUnregisterToken string `protobuf:"bytes,7,opt,name=directory_record_unregister_token,json=directoryRecordUnregisterToken,proto3" json:"directory_record_unregister_token,omitempty"`
}

func (x *AppMessage_AccountDirectoryServiceRegistered) Reset() {
	*x = AppMessage_AccountDirectoryServiceRegistered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_AccountDirectoryServiceRegistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_AccountDirectoryServiceRegistered) ProtoMessage() {}

func (x *AppMessage_AccountDirectoryServiceRegistered) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_AccountDirectoryServiceRegistered.ProtoReflect.Descriptor instead.
func (*AppMessage_AccountDirectoryServiceRegistered) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 5}
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetIdentifierProofIssuer() string {
	if x != nil {
		return x.IdentifierProofIssuer
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetRegistrationDate() int64 {
	if x != nil {
		return x.RegistrationDate
	}
	return 0
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetExpirationDate() int64 {
	if x != nil {
		return x.ExpirationDate
	}
	return 0
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetDirectoryRecordToken() string {
	if x != nil {
		return x.DirectoryRecordToken
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceRegistered) GetDirectoryRecordUnregisterToken() string {
	if x != nil {
		return x.DirectoryRecordUnregisterToken
	}
	return ""
}

type AppMessage_AccountDirectoryServiceUnregistered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier            string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	IdentifierProofIssuer string `protobuf:"bytes,2,opt,name=identifier_proof_issuer,json=identifierProofIssuer,proto3" json:"identifier_proof_issuer,omitempty"`
	RemovalDate           int64  `protobuf:"varint,3,opt,name=removal_date,json=removalDate,proto3" json:"removal_date,omitempty"`
	ServerAddr            string `protobuf:"bytes,4,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	DirectoryRecordToken  string `protobuf:"bytes,5,opt,name=directory_record_token,json=directoryRecordToken,proto3" json:"directory_record_token,omitempty"`
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) Reset() {
	*x = AppMessage_AccountDirectoryServiceUnregistered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_AccountDirectoryServiceUnregistered) ProtoMessage() {}

func (x *AppMessage_AccountDirectoryServiceUnregistered) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_AccountDirectoryServiceUnregistered.ProtoReflect.Descriptor instead.
func (*AppMessage_AccountDirectoryServiceUnregistered) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 6}
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) GetIdentifierProofIssuer() string {
	if x != nil {
		return x.IdentifierProofIssuer
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) GetRemovalDate() int64 {
	if x != nil {
		return x.RemovalDate
	}
	return 0
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *AppMessage_AccountDirectoryServiceUnregistered) GetDirectoryRecordToken() string {
	if x != nil {
		return x.DirectoryRecordToken
	}
	return ""
}

type AppMessage_ServiceAddToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             string                          `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SupportedServices []*ServiceTokenSupportedService `protobuf:"bytes,2,rep,name=supported_services,json=supportedServices,proto3" json:"supported_services,omitempty"`
	AuthenticationUrl string                          `protobuf:"bytes,3,opt,name=authentication_url,json=authenticationUrl,proto3" json:"authentication_url,omitempty"`
	Expiration        int64                           `protobuf:"varint,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *AppMessage_ServiceAddToken) Reset() {
	*x = AppMessage_ServiceAddToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_ServiceAddToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_ServiceAddToken) ProtoMessage() {}

func (x *AppMessage_ServiceAddToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_ServiceAddToken.ProtoReflect.Descriptor instead.
func (*AppMessage_ServiceAddToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 7}
}

func (x *AppMessage_ServiceAddToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AppMessage_ServiceAddToken) GetSupportedServices() []*ServiceTokenSupportedService {
	if x != nil {
		return x.SupportedServices
	}
	return nil
}

func (x *AppMessage_ServiceAddToken) GetAuthenticationUrl() string {
	if x != nil {
		return x.AuthenticationUrl
	}
	return ""
}

func (x *AppMessage_ServiceAddToken) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type AppMessage_ServiceRemoveToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokenid string `protobuf:"bytes,2,opt,name=tokenid,proto3" json:"tokenid,omitempty"`
}

func (x *AppMessage_ServiceRemoveToken) Reset() {
	*x = AppMessage_ServiceRemoveToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_ServiceRemoveToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_ServiceRemoveToken) ProtoMessage() {}

func (x *AppMessage_ServiceRemoveToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_ServiceRemoveToken.ProtoReflect.Descriptor instead.
func (*AppMessage_ServiceRemoveToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 8}
}

func (x *AppMessage_ServiceRemoveToken) GetTokenid() string {
	if x != nil {
		return x.Tokenid
	}
	return ""
}

type AppMessage_PushSetDeviceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken *pushtypes.PushServiceReceiver `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *AppMessage_PushSetDeviceToken) Reset() {
	*x = AppMessage_PushSetDeviceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_PushSetDeviceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_PushSetDeviceToken) ProtoMessage() {}

func (x *AppMessage_PushSetDeviceToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_PushSetDeviceToken.ProtoReflect.Descriptor instead.
func (*AppMessage_PushSetDeviceToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 9}
}

func (x *AppMessage_PushSetDeviceToken) GetDeviceToken() *pushtypes.PushServiceReceiver {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

type AppMessage_PushSetServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *PushServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *AppMessage_PushSetServer) Reset() {
	*x = AppMessage_PushSetServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_PushSetServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_PushSetServer) ProtoMessage() {}

func (x *AppMessage_PushSetServer) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_PushSetServer.ProtoReflect.Descriptor instead.
func (*AppMessage_PushSetServer) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 10}
}

func (x *AppMessage_PushSetServer) GetServer() *PushServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type AppMessage_PushSetMemberToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberToken *PushMemberTokenUpdate `protobuf:"bytes,1,opt,name=member_token,json=memberToken,proto3" json:"member_token,omitempty"`
}

func (x *AppMessage_PushSetMemberToken) Reset() {
	*x = AppMessage_PushSetMemberToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage_PushSetMemberToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_PushSetMemberToken) ProtoMessage() {}

func (x *AppMessage_PushSetMemberToken) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_PushSetMemberToken.ProtoReflect.Descriptor instead.
func (*AppMessage_PushSetMemberToken) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{16, 11}
}

func (x *AppMessage_PushSetMemberToken) GetMemberToken() *PushMemberTokenUpdate {
	if x != nil {
		return x.MemberToken
	}
	return nil
}

type SystemInfo_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemInfo_Request) Reset() {
	*x = SystemInfo_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo_Request) ProtoMessage() {}

func (x *SystemInfo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo_Request.ProtoReflect.Descriptor instead.
func (*SystemInfo_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{17, 0}
}

type SystemInfo_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  *protocoltypes.SystemInfo_Reply `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Messenger *SystemInfo_Messenger           `protobuf:"bytes,2,opt,name=messenger,proto3" json:"messenger,omitempty"`
}

func (x *SystemInfo_Reply) Reset() {
	*x = SystemInfo_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo_Reply) ProtoMessage() {}

func (x *SystemInfo_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo_Reply.ProtoReflect.Descriptor instead.
func (*SystemInfo_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{17, 1}
}

func (x *SystemInfo_Reply) GetProtocol() *protocoltypes.SystemInfo_Reply {
	if x != nil {
		return x.Protocol
	}
	return nil
}

func (x *SystemInfo_Reply) GetMessenger() *SystemInfo_Messenger {
	if x != nil {
		return x.Messenger
	}
	return nil
}

type SystemInfo_Messenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process               *protocoltypes.SystemInfo_Process `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Warns                 []string                          `protobuf:"bytes,2,rep,name=warns,proto3" json:"warns,omitempty"`
	ProtocolInSameProcess bool                              `protobuf:"varint,3,opt,name=protocol_in_same_process,json=protocolInSameProcess,proto3" json:"protocol_in_same_process,omitempty"`
	Db                    *SystemInfo_DB                    `protobuf:"bytes,4,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *SystemInfo_Messenger) Reset() {
	*x = SystemInfo_Messenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo_Messenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo_Messenger) ProtoMessage() {}

func (x *SystemInfo_Messenger) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo_Messenger.ProtoReflect.Descriptor instead.
func (*SystemInfo_Messenger) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{17, 2}
}

func (x *SystemInfo_Messenger) GetProcess() *protocoltypes.SystemInfo_Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *SystemInfo_Messenger) GetWarns() []string {
	if x != nil {
		return x.Warns
	}
	return nil
}

func (x *SystemInfo_Messenger) GetProtocolInSameProcess() bool {
	if x != nil {
		return x.ProtocolInSameProcess
	}
	return false
}

func (x *SystemInfo_Messenger) GetDb() *SystemInfo_DB {
	if x != nil {
		return x.Db
	}
	return nil
}

type SystemInfo_DB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts                            int64 `protobuf:"varint,1,opt,name=accounts,proto3" json:"accounts,omitempty"`
	Contacts                            int64 `protobuf:"varint,2,opt,name=contacts,proto3" json:"contacts,omitempty"`
	Conversations                       int64 `protobuf:"varint,3,opt,name=conversations,proto3" json:"conversations,omitempty"`
	Interactions                        int64 `protobuf:"varint,4,opt,name=interactions,proto3" json:"interactions,omitempty"`
	Members                             int64 `protobuf:"varint,5,opt,name=members,proto3" json:"members,omitempty"`
	Devices                             int64 `protobuf:"varint,6,opt,name=devices,proto3" json:"devices,omitempty"`
	ServiceTokenSupportedServiceRecords int64 `protobuf:"varint,7,opt,name=service_token_supported_service_records,json=serviceTokenSupportedServiceRecords,proto3" json:"service_token_supported_service_records,omitempty"`
	ServiceTokens                       int64 `protobuf:"varint,8,opt,name=service_tokens,json=serviceTokens,proto3" json:"service_tokens,omitempty"`
	ConversationReplicationInfo         int64 `protobuf:"varint,9,opt,name=conversation_replication_info,json=conversationReplicationInfo,proto3" json:"conversation_replication_info,omitempty"`
	MetadataEvents                      int64 `protobuf:"varint,10,opt,name=metadata_events,json=metadataEvents,proto3" json:"metadata_events,omitempty"`
	PushMemberToken                     int64 `protobuf:"varint,12,opt,name=push_member_token,json=pushMemberToken,proto3" json:"push_member_token,omitempty"`
	AccountVerifiedCredentials          int64 `protobuf:"varint,13,opt,name=account_verified_credentials,json=accountVerifiedCredentials,proto3" json:"account_verified_credentials,omitempty"`
	AccountDirectoryServiceRecord       int64 `protobuf:"varint,14,opt,name=account_directory_service_record,json=accountDirectoryServiceRecord,proto3" json:"account_directory_service_record,omitempty"`
	PushDeviceToken                     int64 `protobuf:"varint,15,opt,name=push_device_token,json=pushDeviceToken,proto3" json:"push_device_token,omitempty"`
	PushServerRecord                    int64 `protobuf:"varint,16,opt,name=push_server_record,json=pushServerRecord,proto3" json:"push_server_record,omitempty"`
	PushLocalDeviceSharedToken          int64 `protobuf:"varint,17,opt,name=push_local_device_shared_token,json=pushLocalDeviceSharedToken,proto3" json:"push_local_device_shared_token,omitempty"` // older, more recent
}

func (x *SystemInfo_DB) Reset() {
	*x = SystemInfo_DB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo_DB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo_DB) ProtoMessage() {}

func (x *SystemInfo_DB) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo_DB.ProtoReflect.Descriptor instead.
func (*SystemInfo_DB) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{17, 3}
}

func (x *SystemInfo_DB) GetAccounts() int64 {
	if x != nil {
		return x.Accounts
	}
	return 0
}

func (x *SystemInfo_DB) GetContacts() int64 {
	if x != nil {
		return x.Contacts
	}
	return 0
}

func (x *SystemInfo_DB) GetConversations() int64 {
	if x != nil {
		return x.Conversations
	}
	return 0
}

func (x *SystemInfo_DB) GetInteractions() int64 {
	if x != nil {
		return x.Interactions
	}
	return 0
}

func (x *SystemInfo_DB) GetMembers() int64 {
	if x != nil {
		return x.Members
	}
	return 0
}

func (x *SystemInfo_DB) GetDevices() int64 {
	if x != nil {
		return x.Devices
	}
	return 0
}

func (x *SystemInfo_DB) GetServiceTokenSupportedServiceRecords() int64 {
	if x != nil {
		return x.ServiceTokenSupportedServiceRecords
	}
	return 0
}

func (x *SystemInfo_DB) GetServiceTokens() int64 {
	if x != nil {
		return x.ServiceTokens
	}
	return 0
}

func (x *SystemInfo_DB) GetConversationReplicationInfo() int64 {
	if x != nil {
		return x.ConversationReplicationInfo
	}
	return 0
}

func (x *SystemInfo_DB) GetMetadataEvents() int64 {
	if x != nil {
		return x.MetadataEvents
	}
	return 0
}

func (x *SystemInfo_DB) GetPushMemberToken() int64 {
	if x != nil {
		return x.PushMemberToken
	}
	return 0
}

func (x *SystemInfo_DB) GetAccountVerifiedCredentials() int64 {
	if x != nil {
		return x.AccountVerifiedCredentials
	}
	return 0
}

func (x *SystemInfo_DB) GetAccountDirectoryServiceRecord() int64 {
	if x != nil {
		return x.AccountDirectoryServiceRecord
	}
	return 0
}

func (x *SystemInfo_DB) GetPushDeviceToken() int64 {
	if x != nil {
		return x.PushDeviceToken
	}
	return 0
}

func (x *SystemInfo_DB) GetPushServerRecord() int64 {
	if x != nil {
		return x.PushServerRecord
	}
	return 0
}

func (x *SystemInfo_DB) GetPushLocalDeviceSharedToken() int64 {
	if x != nil {
		return x.PushLocalDeviceSharedToken
	}
	return 0
}

type ConversationJoin_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// optional passphase to decrypt the link
	Passphrase []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *ConversationJoin_Request) Reset() {
	*x = ConversationJoin_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationJoin_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationJoin_Request) ProtoMessage() {}

func (x *ConversationJoin_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationJoin_Request.ProtoReflect.Descriptor instead.
func (*ConversationJoin_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ConversationJoin_Request) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ConversationJoin_Request) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type ConversationJoin_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConversationJoin_Reply) Reset() {
	*x = ConversationJoin_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationJoin_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationJoin_Reply) ProtoMessage() {}

func (x *ConversationJoin_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationJoin_Reply.ProtoReflect.Descriptor instead.
func (*ConversationJoin_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{18, 1}
}

type DebugAuthServiceSetToken_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             *AuthExchangeResponse `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	AuthenticationUrl string                `protobuf:"bytes,2,opt,name=authentication_url,json=authenticationUrl,proto3" json:"authentication_url,omitempty"`
}

func (x *DebugAuthServiceSetToken_Request) Reset() {
	*x = DebugAuthServiceSetToken_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugAuthServiceSetToken_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugAuthServiceSetToken_Request) ProtoMessage() {}

func (x *DebugAuthServiceSetToken_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugAuthServiceSetToken_Request.ProtoReflect.Descriptor instead.
func (*DebugAuthServiceSetToken_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{19, 0}
}

func (x *DebugAuthServiceSetToken_Request) GetToken() *AuthExchangeResponse {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *DebugAuthServiceSetToken_Request) GetAuthenticationUrl() string {
	if x != nil {
		return x.AuthenticationUrl
	}
	return ""
}

type DebugAuthServiceSetToken_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DebugAuthServiceSetToken_Reply) Reset() {
	*x = DebugAuthServiceSetToken_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugAuthServiceSetToken_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugAuthServiceSetToken_Reply) ProtoMessage() {}

func (x *DebugAuthServiceSetToken_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugAuthServiceSetToken_Reply.ProtoReflect.Descriptor instead.
func (*DebugAuthServiceSetToken_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{19, 1}
}

type ServicesTokenList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServicesTokenList_Request) Reset() {
	*x = ServicesTokenList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesTokenList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesTokenList_Request) ProtoMessage() {}

func (x *ServicesTokenList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesTokenList_Request.ProtoReflect.Descriptor instead.
func (*ServicesTokenList_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{20, 0}
}

type ServicesTokenList_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *ServiceToken `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *ServicesTokenList_Reply) Reset() {
	*x = ServicesTokenList_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesTokenList_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesTokenList_Reply) ProtoMessage() {}

func (x *ServicesTokenList_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesTokenList_Reply.ProtoReflect.Descriptor instead.
func (*ServicesTokenList_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{20, 1}
}

func (x *ServicesTokenList_Reply) GetService() *ServiceToken {
	if x != nil {
		return x.Service
	}
	return nil
}

type AuthServiceCompleteFlow_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackUrl string `protobuf:"bytes,1,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *AuthServiceCompleteFlow_Request) Reset() {
	*x = AuthServiceCompleteFlow_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthServiceCompleteFlow_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceCompleteFlow_Request) ProtoMessage() {}

func (x *AuthServiceCompleteFlow_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceCompleteFlow_Request.ProtoReflect.Descriptor instead.
func (*AuthServiceCompleteFlow_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{21, 0}
}

func (x *AuthServiceCompleteFlow_Request) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

type AuthServiceCompleteFlow_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *AuthServiceCompleteFlow_Reply) Reset() {
	*x = AuthServiceCompleteFlow_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthServiceCompleteFlow_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceCompleteFlow_Reply) ProtoMessage() {}

func (x *AuthServiceCompleteFlow_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceCompleteFlow_Reply.ProtoReflect.Descriptor instead.
func (*AuthServiceCompleteFlow_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{21, 1}
}

func (x *AuthServiceCompleteFlow_Reply) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type AuthServiceInitFlow_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthUrl  string   `protobuf:"bytes,1,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	Services []string `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *AuthServiceInitFlow_Request) Reset() {
	*x = AuthServiceInitFlow_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthServiceInitFlow_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceInitFlow_Request) ProtoMessage() {}

func (x *AuthServiceInitFlow_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceInitFlow_Request.ProtoReflect.Descriptor instead.
func (*AuthServiceInitFlow_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{22, 0}
}

func (x *AuthServiceInitFlow_Request) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *AuthServiceInitFlow_Request) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

type AuthServiceInitFlow_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	SecureUrl bool   `protobuf:"varint,2,opt,name=secure_url,json=secureUrl,proto3" json:"secure_url,omitempty"`
}

func (x *AuthServiceInitFlow_Reply) Reset() {
	*x = AuthServiceInitFlow_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthServiceInitFlow_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceInitFlow_Reply) ProtoMessage() {}

func (x *AuthServiceInitFlow_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceInitFlow_Reply.ProtoReflect.Descriptor instead.
func (*AuthServiceInitFlow_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{22, 1}
}

func (x *AuthServiceInitFlow_Reply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AuthServiceInitFlow_Reply) GetSecureUrl() bool {
	if x != nil {
		return x.SecureUrl
	}
	return false
}

type StreamEvent_ConversationUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (x *StreamEvent_ConversationUpdated) Reset() {
	*x = StreamEvent_ConversationUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_ConversationUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_ConversationUpdated) ProtoMessage() {}

func (x *StreamEvent_ConversationUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_ConversationUpdated.ProtoReflect.Descriptor instead.
func (*StreamEvent_ConversationUpdated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 0}
}

func (x *StreamEvent_ConversationUpdated) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type StreamEvent_ConversationDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *StreamEvent_ConversationDeleted) Reset() {
	*x = StreamEvent_ConversationDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_ConversationDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_ConversationDeleted) ProtoMessage() {}

func (x *StreamEvent_ConversationDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_ConversationDeleted.ProtoReflect.Descriptor instead.
func (*StreamEvent_ConversationDeleted) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 1}
}

func (x *StreamEvent_ConversationDeleted) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type StreamEvent_InteractionUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
}

func (x *StreamEvent_InteractionUpdated) Reset() {
	*x = StreamEvent_InteractionUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_InteractionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_InteractionUpdated) ProtoMessage() {}

func (x *StreamEvent_InteractionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_InteractionUpdated.ProtoReflect.Descriptor instead.
func (*StreamEvent_InteractionUpdated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 2}
}

func (x *StreamEvent_InteractionUpdated) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

type StreamEvent_InteractionDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid                   string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
}

func (x *StreamEvent_InteractionDeleted) Reset() {
	*x = StreamEvent_InteractionDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_InteractionDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_InteractionDeleted) ProtoMessage() {}

func (x *StreamEvent_InteractionDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_InteractionDeleted.ProtoReflect.Descriptor instead.
func (*StreamEvent_InteractionDeleted) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 3}
}

func (x *StreamEvent_InteractionDeleted) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *StreamEvent_InteractionDeleted) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

type StreamEvent_ContactUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contact *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *StreamEvent_ContactUpdated) Reset() {
	*x = StreamEvent_ContactUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_ContactUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_ContactUpdated) ProtoMessage() {}

func (x *StreamEvent_ContactUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_ContactUpdated.ProtoReflect.Descriptor instead.
func (*StreamEvent_ContactUpdated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 4}
}

func (x *StreamEvent_ContactUpdated) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type StreamEvent_AccountUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *StreamEvent_AccountUpdated) Reset() {
	*x = StreamEvent_AccountUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_AccountUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_AccountUpdated) ProtoMessage() {}

func (x *StreamEvent_AccountUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_AccountUpdated.ProtoReflect.Descriptor instead.
func (*StreamEvent_AccountUpdated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 5}
}

func (x *StreamEvent_AccountUpdated) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type StreamEvent_MemberUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *StreamEvent_MemberUpdated) Reset() {
	*x = StreamEvent_MemberUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_MemberUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_MemberUpdated) ProtoMessage() {}

func (x *StreamEvent_MemberUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_MemberUpdated.ProtoReflect.Descriptor instead.
func (*StreamEvent_MemberUpdated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 6}
}

func (x *StreamEvent_MemberUpdated) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type StreamEvent_DeviceUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *StreamEvent_DeviceUpdated) Reset() {
	*x = StreamEvent_DeviceUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_DeviceUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_DeviceUpdated) ProtoMessage() {}

func (x *StreamEvent_DeviceUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_DeviceUpdated.ProtoReflect.Descriptor instead.
func (*StreamEvent_DeviceUpdated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 7}
}

func (x *StreamEvent_DeviceUpdated) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type StreamEvent_ListEnded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamEvent_ListEnded) Reset() {
	*x = StreamEvent_ListEnded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_ListEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_ListEnded) ProtoMessage() {}

func (x *StreamEvent_ListEnded) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_ListEnded.ProtoReflect.Descriptor instead.
func (*StreamEvent_ListEnded) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 8}
}

type StreamEvent_ConversationPartialLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationPk string         `protobuf:"bytes,1,opt,name=conversation_pk,json=conversationPk,proto3" json:"conversation_pk,omitempty"`
	Interactions   []*Interaction `protobuf:"bytes,2,rep,name=interactions,proto3" json:"interactions,omitempty"`
}

func (x *StreamEvent_ConversationPartialLoad) Reset() {
	*x = StreamEvent_ConversationPartialLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_ConversationPartialLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_ConversationPartialLoad) ProtoMessage() {}

func (x *StreamEvent_ConversationPartialLoad) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_ConversationPartialLoad.ProtoReflect.Descriptor instead.
func (*StreamEvent_ConversationPartialLoad) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 9}
}

func (x *StreamEvent_ConversationPartialLoad) GetConversationPk() string {
	if x != nil {
		return x.ConversationPk
	}
	return ""
}

func (x *StreamEvent_ConversationPartialLoad) GetInteractions() []*Interaction {
	if x != nil {
		return x.Interactions
	}
	return nil
}

type StreamEvent_Notified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    StreamEvent_Notified_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.StreamEvent_Notified_Type" json:"type,omitempty"`
	Title   string                    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Body    string                    `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Payload []byte                    `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *StreamEvent_Notified) Reset() {
	*x = StreamEvent_Notified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_Notified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_Notified) ProtoMessage() {}

func (x *StreamEvent_Notified) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_Notified.ProtoReflect.Descriptor instead.
func (*StreamEvent_Notified) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10}
}

func (x *StreamEvent_Notified) GetType() StreamEvent_Notified_Type {
	if x != nil {
		return x.Type
	}
	return StreamEvent_Notified_Unknown
}

func (x *StreamEvent_Notified) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StreamEvent_Notified) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *StreamEvent_Notified) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// status events
type StreamEvent_PeerStatusConnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId    string                                    `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Transport StreamEvent_PeerStatusConnected_Transport `protobuf:"varint,2,opt,name=transport,proto3,enum=berty.messenger.v1.StreamEvent_PeerStatusConnected_Transport" json:"transport,omitempty"`
}

func (x *StreamEvent_PeerStatusConnected) Reset() {
	*x = StreamEvent_PeerStatusConnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_PeerStatusConnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_PeerStatusConnected) ProtoMessage() {}

func (x *StreamEvent_PeerStatusConnected) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_PeerStatusConnected.ProtoReflect.Descriptor instead.
func (*StreamEvent_PeerStatusConnected) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 11}
}

func (x *StreamEvent_PeerStatusConnected) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *StreamEvent_PeerStatusConnected) GetTransport() StreamEvent_PeerStatusConnected_Transport {
	if x != nil {
		return x.Transport
	}
	return StreamEvent_PeerStatusConnected_Unknown
}

type StreamEvent_PeerStatusReconnecting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *StreamEvent_PeerStatusReconnecting) Reset() {
	*x = StreamEvent_PeerStatusReconnecting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_PeerStatusReconnecting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_PeerStatusReconnecting) ProtoMessage() {}

func (x *StreamEvent_PeerStatusReconnecting) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_PeerStatusReconnecting.ProtoReflect.Descriptor instead.
func (*StreamEvent_PeerStatusReconnecting) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 12}
}

func (x *StreamEvent_PeerStatusReconnecting) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type StreamEvent_PeerStatusDisconnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *StreamEvent_PeerStatusDisconnected) Reset() {
	*x = StreamEvent_PeerStatusDisconnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_PeerStatusDisconnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_PeerStatusDisconnected) ProtoMessage() {}

func (x *StreamEvent_PeerStatusDisconnected) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_PeerStatusDisconnected.ProtoReflect.Descriptor instead.
func (*StreamEvent_PeerStatusDisconnected) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 13}
}

func (x *StreamEvent_PeerStatusDisconnected) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type StreamEvent_PeerStatusGroupAssociated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId   string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	DevicePk string `protobuf:"bytes,2,opt,name=device_pk,json=devicePk,proto3" json:"device_pk,omitempty"`
	GroupPk  string `protobuf:"bytes,3,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
}

func (x *StreamEvent_PeerStatusGroupAssociated) Reset() {
	*x = StreamEvent_PeerStatusGroupAssociated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_PeerStatusGroupAssociated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_PeerStatusGroupAssociated) ProtoMessage() {}

func (x *StreamEvent_PeerStatusGroupAssociated) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_PeerStatusGroupAssociated.ProtoReflect.Descriptor instead.
func (*StreamEvent_PeerStatusGroupAssociated) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 14}
}

func (x *StreamEvent_PeerStatusGroupAssociated) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *StreamEvent_PeerStatusGroupAssociated) GetDevicePk() string {
	if x != nil {
		return x.DevicePk
	}
	return ""
}

func (x *StreamEvent_PeerStatusGroupAssociated) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

type StreamEvent_ServiceTokenAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *ServiceToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *StreamEvent_ServiceTokenAdded) Reset() {
	*x = StreamEvent_ServiceTokenAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_ServiceTokenAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_ServiceTokenAdded) ProtoMessage() {}

func (x *StreamEvent_ServiceTokenAdded) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_ServiceTokenAdded.ProtoReflect.Descriptor instead.
func (*StreamEvent_ServiceTokenAdded) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 15}
}

func (x *StreamEvent_ServiceTokenAdded) GetToken() *ServiceToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type StreamEvent_Notified_Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamEvent_Notified_Basic) Reset() {
	*x = StreamEvent_Notified_Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_Notified_Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_Notified_Basic) ProtoMessage() {}

func (x *StreamEvent_Notified_Basic) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_Notified_Basic.ProtoReflect.Descriptor instead.
func (*StreamEvent_Notified_Basic) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10, 0}
}

type StreamEvent_Notified_MessageReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction  *Interaction  `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Conversation *Conversation `protobuf:"bytes,2,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Contact      *Contact      `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *StreamEvent_Notified_MessageReceived) Reset() {
	*x = StreamEvent_Notified_MessageReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_Notified_MessageReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_Notified_MessageReceived) ProtoMessage() {}

func (x *StreamEvent_Notified_MessageReceived) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_Notified_MessageReceived.ProtoReflect.Descriptor instead.
func (*StreamEvent_Notified_MessageReceived) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10, 1}
}

func (x *StreamEvent_Notified_MessageReceived) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *StreamEvent_Notified_MessageReceived) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *StreamEvent_Notified_MessageReceived) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type StreamEvent_Notified_ContactRequestSent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contact *Contact `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *StreamEvent_Notified_ContactRequestSent) Reset() {
	*x = StreamEvent_Notified_ContactRequestSent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_Notified_ContactRequestSent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_Notified_ContactRequestSent) ProtoMessage() {}

func (x *StreamEvent_Notified_ContactRequestSent) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_Notified_ContactRequestSent.ProtoReflect.Descriptor instead.
func (*StreamEvent_Notified_ContactRequestSent) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10, 2}
}

func (x *StreamEvent_Notified_ContactRequestSent) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type StreamEvent_Notified_ContactRequestReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contact *Contact `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *StreamEvent_Notified_ContactRequestReceived) Reset() {
	*x = StreamEvent_Notified_ContactRequestReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_Notified_ContactRequestReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_Notified_ContactRequestReceived) ProtoMessage() {}

func (x *StreamEvent_Notified_ContactRequestReceived) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_Notified_ContactRequestReceived.ProtoReflect.Descriptor instead.
func (*StreamEvent_Notified_ContactRequestReceived) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10, 3}
}

func (x *StreamEvent_Notified_ContactRequestReceived) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type StreamEvent_Notified_GroupInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation *Conversation `protobuf:"bytes,2,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Contact      *Contact      `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *StreamEvent_Notified_GroupInvitation) Reset() {
	*x = StreamEvent_Notified_GroupInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent_Notified_GroupInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent_Notified_GroupInvitation) ProtoMessage() {}

func (x *StreamEvent_Notified_GroupInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent_Notified_GroupInvitation.ProtoReflect.Descriptor instead.
func (*StreamEvent_Notified_GroupInvitation) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{39, 10, 4}
}

func (x *StreamEvent_Notified_GroupInvitation) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *StreamEvent_Notified_GroupInvitation) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type ConversationStream_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ConversationStream_Request) Reset() {
	*x = ConversationStream_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationStream_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationStream_Request) ProtoMessage() {}

func (x *ConversationStream_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationStream_Request.ProtoReflect.Descriptor instead.
func (*ConversationStream_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{40, 0}
}

func (x *ConversationStream_Request) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ConversationStream_Request) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ConversationStream_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (x *ConversationStream_Reply) Reset() {
	*x = ConversationStream_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationStream_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationStream_Reply) ProtoMessage() {}

func (x *ConversationStream_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationStream_Reply.ProtoReflect.Descriptor instead.
func (*ConversationStream_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{40, 1}
}

func (x *ConversationStream_Reply) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type ConversationCreate_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName      string   `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ContactsToInvite []string `protobuf:"bytes,2,rep,name=contacts_to_invite,json=contactsToInvite,proto3" json:"contacts_to_invite,omitempty"` // public keys
}

func (x *ConversationCreate_Request) Reset() {
	*x = ConversationCreate_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCreate_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCreate_Request) ProtoMessage() {}

func (x *ConversationCreate_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCreate_Request.ProtoReflect.Descriptor instead.
func (*ConversationCreate_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{41, 0}
}

func (x *ConversationCreate_Request) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ConversationCreate_Request) GetContactsToInvite() []string {
	if x != nil {
		return x.ContactsToInvite
	}
	return nil
}

type ConversationCreate_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ConversationCreate_Reply) Reset() {
	*x = ConversationCreate_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCreate_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCreate_Reply) ProtoMessage() {}

func (x *ConversationCreate_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCreate_Reply.ProtoReflect.Descriptor instead.
func (*ConversationCreate_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{41, 1}
}

func (x *ConversationCreate_Reply) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type AccountGet_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountGet_Request) Reset() {
	*x = AccountGet_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGet_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGet_Request) ProtoMessage() {}

func (x *AccountGet_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGet_Request.ProtoReflect.Descriptor instead.
func (*AccountGet_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{42, 0}
}

type AccountGet_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountGet_Reply) Reset() {
	*x = AccountGet_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGet_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGet_Reply) ProtoMessage() {}

func (x *AccountGet_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGet_Reply.ProtoReflect.Descriptor instead.
func (*AccountGet_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{42, 1}
}

func (x *AccountGet_Reply) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type EventStream_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShallowAmount int32 `protobuf:"varint,1,opt,name=shallow_amount,json=shallowAmount,proto3" json:"shallow_amount,omitempty"`
}

func (x *EventStream_Request) Reset() {
	*x = EventStream_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStream_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStream_Request) ProtoMessage() {}

func (x *EventStream_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStream_Request.ProtoReflect.Descriptor instead.
func (*EventStream_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{43, 0}
}

func (x *EventStream_Request) GetShallowAmount() int32 {
	if x != nil {
		return x.ShallowAmount
	}
	return 0
}

type EventStream_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *StreamEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *EventStream_Reply) Reset() {
	*x = EventStream_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStream_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStream_Reply) ProtoMessage() {}

func (x *EventStream_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStream_Reply.ProtoReflect.Descriptor instead.
func (*EventStream_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{43, 1}
}

func (x *EventStream_Reply) GetEvent() *StreamEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type AccountUpdate_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *AccountUpdate_Request) Reset() {
	*x = AccountUpdate_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_Request) ProtoMessage() {}

func (x *AccountUpdate_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_Request.ProtoReflect.Descriptor instead.
func (*AccountUpdate_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{44, 0}
}

func (x *AccountUpdate_Request) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type AccountUpdate_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountUpdate_Reply) Reset() {
	*x = AccountUpdate_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_Reply) ProtoMessage() {}

func (x *AccountUpdate_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_Reply.ProtoReflect.Descriptor instead.
func (*AccountUpdate_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{44, 1}
}

type AccountPushConfigure_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MutedUntil             int64 `protobuf:"varint,1,opt,name=muted_until,json=mutedUntil,proto3" json:"muted_until,omitempty"`
	Unmute                 bool  `protobuf:"varint,2,opt,name=unmute,proto3" json:"unmute,omitempty"`
	MuteForever            bool  `protobuf:"varint,3,opt,name=mute_forever,json=muteForever,proto3" json:"mute_forever,omitempty"`
	HideInAppNotifications bool  `protobuf:"varint,4,opt,name=hide_in_app_notifications,json=hideInAppNotifications,proto3" json:"hide_in_app_notifications,omitempty"`
	HidePushPreviews       bool  `protobuf:"varint,5,opt,name=hide_push_previews,json=hidePushPreviews,proto3" json:"hide_push_previews,omitempty"`
	ShowInAppNotifications bool  `protobuf:"varint,6,opt,name=show_in_app_notifications,json=showInAppNotifications,proto3" json:"show_in_app_notifications,omitempty"`
	ShowPushPreviews       bool  `protobuf:"varint,7,opt,name=show_push_previews,json=showPushPreviews,proto3" json:"show_push_previews,omitempty"`
}

func (x *AccountPushConfigure_Request) Reset() {
	*x = AccountPushConfigure_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPushConfigure_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPushConfigure_Request) ProtoMessage() {}

func (x *AccountPushConfigure_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPushConfigure_Request.ProtoReflect.Descriptor instead.
func (*AccountPushConfigure_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{45, 0}
}

func (x *AccountPushConfigure_Request) GetMutedUntil() int64 {
	if x != nil {
		return x.MutedUntil
	}
	return 0
}

func (x *AccountPushConfigure_Request) GetUnmute() bool {
	if x != nil {
		return x.Unmute
	}
	return false
}

func (x *AccountPushConfigure_Request) GetMuteForever() bool {
	if x != nil {
		return x.MuteForever
	}
	return false
}

func (x *AccountPushConfigure_Request) GetHideInAppNotifications() bool {
	if x != nil {
		return x.HideInAppNotifications
	}
	return false
}

func (x *AccountPushConfigure_Request) GetHidePushPreviews() bool {
	if x != nil {
		return x.HidePushPreviews
	}
	return false
}

func (x *AccountPushConfigure_Request) GetShowInAppNotifications() bool {
	if x != nil {
		return x.ShowInAppNotifications
	}
	return false
}

func (x *AccountPushConfigure_Request) GetShowPushPreviews() bool {
	if x != nil {
		return x.ShowPushPreviews
	}
	return false
}

type AccountPushConfigure_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountPushConfigure_Reply) Reset() {
	*x = AccountPushConfigure_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPushConfigure_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPushConfigure_Reply) ProtoMessage() {}

func (x *AccountPushConfigure_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPushConfigure_Reply.ProtoReflect.Descriptor instead.
func (*AccountPushConfigure_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{45, 1}
}

type ContactRequest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// optional passphase to decrypt the link
	Passphrase []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *ContactRequest_Request) Reset() {
	*x = ContactRequest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactRequest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactRequest_Request) ProtoMessage() {}

func (x *ContactRequest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactRequest_Request.ProtoReflect.Descriptor instead.
func (*ContactRequest_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{46, 0}
}

func (x *ContactRequest_Request) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ContactRequest_Request) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

type ContactRequest_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContactRequest_Reply) Reset() {
	*x = ContactRequest_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactRequest_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactRequest_Reply) ProtoMessage() {}

func (x *ContactRequest_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactRequest_Reply.ProtoReflect.Descriptor instead.
func (*ContactRequest_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{46, 1}
}

type ContactAccept_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ContactAccept_Request) Reset() {
	*x = ContactAccept_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactAccept_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactAccept_Request) ProtoMessage() {}

func (x *ContactAccept_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactAccept_Request.ProtoReflect.Descriptor instead.
func (*ContactAccept_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{47, 0}
}

func (x *ContactAccept_Request) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type ContactAccept_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContactAccept_Reply) Reset() {
	*x = ContactAccept_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactAccept_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactAccept_Reply) ProtoMessage() {}

func (x *ContactAccept_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactAccept_Reply.ProtoReflect.Descriptor instead.
func (*ContactAccept_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{47, 1}
}

type Interact_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                  AppMessage_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.AppMessage_Type" json:"type,omitempty"`
	Payload               []byte          `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	ConversationPublicKey string          `protobuf:"bytes,3,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
	TargetCid             string          `protobuf:"bytes,5,opt,name=target_cid,json=targetCid,proto3" json:"target_cid,omitempty"`
	Metadata              bool            `protobuf:"varint,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Interact_Request) Reset() {
	*x = Interact_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interact_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interact_Request) ProtoMessage() {}

func (x *Interact_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interact_Request.ProtoReflect.Descriptor instead.
func (*Interact_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{48, 0}
}

func (x *Interact_Request) GetType() AppMessage_Type {
	if x != nil {
		return x.Type
	}
	return AppMessage_Undefined
}

func (x *Interact_Request) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Interact_Request) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

func (x *Interact_Request) GetTargetCid() string {
	if x != nil {
		return x.TargetCid
	}
	return ""
}

func (x *Interact_Request) GetMetadata() bool {
	if x != nil {
		return x.Metadata
	}
	return false
}

type Interact_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *Interact_Reply) Reset() {
	*x = Interact_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interact_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interact_Reply) ProtoMessage() {}

func (x *Interact_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interact_Reply.ProtoReflect.Descriptor instead.
func (*Interact_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{48, 1}
}

func (x *Interact_Reply) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ReplicationServiceRegisterGroup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId               string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
}

func (x *ReplicationServiceRegisterGroup_Request) Reset() {
	*x = ReplicationServiceRegisterGroup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationServiceRegisterGroup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationServiceRegisterGroup_Request) ProtoMessage() {}

func (x *ReplicationServiceRegisterGroup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationServiceRegisterGroup_Request.ProtoReflect.Descriptor instead.
func (*ReplicationServiceRegisterGroup_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{49, 0}
}

func (x *ReplicationServiceRegisterGroup_Request) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ReplicationServiceRegisterGroup_Request) GetConversationPublicKey() string {
	if x != nil {
		return x.ConversationPublicKey
	}
	return ""
}

type ReplicationServiceRegisterGroup_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplicationServiceRegisterGroup_Reply) Reset() {
	*x = ReplicationServiceRegisterGroup_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationServiceRegisterGroup_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationServiceRegisterGroup_Reply) ProtoMessage() {}

func (x *ReplicationServiceRegisterGroup_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationServiceRegisterGroup_Reply.ProtoReflect.Descriptor instead.
func (*ReplicationServiceRegisterGroup_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{49, 1}
}

type ReplicationSetAutoEnable_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ReplicationSetAutoEnable_Request) Reset() {
	*x = ReplicationSetAutoEnable_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationSetAutoEnable_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationSetAutoEnable_Request) ProtoMessage() {}

func (x *ReplicationSetAutoEnable_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationSetAutoEnable_Request.ProtoReflect.Descriptor instead.
func (*ReplicationSetAutoEnable_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{50, 0}
}

func (x *ReplicationSetAutoEnable_Request) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ReplicationSetAutoEnable_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplicationSetAutoEnable_Reply) Reset() {
	*x = ReplicationSetAutoEnable_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationSetAutoEnable_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationSetAutoEnable_Reply) ProtoMessage() {}

func (x *ReplicationSetAutoEnable_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationSetAutoEnable_Reply.ProtoReflect.Descriptor instead.
func (*ReplicationSetAutoEnable_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{50, 1}
}

type BannerQuote_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Random bool `protobuf:"varint,1,opt,name=random,proto3" json:"random,omitempty"`
}

func (x *BannerQuote_Request) Reset() {
	*x = BannerQuote_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerQuote_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerQuote_Request) ProtoMessage() {}

func (x *BannerQuote_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerQuote_Request.ProtoReflect.Descriptor instead.
func (*BannerQuote_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{51, 0}
}

func (x *BannerQuote_Request) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

type BannerQuote_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quote  string `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *BannerQuote_Reply) Reset() {
	*x = BannerQuote_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerQuote_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerQuote_Reply) ProtoMessage() {}

func (x *BannerQuote_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerQuote_Reply.ProtoReflect.Descriptor instead.
func (*BannerQuote_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{51, 1}
}

func (x *BannerQuote_Reply) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *BannerQuote_Reply) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type InstanceExportData_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceExportData_Request) Reset() {
	*x = InstanceExportData_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceExportData_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceExportData_Request) ProtoMessage() {}

func (x *InstanceExportData_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceExportData_Request.ProtoReflect.Descriptor instead.
func (*InstanceExportData_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{52, 0}
}

type InstanceExportData_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportedData []byte `protobuf:"bytes,1,opt,name=exported_data,json=exportedData,proto3" json:"exported_data,omitempty"`
}

func (x *InstanceExportData_Reply) Reset() {
	*x = InstanceExportData_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceExportData_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceExportData_Reply) ProtoMessage() {}

func (x *InstanceExportData_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceExportData_Reply.ProtoReflect.Descriptor instead.
func (*InstanceExportData_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{52, 1}
}

func (x *InstanceExportData_Reply) GetExportedData() []byte {
	if x != nil {
		return x.ExportedData
	}
	return nil
}

type MessageSearch_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query          string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	BeforeDate     int64  `protobuf:"varint,2,opt,name=before_date,json=beforeDate,proto3" json:"before_date,omitempty"`
	AfterDate      int64  `protobuf:"varint,3,opt,name=after_date,json=afterDate,proto3" json:"after_date,omitempty"`
	Limit          int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	RefCid         string `protobuf:"bytes,5,opt,name=ref_cid,json=refCid,proto3" json:"ref_cid,omitempty"`
	OldestToNewest bool   `protobuf:"varint,6,opt,name=oldest_to_newest,json=oldestToNewest,proto3" json:"oldest_to_newest,omitempty"`
}

func (x *MessageSearch_Request) Reset() {
	*x = MessageSearch_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSearch_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSearch_Request) ProtoMessage() {}

func (x *MessageSearch_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSearch_Request.ProtoReflect.Descriptor instead.
func (*MessageSearch_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{55, 0}
}

func (x *MessageSearch_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *MessageSearch_Request) GetBeforeDate() int64 {
	if x != nil {
		return x.BeforeDate
	}
	return 0
}

func (x *MessageSearch_Request) GetAfterDate() int64 {
	if x != nil {
		return x.AfterDate
	}
	return 0
}

func (x *MessageSearch_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MessageSearch_Request) GetRefCid() string {
	if x != nil {
		return x.RefCid
	}
	return ""
}

func (x *MessageSearch_Request) GetOldestToNewest() bool {
	if x != nil {
		return x.OldestToNewest
	}
	return false
}

type MessageSearch_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Interaction `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *MessageSearch_Reply) Reset() {
	*x = MessageSearch_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSearch_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSearch_Reply) ProtoMessage() {}

func (x *MessageSearch_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSearch_Reply.ProtoReflect.Descriptor instead.
func (*MessageSearch_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{55, 1}
}

func (x *MessageSearch_Reply) GetResults() []*Interaction {
	if x != nil {
		return x.Results
	}
	return nil
}

type TyberHostSearch_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TyberHostSearch_Request) Reset() {
	*x = TyberHostSearch_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TyberHostSearch_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TyberHostSearch_Request) ProtoMessage() {}

func (x *TyberHostSearch_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TyberHostSearch_Request.ProtoReflect.Descriptor instead.
func (*TyberHostSearch_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{56, 0}
}

type TyberHostSearch_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ipv4     []string `protobuf:"bytes,2,rep,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6     []string `protobuf:"bytes,3,rep,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *TyberHostSearch_Reply) Reset() {
	*x = TyberHostSearch_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TyberHostSearch_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TyberHostSearch_Reply) ProtoMessage() {}

func (x *TyberHostSearch_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TyberHostSearch_Reply.ProtoReflect.Descriptor instead.
func (*TyberHostSearch_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{56, 1}
}

func (x *TyberHostSearch_Reply) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *TyberHostSearch_Reply) GetIpv4() []string {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *TyberHostSearch_Reply) GetIpv6() []string {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

type TyberHostAttach_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *TyberHostAttach_Request) Reset() {
	*x = TyberHostAttach_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TyberHostAttach_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TyberHostAttach_Request) ProtoMessage() {}

func (x *TyberHostAttach_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TyberHostAttach_Request.ProtoReflect.Descriptor instead.
func (*TyberHostAttach_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{57, 0}
}

func (x *TyberHostAttach_Request) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type TyberHostAttach_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *TyberHostAttach_Reply) Reset() {
	*x = TyberHostAttach_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TyberHostAttach_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TyberHostAttach_Reply) ProtoMessage() {}

func (x *TyberHostAttach_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TyberHostAttach_Reply.ProtoReflect.Descriptor instead.
func (*TyberHostAttach_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{57, 1}
}

func (x *TyberHostAttach_Reply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type PushSetDeviceToken_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *pushtypes.PushServiceReceiver `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *PushSetDeviceToken_Request) Reset() {
	*x = PushSetDeviceToken_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetDeviceToken_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetDeviceToken_Request) ProtoMessage() {}

func (x *PushSetDeviceToken_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetDeviceToken_Request.ProtoReflect.Descriptor instead.
func (*PushSetDeviceToken_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{58, 0}
}

func (x *PushSetDeviceToken_Request) GetReceiver() *pushtypes.PushServiceReceiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

type PushSetDeviceToken_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSetDeviceToken_Reply) Reset() {
	*x = PushSetDeviceToken_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetDeviceToken_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetDeviceToken_Reply) ProtoMessage() {}

func (x *PushSetDeviceToken_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetDeviceToken_Reply.ProtoReflect.Descriptor instead.
func (*PushSetDeviceToken_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{58, 1}
}

type PushSetAutoShare_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PushSetAutoShare_Request) Reset() {
	*x = PushSetAutoShare_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetAutoShare_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetAutoShare_Request) ProtoMessage() {}

func (x *PushSetAutoShare_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetAutoShare_Request.ProtoReflect.Descriptor instead.
func (*PushSetAutoShare_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{59, 0}
}

func (x *PushSetAutoShare_Request) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type PushSetAutoShare_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSetAutoShare_Reply) Reset() {
	*x = PushSetAutoShare_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetAutoShare_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetAutoShare_Reply) ProtoMessage() {}

func (x *PushSetAutoShare_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetAutoShare_Reply.ProtoReflect.Descriptor instead.
func (*PushSetAutoShare_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{59, 1}
}

type PushReceive_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *PushReceive_Request) Reset() {
	*x = PushReceive_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReceive_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReceive_Request) ProtoMessage() {}

func (x *PushReceive_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReceive_Request.ProtoReflect.Descriptor instead.
func (*PushReceive_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{61, 0}
}

func (x *PushReceive_Request) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PushReceive_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PushReceivedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PushReceive_Reply) Reset() {
	*x = PushReceive_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReceive_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReceive_Reply) ProtoMessage() {}

func (x *PushReceive_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReceive_Reply.ProtoReflect.Descriptor instead.
func (*PushReceive_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{61, 1}
}

func (x *PushReceive_Reply) GetData() *PushReceivedData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListMemberDevices_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationPk string `protobuf:"bytes,1,opt,name=conversation_pk,json=conversationPk,proto3" json:"conversation_pk,omitempty"`
	MemberPk       string `protobuf:"bytes,2,opt,name=member_pk,json=memberPk,proto3" json:"member_pk,omitempty"`
}

func (x *ListMemberDevices_Request) Reset() {
	*x = ListMemberDevices_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberDevices_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberDevices_Request) ProtoMessage() {}

func (x *ListMemberDevices_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberDevices_Request.ProtoReflect.Descriptor instead.
func (*ListMemberDevices_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{62, 0}
}

func (x *ListMemberDevices_Request) GetConversationPk() string {
	if x != nil {
		return x.ConversationPk
	}
	return ""
}

func (x *ListMemberDevices_Request) GetMemberPk() string {
	if x != nil {
		return x.MemberPk
	}
	return ""
}

type ListMemberDevices_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *ListMemberDevices_Reply) Reset() {
	*x = ListMemberDevices_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberDevices_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberDevices_Reply) ProtoMessage() {}

func (x *ListMemberDevices_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberDevices_Reply.ProtoReflect.Descriptor instead.
func (*ListMemberDevices_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{62, 1}
}

func (x *ListMemberDevices_Reply) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type PushShareTokenForConversation_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationPk string `protobuf:"bytes,1,opt,name=conversation_pk,json=conversationPk,proto3" json:"conversation_pk,omitempty"`
}

func (x *PushShareTokenForConversation_Request) Reset() {
	*x = PushShareTokenForConversation_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushShareTokenForConversation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushShareTokenForConversation_Request) ProtoMessage() {}

func (x *PushShareTokenForConversation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushShareTokenForConversation_Request.ProtoReflect.Descriptor instead.
func (*PushShareTokenForConversation_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{63, 0}
}

func (x *PushShareTokenForConversation_Request) GetConversationPk() string {
	if x != nil {
		return x.ConversationPk
	}
	return ""
}

type PushShareTokenForConversation_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushShareTokenForConversation_Reply) Reset() {
	*x = PushShareTokenForConversation_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushShareTokenForConversation_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushShareTokenForConversation_Reply) ProtoMessage() {}

func (x *PushShareTokenForConversation_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushShareTokenForConversation_Reply.ProtoReflect.Descriptor instead.
func (*PushShareTokenForConversation_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{63, 1}
}

type PushTokenSharedForConversation_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationPk string `protobuf:"bytes,1,opt,name=conversation_pk,json=conversationPk,proto3" json:"conversation_pk,omitempty"`
}

func (x *PushTokenSharedForConversation_Request) Reset() {
	*x = PushTokenSharedForConversation_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTokenSharedForConversation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTokenSharedForConversation_Request) ProtoMessage() {}

func (x *PushTokenSharedForConversation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTokenSharedForConversation_Request.ProtoReflect.Descriptor instead.
func (*PushTokenSharedForConversation_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{64, 0}
}

func (x *PushTokenSharedForConversation_Request) GetConversationPk() string {
	if x != nil {
		return x.ConversationPk
	}
	return ""
}

type PushTokenSharedForConversation_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *PushMemberToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PushTokenSharedForConversation_Reply) Reset() {
	*x = PushTokenSharedForConversation_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTokenSharedForConversation_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTokenSharedForConversation_Reply) ProtoMessage() {}

func (x *PushTokenSharedForConversation_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTokenSharedForConversation_Reply.ProtoReflect.Descriptor instead.
func (*PushTokenSharedForConversation_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{64, 1}
}

func (x *PushTokenSharedForConversation_Reply) GetToken() *PushMemberToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type DirectoryServiceRegister_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	ProofIssuer    string `protobuf:"bytes,2,opt,name=proof_issuer,json=proofIssuer,proto3" json:"proof_issuer,omitempty"`
	ServerAddr     string `protobuf:"bytes,3,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	ExpirationDate int64  `protobuf:"varint,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *DirectoryServiceRegister_Request) Reset() {
	*x = DirectoryServiceRegister_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceRegister_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceRegister_Request) ProtoMessage() {}

func (x *DirectoryServiceRegister_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceRegister_Request.ProtoReflect.Descriptor instead.
func (*DirectoryServiceRegister_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{65, 0}
}

func (x *DirectoryServiceRegister_Request) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *DirectoryServiceRegister_Request) GetProofIssuer() string {
	if x != nil {
		return x.ProofIssuer
	}
	return ""
}

func (x *DirectoryServiceRegister_Request) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *DirectoryServiceRegister_Request) GetExpirationDate() int64 {
	if x != nil {
		return x.ExpirationDate
	}
	return 0
}

type DirectoryServiceRegister_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryRecordToken string `protobuf:"bytes,1,opt,name=directory_record_token,json=directoryRecordToken,proto3" json:"directory_record_token,omitempty"`
}

func (x *DirectoryServiceRegister_Reply) Reset() {
	*x = DirectoryServiceRegister_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceRegister_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceRegister_Reply) ProtoMessage() {}

func (x *DirectoryServiceRegister_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceRegister_Reply.ProtoReflect.Descriptor instead.
func (*DirectoryServiceRegister_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{65, 1}
}

func (x *DirectoryServiceRegister_Reply) GetDirectoryRecordToken() string {
	if x != nil {
		return x.DirectoryRecordToken
	}
	return ""
}

type DirectoryServiceUnregister_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerAddr           string `protobuf:"bytes,1,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	DirectoryRecordToken string `protobuf:"bytes,2,opt,name=directory_record_token,json=directoryRecordToken,proto3" json:"directory_record_token,omitempty"`
}

func (x *DirectoryServiceUnregister_Request) Reset() {
	*x = DirectoryServiceUnregister_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceUnregister_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceUnregister_Request) ProtoMessage() {}

func (x *DirectoryServiceUnregister_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceUnregister_Request.ProtoReflect.Descriptor instead.
func (*DirectoryServiceUnregister_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{66, 0}
}

func (x *DirectoryServiceUnregister_Request) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *DirectoryServiceUnregister_Request) GetDirectoryRecordToken() string {
	if x != nil {
		return x.DirectoryRecordToken
	}
	return ""
}

type DirectoryServiceUnregister_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DirectoryServiceUnregister_Reply) Reset() {
	*x = DirectoryServiceUnregister_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceUnregister_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceUnregister_Reply) ProtoMessage() {}

func (x *DirectoryServiceUnregister_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceUnregister_Reply.ProtoReflect.Descriptor instead.
func (*DirectoryServiceUnregister_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{66, 1}
}

type DirectoryServiceQuery_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerAddr  string   `protobuf:"bytes,1,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	Identifiers []string `protobuf:"bytes,2,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *DirectoryServiceQuery_Request) Reset() {
	*x = DirectoryServiceQuery_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceQuery_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceQuery_Request) ProtoMessage() {}

func (x *DirectoryServiceQuery_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceQuery_Request.ProtoReflect.Descriptor instead.
func (*DirectoryServiceQuery_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{67, 0}
}

func (x *DirectoryServiceQuery_Request) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *DirectoryServiceQuery_Request) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type DirectoryServiceQuery_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryIdentifier string `protobuf:"bytes,1,opt,name=directory_identifier,json=directoryIdentifier,proto3" json:"directory_identifier,omitempty"`
	ExpiresAt           int64  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	AccountUri          string `protobuf:"bytes,3,opt,name=account_uri,json=accountUri,proto3" json:"account_uri,omitempty"`
	VerifiedCredential  []byte `protobuf:"bytes,4,opt,name=verified_credential,json=verifiedCredential,proto3" json:"verified_credential,omitempty"`
}

func (x *DirectoryServiceQuery_Reply) Reset() {
	*x = DirectoryServiceQuery_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryServiceQuery_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryServiceQuery_Reply) ProtoMessage() {}

func (x *DirectoryServiceQuery_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryServiceQuery_Reply.ProtoReflect.Descriptor instead.
func (*DirectoryServiceQuery_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{67, 1}
}

func (x *DirectoryServiceQuery_Reply) GetDirectoryIdentifier() string {
	if x != nil {
		return x.DirectoryIdentifier
	}
	return ""
}

func (x *DirectoryServiceQuery_Reply) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *DirectoryServiceQuery_Reply) GetAccountUri() string {
	if x != nil {
		return x.AccountUri
	}
	return ""
}

func (x *DirectoryServiceQuery_Reply) GetVerifiedCredential() []byte {
	if x != nil {
		return x.VerifiedCredential
	}
	return nil
}

type PushSend_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid          []byte               `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	GroupPk      string               `protobuf:"bytes,2,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	GroupMembers []*MemberWithDevices `protobuf:"bytes,3,rep,name=group_members,json=groupMembers,proto3" json:"group_members,omitempty"`
}

func (x *PushSend_Request) Reset() {
	*x = PushSend_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSend_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSend_Request) ProtoMessage() {}

func (x *PushSend_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSend_Request.ProtoReflect.Descriptor instead.
func (*PushSend_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{73, 0}
}

func (x *PushSend_Request) GetCid() []byte {
	if x != nil {
		return x.Cid
	}
	return nil
}

func (x *PushSend_Request) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

func (x *PushSend_Request) GetGroupMembers() []*MemberWithDevices {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

type PushSend_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMembers []*MemberWithDevices `protobuf:"bytes,1,rep,name=group_members,json=groupMembers,proto3" json:"group_members,omitempty"`
}

func (x *PushSend_Reply) Reset() {
	*x = PushSend_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSend_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSend_Reply) ProtoMessage() {}

func (x *PushSend_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSend_Reply.ProtoReflect.Descriptor instead.
func (*PushSend_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{73, 1}
}

func (x *PushSend_Reply) GetGroupMembers() []*MemberWithDevices {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

type PushShareToken_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevicePk string                         `protobuf:"bytes,1,opt,name=device_pk,json=devicePk,proto3" json:"device_pk,omitempty"`
	GroupPk  string                         `protobuf:"bytes,2,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	Server   *PushServer                    `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	Receiver *pushtypes.PushServiceReceiver `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *PushShareToken_Request) Reset() {
	*x = PushShareToken_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushShareToken_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushShareToken_Request) ProtoMessage() {}

func (x *PushShareToken_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushShareToken_Request.ProtoReflect.Descriptor instead.
func (*PushShareToken_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{74, 0}
}

func (x *PushShareToken_Request) GetDevicePk() string {
	if x != nil {
		return x.DevicePk
	}
	return ""
}

func (x *PushShareToken_Request) GetGroupPk() string {
	if x != nil {
		return x.GroupPk
	}
	return ""
}

func (x *PushShareToken_Request) GetServer() *PushServer {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *PushShareToken_Request) GetReceiver() *pushtypes.PushServiceReceiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

type PushShareToken_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushShareToken_Reply) Reset() {
	*x = PushShareToken_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushShareToken_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushShareToken_Reply) ProtoMessage() {}

func (x *PushShareToken_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushShareToken_Reply.ProtoReflect.Descriptor instead.
func (*PushShareToken_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{74, 1}
}

type PushSetServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *PushServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *PushSetServer_Request) Reset() {
	*x = PushSetServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetServer_Request) ProtoMessage() {}

func (x *PushSetServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetServer_Request.ProtoReflect.Descriptor instead.
func (*PushSetServer_Request) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{75, 0}
}

func (x *PushSetServer_Request) GetServer() *PushServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type PushSetServer_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSetServer_Reply) Reset() {
	*x = PushSetServer_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messengertypes_messengertypes_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSetServer_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSetServer_Reply) ProtoMessage() {}

func (x *PushSetServer_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_messengertypes_messengertypes_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSetServer_Reply.ProtoReflect.Descriptor instead.
func (*PushSetServer_Reply) Descriptor() ([]byte, []int) {
	return file_messengertypes_messengertypes_proto_rawDescGZIP(), []int{75, 1}
}

var File_messengertypes_messengertypes_proto protoreflect.FileDescriptor

var file_messengertypes_messengertypes_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x70, 0x75, 0x73, 0x68, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x70,
	0x75, 0x73, 0x68, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x1c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x65, 0x66, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x66, 0x43, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6b, 0x12, 0x28,
	0x0a, 0x10, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x77, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x4e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x62,
	0x75, 0x6c, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x42, 0x75, 0x6c,
	0x6b, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x41, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x1a, 0x24, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x6b, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x1a,
	0x24, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x6b, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x72,
	0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x61, 0x64, 0x1a, 0x55, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x74, 0x65, 0x1a, 0x80, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6b, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d,
	0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x08, 0x45, 0x63, 0x68, 0x6f, 0x54, 0x65, 0x73, 0x74,
	0x1a, 0x58, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x63, 0x68, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x1b, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x22, 0x71, 0x0a, 0x0e, 0x45, 0x63, 0x68, 0x6f, 0x44,
	0x75, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x1b, 0x0a,
	0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x18, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x1a, 0x62, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x1a, 0x76, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62,
	0x55, 0x72, 0x6c, 0x22, 0xd2, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x43, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x76, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72,
	0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x22, 0x66, 0x0a, 0x17, 0x44, 0x65, 0x76, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x72, 0x74,
	0x79, 0x49, 0x44, 0x1a, 0x42, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x37, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67,
	0x73, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x0a, 0x05,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x3d, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x1a, 0x3a, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0xcc, 0x08, 0x0a, 0x09, 0x42, 0x65, 0x72, 0x74, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x36, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e,
	0x6b, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x08,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x07, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x62, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x59, 0x0a, 0x11, 0x62, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x42, 0x65, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x52,
	0x0f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x12, 0x45, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x09, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x1a, 0x94, 0x04, 0x0a, 0x09, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x12, 0x43, 0x0a, 0x1e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x7a, 0x76, 0x6f, 0x75, 0x73, 0x5f,
	0x73, 0x65, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x7a, 0x76,
	0x6f, 0x75, 0x73, 0x53, 0x65, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x77, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x75,
	0x62, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x1a, 0x6a,
	0x0a, 0x0f, 0x42, 0x65, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x56, 0x31, 0x4b, 0x69, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x31, 0x4b, 0x69, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x31, 0x4b, 0x69, 0x6e, 0x64,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x31, 0x4b,
	0x69, 0x6e, 0x64, 0x10, 0x04, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x80, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x07, 0x62, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x42, 0x65, 0x72,
	0x74, 0x79, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x7a, 0x76, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x6e, 0x64,
	0x65, 0x7a, 0x76, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x0a,
	0x42, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65, 0x73, 0x68,
	0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xdd, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x69, 0x64, 0x1a, 0x21, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x1a, 0x25, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x37, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x1a, 0x36, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x1a, 0x0d, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x1a, 0xf3, 0x02, 0x0a, 0x21, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x34, 0x0a, 0x16,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xf7, 0x01,
	0x0a, 0x23, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xd7, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x5f, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69,
	0x64, 0x1a, 0x5b, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x45, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x47,
	0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x62, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xeb, 0x02, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x79, 0x70, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x10,
	0x06, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x08, 0x12, 0x2b, 0x0a, 0x27,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x0b, 0x12, 0x1a,
	0x0a, 0x16, 0x54, 0x79, 0x70, 0x65, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10,
	0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x0e, 0x22, 0x04, 0x08,
	0x02, 0x10, 0x02, 0x22, 0x04, 0x08, 0x07, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22,
	0x81, 0x09, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x09,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x92, 0x01, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x1a, 0xd0,
	0x01, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x77, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x77, 0x61, 0x72, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x6e, 0x53, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x31,
	0x0a, 0x02, 0x64, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x42, 0x52, 0x02, 0x64,
	0x62, 0x1a, 0xff, 0x05, 0x0a, 0x02, 0x44, 0x42, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x54,
	0x0a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x23, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40, 0x0a, 0x1c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x1d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x75, 0x73, 0x68,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x1e, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x1a, 0x70, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x04, 0x08,
	0x0b, 0x10, 0x0c, 0x22, 0x5a, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x1a, 0x3d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x9d, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x78, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x63, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x1a,
	0x2c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x1a, 0x22, 0x0a,
	0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x64, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x1a, 0x40, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x97, 0x08, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d,
	0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x69, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x20, 0x9a, 0x84, 0x9e, 0x03, 0x1b,
	0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79,
	0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x22, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x65, 0x0a, 0x22, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13, 0x67, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x22,
	0x52, 0x1f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c,
	0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x71, 0x0a,
	0x11, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x20, 0x9a,
	0x84, 0x9e, 0x03, 0x1b, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x22, 0x52,
	0x0f, 0x70, 0x75, 0x73, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x76, 0x0a, 0x13, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x20, 0x9a, 0x84, 0x9e, 0x03, 0x1b, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6b, 0x22, 0x52, 0x11, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65,
	0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x75, 0x74, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x69, 0x64,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x68, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x68, 0x69, 0x64, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x42, 0x20, 0x9a, 0x84, 0x9e, 0x03, 0x1b, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x6b, 0x22, 0x52, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x19, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x20,
	0x9a, 0x84, 0x9e, 0x03, 0x1b, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x22,
	0x52, 0x17, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x22,
	0x64, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a,
	0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16,
	0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a,
	0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f,
	0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x85,
	0x01, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x1e, 0x9a, 0x84, 0x9e, 0x03, 0x19, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x22, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf9, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x67, 0x6f, 0x72, 0x6d, 0x3a,
	0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x3b, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x3a, 0x63, 0x69, 0x64, 0x22, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x17,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a,
	0x84, 0x9e, 0x03, 0x0c, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x4e, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xf0, 0x05, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21,
	0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x3b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x63, 0x69, 0x64,
	0x22, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x11, 0x9a, 0x84, 0x9e, 0x03, 0x0c,
	0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x6f, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x3b, 0x9a, 0x84, 0x9e, 0x03, 0x36, 0x67, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x3b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x3a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x17, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x84,
	0x9e, 0x03, 0x0c, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x52,
	0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x69, 0x6e, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x11, 0x9a, 0x84, 0x9e, 0x03, 0x0c, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x9a, 0x84, 0x9e, 0x03, 0x1e, 0x67, 0x6f,
	0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x3a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x22, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x43, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x0f, 0x10, 0x10, 0x4a, 0x04,
	0x08, 0x10, 0x10, 0x11, 0x22, 0xf9, 0x04, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x35, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a,
	0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x4e, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67,
	0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22,
	0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x71, 0x0a, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x3b, 0x9a, 0x84, 0x9e, 0x03, 0x36, 0x67, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x3b, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x09, 0x10, 0x0a,
	0x22, 0xca, 0x09, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d,
	0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a,
	0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x2c, 0x9a, 0x84, 0x9e, 0x03, 0x27, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x75, 0x74,
	0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0xa2, 0x01, 0x0a, 0x1f, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x2c, 0x9a, 0x84, 0x9e, 0x03, 0x27, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x52,
	0x1b, 0x70, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x7f, 0x0a, 0x12,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x2c, 0x9a,
	0x84, 0x9e, 0x03, 0x27, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x10, 0x70, 0x75, 0x73,
	0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x4c, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x0e, 0x10,
	0x0f, 0x4a, 0x04, 0x08, 0x0f, 0x10, 0x10, 0x4a, 0x04, 0x08, 0x11, 0x10, 0x12, 0x22, 0x94, 0x02,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03,
	0x1c, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x3b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x63, 0x69, 0x64, 0x22, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0xc2, 0x03, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x17, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03,
	0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x22, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x71, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x3b, 0x9a,
	0x84, 0x9e, 0x03, 0x36, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x3a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x3b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x3a,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0x7e, 0x0a, 0x06, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f,
	0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x11, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x84, 0x9e, 0x03, 0x0c, 0x67, 0x6f, 0x72, 0x6d,
	0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xc8, 0x01, 0x0a, 0x19, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x22, 0xd8, 0x03, 0x0a, 0x1d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11,
	0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x22, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03,
	0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x22, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2b,
	0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xde, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f,
	0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x42, 0x0a, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0xa1, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11,
	0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x22, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x37, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe9, 0x14, 0x0a, 0x0b, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x4e, 0x65, 0x77, 0x1a, 0x5b, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x34, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x57, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x5e, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x1a, 0x47, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x1a, 0x47, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x43, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x0b, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x1a, 0x8d, 0x01, 0x0a, 0x17, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6b, 0x12,
	0x43, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x1a, 0xb0, 0x06, 0x0a, 0x08, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x07,
	0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0x1a, 0xd1, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x1a, 0x4b, 0x0a, 0x12, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6e,
	0x74, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x1a, 0x4f, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x1a, 0x8e, 0x01, 0x0a, 0x0f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x6e, 0x74, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x1a, 0xc6, 0x01,
	0x0a, 0x13, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x5b,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x39, 0x0a, 0x09, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x57, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x69,
	0x6d, 0x69, 0x74, 0x79, 0x10, 0x03, 0x1a, 0x31, 0x0a, 0x16, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x31, 0x0a, 0x16, 0x50, 0x65, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x6c, 0x0a, 0x19,
	0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6b, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6b, 0x1a, 0x4b, 0x0a, 0x11, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x36, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcc, 0x03, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x65, 0x64,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4c,
	0x6f, 0x61, 0x64, 0x10, 0x0c, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x10, 0x0d, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x10, 0x0e, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x10, 0x0f, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x10, 0x10, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x11,
	0x22, 0x04, 0x08, 0x0b, 0x10, 0x0b, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x33, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x1a, 0x4d, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x5a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x1a, 0x26, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x57, 0x0a, 0x0a,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7f, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x1a, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3e, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x35, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x32, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x1a, 0x07, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0xd9, 0x02, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x1a, 0xb7, 0x02,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x74,
	0x65, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x6d, 0x75,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x69,
	0x64, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x39,
	0x0a, 0x19, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x58, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x42, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x1a, 0x28, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xfd,
	0x01, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x1a, 0xd5, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08,
	0x04, 0x10, 0x05, 0x1a, 0x19, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x88,
	0x01, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x1a, 0x5c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x48, 0x0a, 0x18, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x67, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x1a, 0x21, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x1a, 0x35, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x12,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x0a,
	0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x02, 0x0a, 0x12,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x66, 0x0a, 0x19, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x17, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x3a, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x75, 0x74, 0x6f,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0xb8, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x65, 0x66, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x66, 0x43, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x65, 0x73, 0x74,
	0x1a, 0x42, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x69, 0x0a, 0x0f, 0x54, 0x79, 0x62, 0x65, 0x72, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4b, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x70, 0x76, 0x36, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x22,
	0x5d, 0x0a, 0x0f, 0x54, 0x79, 0x62, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x21, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x68,
	0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x49, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x1a,
	0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x40, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68,
	0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x1a, 0x23, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x50,
	0x75, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x51, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x75, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x75, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x69, 0x64, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x75, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x41, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x6b, 0x1a, 0x3b, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x5c, 0x0a, 0x1d, 0x50, 0x75, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x32, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6b, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x98, 0x01, 0x0a, 0x1e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x32, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6b, 0x1a, 0x42, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x39, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x18,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x96, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x1a, 0x3d, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x87, 0x01, 0x0a, 0x1a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x1a,
	0x60, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x93, 0x02, 0x0a, 0x15, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x4c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x14,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x12,
	0x2f, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x22, 0x32, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d,
	0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xef,
	0x01, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x67, 0x6f, 0x72, 0x6d, 0x3a,
	0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x52, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x82, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6b, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x5f, 0x70, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x50, 0x6b, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x08, 0x50, 0x75, 0x73,
	0x68, 0x53, 0x65, 0x6e, 0x64, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6b, 0x12, 0x4a,
	0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x53, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0xd5, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x1a, 0xb9, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x6b, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x1a, 0x07,
	0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5b, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x07, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0xa3, 0x02, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x3b, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x11, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x32, 0xa3, 0x28,
	0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x12,
	0x34, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x72, 0x74,
	0x79, 0x49, 0x44, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x75, 0x0a, 0x13, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x2f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x81, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x76, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x12, 0x33, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x76, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x65, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c,
	0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x29, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x72, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5a, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x56, 0x0a, 0x08, 0x45, 0x63, 0x68, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x54, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x6a, 0x0a, 0x0e, 0x45, 0x63, 0x68, 0x6f,
	0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x63, 0x68, 0x6f, 0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f,
	0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x74, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2e, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x5f, 0x0a, 0x0b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x72, 0x0a, 0x12, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x6c, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a,
	0x6f, 0x69, 0x6e, 0x12, 0x2c, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5a, 0x0a,
	0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x0d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x78,
	0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x30, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x63, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x12, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x24, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x10, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x12,
	0x2c, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x2d,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x10, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x2c,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x61, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x99, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3b, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x84, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x34, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x0b, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x74, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x63,
	0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x71, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x6b, 0x0a, 0x0f, 0x54, 0x79, 0x62, 0x65, 0x72, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x79, 0x62, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x62, 0x65,
	0x72, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x0f, 0x54, 0x79, 0x62, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x62, 0x65,
	0x72, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x62, 0x65, 0x72, 0x48, 0x6f,
	0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x84,
	0x01, 0x0a, 0x18, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x71, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x75, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12,
	0x2f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x81, 0x01, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x33, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x93, 0x01, 0x0a, 0x1d, 0x50, 0x75, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x98, 0x01, 0x0a, 0x1e, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x30, 0x01, 0x12, 0x5d, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x12, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x54, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x6e,
	0x64, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x72, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x0d, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x84, 0x01, 0x0a, 0x18, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x34, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x8a, 0x01, 0x0a, 0x1a, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34,
	0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x7d, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x63,
	0x68, 0x2f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messengertypes_messengertypes_proto_rawDescOnce sync.Once
	file_messengertypes_messengertypes_proto_rawDescData = file_messengertypes_messengertypes_proto_rawDesc
)

func file_messengertypes_messengertypes_proto_rawDescGZIP() []byte {
	file_messengertypes_messengertypes_proto_rawDescOnce.Do(func() {
		file_messengertypes_messengertypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_messengertypes_messengertypes_proto_rawDescData)
	})
	return file_messengertypes_messengertypes_proto_rawDescData
}

var file_messengertypes_messengertypes_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_messengertypes_messengertypes_proto_msgTypes = make([]protoimpl.MessageInfo, 208)
var file_messengertypes_messengertypes_proto_goTypes = []any{
	(BertyLink_Kind)(0),                                    // 0: berty.messenger.v1.BertyLink.Kind
	(AppMessage_Type)(0),                                   // 1: berty.messenger.v1.AppMessage.Type
	(Contact_State)(0),                                     // 2: berty.messenger.v1.Contact.State
	(Conversation_Type)(0),                                 // 3: berty.messenger.v1.Conversation.Type
	(StreamEvent_Type)(0),                                  // 4: berty.messenger.v1.StreamEvent.Type
	(StreamEvent_Notified_Type)(0),                         // 5: berty.messenger.v1.StreamEvent.Notified.Type
	(StreamEvent_PeerStatusConnected_Transport)(0),         // 6: berty.messenger.v1.StreamEvent.PeerStatusConnected.Transport
	(*PaginatedInteractionsOptions)(nil),                   // 7: berty.messenger.v1.PaginatedInteractionsOptions
	(*ConversationOpen)(nil),                               // 8: berty.messenger.v1.ConversationOpen
	(*ConversationClose)(nil),                              // 9: berty.messenger.v1.ConversationClose
	(*ConversationLoad)(nil),                               // 10: berty.messenger.v1.ConversationLoad
	(*ConversationMute)(nil),                               // 11: berty.messenger.v1.ConversationMute
	(*EchoTest)(nil),                                       // 12: berty.messenger.v1.EchoTest
	(*EchoDuplexTest)(nil),                                 // 13: berty.messenger.v1.EchoDuplexTest
	(*InstanceShareableBertyID)(nil),                       // 14: berty.messenger.v1.InstanceShareableBertyID
	(*ShareableBertyGroup)(nil),                            // 15: berty.messenger.v1.ShareableBertyGroup
	(*DevShareInstanceBertyID)(nil),                        // 16: berty.messenger.v1.DevShareInstanceBertyID
	(*DevStreamLogs)(nil),                                  // 17: berty.messenger.v1.DevStreamLogs
	(*ParseDeepLink)(nil),                                  // 18: berty.messenger.v1.ParseDeepLink
	(*BertyLink)(nil),                                      // 19: berty.messenger.v1.BertyLink
	(*SendContactRequest)(nil),                             // 20: berty.messenger.v1.SendContactRequest
	(*BertyID)(nil),                                        // 21: berty.messenger.v1.BertyID
	(*BertyGroup)(nil),                                     // 22: berty.messenger.v1.BertyGroup
	(*AppMessage)(nil),                                     // 23: berty.messenger.v1.AppMessage
	(*SystemInfo)(nil),                                     // 24: berty.messenger.v1.SystemInfo
	(*ConversationJoin)(nil),                               // 25: berty.messenger.v1.ConversationJoin
	(*DebugAuthServiceSetToken)(nil),                       // 26: berty.messenger.v1.DebugAuthServiceSetToken
	(*ServicesTokenList)(nil),                              // 27: berty.messenger.v1.ServicesTokenList
	(*AuthServiceCompleteFlow)(nil),                        // 28: berty.messenger.v1.AuthServiceCompleteFlow
	(*AuthServiceInitFlow)(nil),                            // 29: berty.messenger.v1.AuthServiceInitFlow
	(*Account)(nil),                                        // 30: berty.messenger.v1.Account
	(*ServiceTokenSupportedService)(nil),                   // 31: berty.messenger.v1.ServiceTokenSupportedService
	(*ServiceTokenSupportedServiceRecord)(nil),             // 32: berty.messenger.v1.ServiceTokenSupportedServiceRecord
	(*ServiceToken)(nil),                                   // 33: berty.messenger.v1.ServiceToken
	(*MetadataEvent)(nil),                                  // 34: berty.messenger.v1.MetadataEvent
	(*Interaction)(nil),                                    // 35: berty.messenger.v1.Interaction
	(*Contact)(nil),                                        // 36: berty.messenger.v1.Contact
	(*Conversation)(nil),                                   // 37: berty.messenger.v1.Conversation
	(*ConversationReplicationInfo)(nil),                    // 38: berty.messenger.v1.ConversationReplicationInfo
	(*Member)(nil),                                         // 39: berty.messenger.v1.Member
	(*Device)(nil),                                         // 40: berty.messenger.v1.Device
	(*AccountVerifiedCredential)(nil),                      // 41: berty.messenger.v1.AccountVerifiedCredential
	(*AccountDirectoryServiceRecord)(nil),                  // 42: berty.messenger.v1.AccountDirectoryServiceRecord
	(*PushDeviceToken)(nil),                                // 43: berty.messenger.v1.PushDeviceToken
	(*PushServerRecord)(nil),                               // 44: berty.messenger.v1.PushServerRecord
	(*ContactMetadata)(nil),                                // 45: berty.messenger.v1.ContactMetadata
	(*StreamEvent)(nil),                                    // 46: berty.messenger.v1.StreamEvent
	(*ConversationStream)(nil),                             // 47: berty.messenger.v1.ConversationStream
	(*ConversationCreate)(nil),                             // 48: berty.messenger.v1.ConversationCreate
	(*AccountGet)(nil),                                     // 49: berty.messenger.v1.AccountGet
	(*EventStream)(nil),                                    // 50: berty.messenger.v1.EventStream
	(*AccountUpdate)(nil),                                  // 51: berty.messenger.v1.AccountUpdate
	(*AccountPushConfigure)(nil),                           // 52: berty.messenger.v1.AccountPushConfigure
	(*ContactRequest)(nil),                                 // 53: berty.messenger.v1.ContactRequest
	(*ContactAccept)(nil),                                  // 54: berty.messenger.v1.ContactAccept
	(*Interact)(nil),                                       // 55: berty.messenger.v1.Interact
	(*ReplicationServiceRegisterGroup)(nil),                // 56: berty.messenger.v1.ReplicationServiceRegisterGroup
	(*ReplicationSetAutoEnable)(nil),                       // 57: berty.messenger.v1.ReplicationSetAutoEnable
	(*BannerQuote)(nil),                                    // 58: berty.messenger.v1.BannerQuote
	(*InstanceExportData)(nil),                             // 59: berty.messenger.v1.InstanceExportData
	(*LocalDatabaseState)(nil),                             // 60: berty.messenger.v1.LocalDatabaseState
	(*LocalConversationState)(nil),                         // 61: berty.messenger.v1.LocalConversationState
	(*MessageSearch)(nil),                                  // 62: berty.messenger.v1.MessageSearch
	(*TyberHostSearch)(nil),                                // 63: berty.messenger.v1.TyberHostSearch
	(*TyberHostAttach)(nil),                                // 64: berty.messenger.v1.TyberHostAttach
	(*PushSetDeviceToken)(nil),                             // 65: berty.messenger.v1.PushSetDeviceToken
	(*PushSetAutoShare)(nil),                               // 66: berty.messenger.v1.PushSetAutoShare
	(*PushReceivedData)(nil),                               // 67: berty.messenger.v1.PushReceivedData
	(*PushReceive)(nil),                                    // 68: berty.messenger.v1.PushReceive
	(*ListMemberDevices)(nil),                              // 69: berty.messenger.v1.ListMemberDevices
	(*PushShareTokenForConversation)(nil),                  // 70: berty.messenger.v1.PushShareTokenForConversation
	(*PushTokenSharedForConversation)(nil),                 // 71: berty.messenger.v1.PushTokenSharedForConversation
	(*DirectoryServiceRegister)(nil),                       // 72: berty.messenger.v1.DirectoryServiceRegister
	(*DirectoryServiceUnregister)(nil),                     // 73: berty.messenger.v1.DirectoryServiceUnregister
	(*DirectoryServiceQuery)(nil),                          // 74: berty.messenger.v1.DirectoryServiceQuery
	(*PushServer)(nil),                                     // 75: berty.messenger.v1.PushServer
	(*PushLocalDeviceSharedToken)(nil),                     // 76: berty.messenger.v1.PushLocalDeviceSharedToken
	(*PushMemberToken)(nil),                                // 77: berty.messenger.v1.PushMemberToken
	(*PushMemberTokenUpdate)(nil),                          // 78: berty.messenger.v1.PushMemberTokenUpdate
	(*MemberWithDevices)(nil),                              // 79: berty.messenger.v1.MemberWithDevices
	(*PushSend)(nil),                                       // 80: berty.messenger.v1.PushSend
	(*PushShareToken)(nil),                                 // 81: berty.messenger.v1.PushShareToken
	(*PushSetServer)(nil),                                  // 82: berty.messenger.v1.PushSetServer
	(*AuthExchangeResponse)(nil),                           // 83: berty.messenger.v1.AuthExchangeResponse
	(*ServicesTokenCode)(nil),                              // 84: berty.messenger.v1.ServicesTokenCode
	(*ConversationOpen_Request)(nil),                       // 85: berty.messenger.v1.ConversationOpen.Request
	(*ConversationOpen_Reply)(nil),                         // 86: berty.messenger.v1.ConversationOpen.Reply
	(*ConversationClose_Request)(nil),                      // 87: berty.messenger.v1.ConversationClose.Request
	(*ConversationClose_Reply)(nil),                        // 88: berty.messenger.v1.ConversationClose.Reply
	(*ConversationLoad_Request)(nil),                       // 89: berty.messenger.v1.ConversationLoad.Request
	(*ConversationLoad_Reply)(nil),                         // 90: berty.messenger.v1.ConversationLoad.Reply
	(*ConversationMute_Request)(nil),                       // 91: berty.messenger.v1.ConversationMute.Request
	(*ConversationMute_Reply)(nil),                         // 92: berty.messenger.v1.ConversationMute.Reply
	(*EchoTest_Request)(nil),                               // 93: berty.messenger.v1.EchoTest.Request
	(*EchoTest_Reply)(nil),                                 // 94: berty.messenger.v1.EchoTest.Reply
	(*EchoDuplexTest_Request)(nil),                         // 95: berty.messenger.v1.EchoDuplexTest.Request
	(*EchoDuplexTest_Reply)(nil),                           // 96: berty.messenger.v1.EchoDuplexTest.Reply
	(*InstanceShareableBertyID_Request)(nil),               // 97: berty.messenger.v1.InstanceShareableBertyID.Request
	(*InstanceShareableBertyID_Reply)(nil),                 // 98: berty.messenger.v1.InstanceShareableBertyID.Reply
	(*ShareableBertyGroup_Request)(nil),                    // 99: berty.messenger.v1.ShareableBertyGroup.Request
	(*ShareableBertyGroup_Reply)(nil),                      // 100: berty.messenger.v1.ShareableBertyGroup.Reply
	(*DevShareInstanceBertyID_Request)(nil),                // 101: berty.messenger.v1.DevShareInstanceBertyID.Request
	(*DevShareInstanceBertyID_Reply)(nil),                  // 102: berty.messenger.v1.DevShareInstanceBertyID.Reply
	(*DevStreamLogs_Request)(nil),                          // 103: berty.messenger.v1.DevStreamLogs.Request
	(*DevStreamLogs_Reply)(nil),                            // 104: berty.messenger.v1.DevStreamLogs.Reply
	(*ParseDeepLink_Request)(nil),                          // 105: berty.messenger.v1.ParseDeepLink.Request
	(*ParseDeepLink_Reply)(nil),                            // 106: berty.messenger.v1.ParseDeepLink.Reply
	(*BertyLink_Encrypted)(nil),                            // 107: berty.messenger.v1.BertyLink.Encrypted
	(*BertyLink_BertyMessageRef)(nil),                      // 108: berty.messenger.v1.BertyLink.BertyMessageRef
	(*SendContactRequest_Request)(nil),                     // 109: berty.messenger.v1.SendContactRequest.Request
	(*SendContactRequest_Reply)(nil),                       // 110: berty.messenger.v1.SendContactRequest.Reply
	(*AppMessage_UserMessage)(nil),                         // 111: berty.messenger.v1.AppMessage.UserMessage
	(*AppMessage_GroupInvitation)(nil),                     // 112: berty.messenger.v1.AppMessage.GroupInvitation
	(*AppMessage_SetGroupInfo)(nil),                        // 113: berty.messenger.v1.AppMessage.SetGroupInfo
	(*AppMessage_SetUserInfo)(nil),                         // 114: berty.messenger.v1.AppMessage.SetUserInfo
	(*AppMessage_Acknowledge)(nil),                         // 115: berty.messenger.v1.AppMessage.Acknowledge
	(*AppMessage_AccountDirectoryServiceRegistered)(nil),   // 116: berty.messenger.v1.AppMessage.AccountDirectoryServiceRegistered
	(*AppMessage_AccountDirectoryServiceUnregistered)(nil), // 117: berty.messenger.v1.AppMessage.AccountDirectoryServiceUnregistered
	(*AppMessage_ServiceAddToken)(nil),                     // 118: berty.messenger.v1.AppMessage.ServiceAddToken
	(*AppMessage_ServiceRemoveToken)(nil),                  // 119: berty.messenger.v1.AppMessage.ServiceRemoveToken
	(*AppMessage_PushSetDeviceToken)(nil),                  // 120: berty.messenger.v1.AppMessage.PushSetDeviceToken
	(*AppMessage_PushSetServer)(nil),                       // 121: berty.messenger.v1.AppMessage.PushSetServer
	(*AppMessage_PushSetMemberToken)(nil),                  // 122: berty.messenger.v1.AppMessage.PushSetMemberToken
	(*SystemInfo_Request)(nil),                             // 123: berty.messenger.v1.SystemInfo.Request
	(*SystemInfo_Reply)(nil),                               // 124: berty.messenger.v1.SystemInfo.Reply
	(*SystemInfo_Messenger)(nil),                           // 125: berty.messenger.v1.SystemInfo.Messenger
	(*SystemInfo_DB)(nil),                                  // 126: berty.messenger.v1.SystemInfo.DB
	(*ConversationJoin_Request)(nil),                       // 127: berty.messenger.v1.ConversationJoin.Request
	(*ConversationJoin_Reply)(nil),                         // 128: berty.messenger.v1.ConversationJoin.Reply
	(*DebugAuthServiceSetToken_Request)(nil),               // 129: berty.messenger.v1.DebugAuthServiceSetToken.Request
	(*DebugAuthServiceSetToken_Reply)(nil),                 // 130: berty.messenger.v1.DebugAuthServiceSetToken.Reply
	(*ServicesTokenList_Request)(nil),                      // 131: berty.messenger.v1.ServicesTokenList.Request
	(*ServicesTokenList_Reply)(nil),                        // 132: berty.messenger.v1.ServicesTokenList.Reply
	(*AuthServiceCompleteFlow_Request)(nil),                // 133: berty.messenger.v1.AuthServiceCompleteFlow.Request
	(*AuthServiceCompleteFlow_Reply)(nil),                  // 134: berty.messenger.v1.AuthServiceCompleteFlow.Reply
	(*AuthServiceInitFlow_Request)(nil),                    // 135: berty.messenger.v1.AuthServiceInitFlow.Request
	(*AuthServiceInitFlow_Reply)(nil),                      // 136: berty.messenger.v1.AuthServiceInitFlow.Reply
	(*StreamEvent_ConversationUpdated)(nil),                // 137: berty.messenger.v1.StreamEvent.ConversationUpdated
	(*StreamEvent_ConversationDeleted)(nil),                // 138: berty.messenger.v1.StreamEvent.ConversationDeleted
	(*StreamEvent_InteractionUpdated)(nil),                 // 139: berty.messenger.v1.StreamEvent.InteractionUpdated
	(*StreamEvent_InteractionDeleted)(nil),                 // 140: berty.messenger.v1.StreamEvent.InteractionDeleted
	(*StreamEvent_ContactUpdated)(nil),                     // 141: berty.messenger.v1.StreamEvent.ContactUpdated
	(*StreamEvent_AccountUpdated)(nil),                     // 142: berty.messenger.v1.StreamEvent.AccountUpdated
	(*StreamEvent_MemberUpdated)(nil),                      // 143: berty.messenger.v1.StreamEvent.MemberUpdated
	(*StreamEvent_DeviceUpdated)(nil),                      // 144: berty.messenger.v1.StreamEvent.DeviceUpdated
	(*StreamEvent_ListEnded)(nil),                          // 145: berty.messenger.v1.StreamEvent.ListEnded
	(*StreamEvent_ConversationPartialLoad)(nil),            // 146: berty.messenger.v1.StreamEvent.ConversationPartialLoad
	(*StreamEvent_Notified)(nil),                           // 147: berty.messenger.v1.StreamEvent.Notified
	(*StreamEvent_PeerStatusConnected)(nil),                // 148: berty.messenger.v1.StreamEvent.PeerStatusConnected
	(*StreamEvent_PeerStatusReconnecting)(nil),             // 149: berty.messenger.v1.StreamEvent.PeerStatusReconnecting
	(*StreamEvent_PeerStatusDisconnected)(nil),             // 150: berty.messenger.v1.StreamEvent.PeerStatusDisconnected
	(*StreamEvent_PeerStatusGroupAssociated)(nil),          // 151: berty.messenger.v1.StreamEvent.PeerStatusGroupAssociated
	(*StreamEvent_ServiceTokenAdded)(nil),                  // 152: berty.messenger.v1.StreamEvent.ServiceTokenAdded
	(*StreamEvent_Notified_Basic)(nil),                     // 153: berty.messenger.v1.StreamEvent.Notified.Basic
	(*StreamEvent_Notified_MessageReceived)(nil),           // 154: berty.messenger.v1.StreamEvent.Notified.MessageReceived
	(*StreamEvent_Notified_ContactRequestSent)(nil),        // 155: berty.messenger.v1.StreamEvent.Notified.ContactRequestSent
	(*StreamEvent_Notified_ContactRequestReceived)(nil),    // 156: berty.messenger.v1.StreamEvent.Notified.ContactRequestReceived
	(*StreamEvent_Notified_GroupInvitation)(nil),           // 157: berty.messenger.v1.StreamEvent.Notified.GroupInvitation
	(*ConversationStream_Request)(nil),                     // 158: berty.messenger.v1.ConversationStream.Request
	(*ConversationStream_Reply)(nil),                       // 159: berty.messenger.v1.ConversationStream.Reply
	(*ConversationCreate_Request)(nil),                     // 160: berty.messenger.v1.ConversationCreate.Request
	(*ConversationCreate_Reply)(nil),                       // 161: berty.messenger.v1.ConversationCreate.Reply
	(*AccountGet_Request)(nil),                             // 162: berty.messenger.v1.AccountGet.Request
	(*AccountGet_Reply)(nil),                               // 163: berty.messenger.v1.AccountGet.Reply
	(*EventStream_Request)(nil),                            // 164: berty.messenger.v1.EventStream.Request
	(*EventStream_Reply)(nil),                              // 165: berty.messenger.v1.EventStream.Reply
	(*AccountUpdate_Request)(nil),                          // 166: berty.messenger.v1.AccountUpdate.Request
	(*AccountUpdate_Reply)(nil),                            // 167: berty.messenger.v1.AccountUpdate.Reply
	(*AccountPushConfigure_Request)(nil),                   // 168: berty.messenger.v1.AccountPushConfigure.Request
	(*AccountPushConfigure_Reply)(nil),                     // 169: berty.messenger.v1.AccountPushConfigure.Reply
	(*ContactRequest_Request)(nil),                         // 170: berty.messenger.v1.ContactRequest.Request
	(*ContactRequest_Reply)(nil),                           // 171: berty.messenger.v1.ContactRequest.Reply
	(*ContactAccept_Request)(nil),                          // 172: berty.messenger.v1.ContactAccept.Request
	(*ContactAccept_Reply)(nil),                            // 173: berty.messenger.v1.ContactAccept.Reply
	(*Interact_Request)(nil),                               // 174: berty.messenger.v1.Interact.Request
	(*Interact_Reply)(nil),                                 // 175: berty.messenger.v1.Interact.Reply
	(*ReplicationServiceRegisterGroup_Request)(nil),        // 176: berty.messenger.v1.ReplicationServiceRegisterGroup.Request
	(*ReplicationServiceRegisterGroup_Reply)(nil),          // 177: berty.messenger.v1.ReplicationServiceRegisterGroup.Reply
	(*ReplicationSetAutoEnable_Request)(nil),               // 178: berty.messenger.v1.ReplicationSetAutoEnable.Request
	(*ReplicationSetAutoEnable_Reply)(nil),                 // 179: berty.messenger.v1.ReplicationSetAutoEnable.Reply
	(*BannerQuote_Request)(nil),                            // 180: berty.messenger.v1.BannerQuote.Request
	(*BannerQuote_Reply)(nil),                              // 181: berty.messenger.v1.BannerQuote.Reply
	(*InstanceExportData_Request)(nil),                     // 182: berty.messenger.v1.InstanceExportData.Request
	(*InstanceExportData_Reply)(nil),                       // 183: berty.messenger.v1.InstanceExportData.Reply
	(*MessageSearch_Request)(nil),                          // 184: berty.messenger.v1.MessageSearch.Request
	(*MessageSearch_Reply)(nil),                            // 185: berty.messenger.v1.MessageSearch.Reply
	(*TyberHostSearch_Request)(nil),                        // 186: berty.messenger.v1.TyberHostSearch.Request
	(*TyberHostSearch_Reply)(nil),                          // 187: berty.messenger.v1.TyberHostSearch.Reply
	(*TyberHostAttach_Request)(nil),                        // 188: berty.messenger.v1.TyberHostAttach.Request
	(*TyberHostAttach_Reply)(nil),                          // 189: berty.messenger.v1.TyberHostAttach.Reply
	(*PushSetDeviceToken_Request)(nil),                     // 190: berty.messenger.v1.PushSetDeviceToken.Request
	(*PushSetDeviceToken_Reply)(nil),                       // 191: berty.messenger.v1.PushSetDeviceToken.Reply
	(*PushSetAutoShare_Request)(nil),                       // 192: berty.messenger.v1.PushSetAutoShare.Request
	(*PushSetAutoShare_Reply)(nil),                         // 193: berty.messenger.v1.PushSetAutoShare.Reply
	(*PushReceive_Request)(nil),                            // 194: berty.messenger.v1.PushReceive.Request
	(*PushReceive_Reply)(nil),                              // 195: berty.messenger.v1.PushReceive.Reply
	(*ListMemberDevices_Request)(nil),                      // 196: berty.messenger.v1.ListMemberDevices.Request
	(*ListMemberDevices_Reply)(nil),                        // 197: berty.messenger.v1.ListMemberDevices.Reply
	(*PushShareTokenForConversation_Request)(nil),          // 198: berty.messenger.v1.PushShareTokenForConversation.Request
	(*PushShareTokenForConversation_Reply)(nil),            // 199: berty.messenger.v1.PushShareTokenForConversation.Reply
	(*PushTokenSharedForConversation_Request)(nil),         // 200: berty.messenger.v1.PushTokenSharedForConversation.Request
	(*PushTokenSharedForConversation_Reply)(nil),           // 201: berty.messenger.v1.PushTokenSharedForConversation.Reply
	(*DirectoryServiceRegister_Request)(nil),               // 202: berty.messenger.v1.DirectoryServiceRegister.Request
	(*DirectoryServiceRegister_Reply)(nil),                 // 203: berty.messenger.v1.DirectoryServiceRegister.Reply
	(*DirectoryServiceUnregister_Request)(nil),             // 204: berty.messenger.v1.DirectoryServiceUnregister.Request
	(*DirectoryServiceUnregister_Reply)(nil),               // 205: berty.messenger.v1.DirectoryServiceUnregister.Reply
	(*DirectoryServiceQuery_Request)(nil),                  // 206: berty.messenger.v1.DirectoryServiceQuery.Request
	(*DirectoryServiceQuery_Reply)(nil),                    // 207: berty.messenger.v1.DirectoryServiceQuery.Reply
	(*PushSend_Request)(nil),                               // 208: berty.messenger.v1.PushSend.Request
	(*PushSend_Reply)(nil),                                 // 209: berty.messenger.v1.PushSend.Reply
	(*PushShareToken_Request)(nil),                         // 210: berty.messenger.v1.PushShareToken.Request
	(*PushShareToken_Reply)(nil),                           // 211: berty.messenger.v1.PushShareToken.Reply
	(*PushSetServer_Request)(nil),                          // 212: berty.messenger.v1.PushSetServer.Request
	(*PushSetServer_Reply)(nil),                            // 213: berty.messenger.v1.PushSetServer.Reply
	nil,                                                    // 214: berty.messenger.v1.AuthExchangeResponse.ServicesEntry
	(*protocoltypes.Group)(nil),                            // 215: weshnet.protocol.v1.Group
	(protocoltypes.EventType)(0),                           // 216: weshnet.protocol.v1.EventType
	(pushtypes.PushServiceTokenType)(0),                    // 217: berty.push.v1.PushServiceTokenType
	(*protocoltypes.OutOfStoreReceive_Reply)(nil),          // 218: weshnet.protocol.v1.OutOfStoreReceive.Reply
	(protocoltypes.GroupType)(0),                           // 219: weshnet.protocol.v1.GroupType
	(*pushtypes.PushServiceReceiver)(nil),                  // 220: berty.push.v1.PushServiceReceiver
	(*protocoltypes.SystemInfo_Reply)(nil),                 // 221: weshnet.protocol.v1.SystemInfo.Reply
	(*protocoltypes.SystemInfo_Process)(nil),               // 222: weshnet.protocol.v1.SystemInfo.Process
}
var file_messengertypes_messengertypes_proto_depIdxs = []int32{
	0,   // 0: berty.messenger.v1.BertyLink.kind:type_name -> berty.messenger.v1.BertyLink.Kind
	21,  // 1: berty.messenger.v1.BertyLink.berty_id:type_name -> berty.messenger.v1.BertyID
	22,  // 2: berty.messenger.v1.BertyLink.berty_group:type_name -> berty.messenger.v1.BertyGroup
	108, // 3: berty.messenger.v1.BertyLink.berty_message_ref:type_name -> berty.messenger.v1.BertyLink.BertyMessageRef
	107, // 4: berty.messenger.v1.BertyLink.encrypted:type_name -> berty.messenger.v1.BertyLink.Encrypted
	215, // 5: berty.messenger.v1.BertyGroup.group:type_name -> weshnet.protocol.v1.Group
	1,   // 6: berty.messenger.v1.AppMessage.type:type_name -> berty.messenger.v1.AppMessage.Type
	33,  // 7: berty.messenger.v1.Account.service_tokens:type_name -> berty.messenger.v1.ServiceToken
	43,  // 8: berty.messenger.v1.Account.push_device_token:type_name -> berty.messenger.v1.PushDeviceToken
	44,  // 9: berty.messenger.v1.Account.push_server_records:type_name -> berty.messenger.v1.PushServerRecord
	41,  // 10: berty.messenger.v1.Account.verified_credentials:type_name -> berty.messenger.v1.AccountVerifiedCredential
	42,  // 11: berty.messenger.v1.Account.directory_service_records:type_name -> berty.messenger.v1.AccountDirectoryServiceRecord
	32,  // 12: berty.messenger.v1.ServiceToken.supported_services:type_name -> berty.messenger.v1.ServiceTokenSupportedServiceRecord
	216, // 13: berty.messenger.v1.MetadataEvent.metadata_event_type:type_name -> weshnet.protocol.v1.EventType
	1,   // 14: berty.messenger.v1.Interaction.type:type_name -> berty.messenger.v1.AppMessage.Type
	39,  // 15: berty.messenger.v1.Interaction.member:type_name -> berty.messenger.v1.Member
	37,  // 16: berty.messenger.v1.Interaction.conversation:type_name -> berty.messenger.v1.Conversation
	37,  // 17: berty.messenger.v1.Contact.conversation:type_name -> berty.messenger.v1.Conversation
	2,   // 18: berty.messenger.v1.Contact.state:type_name -> berty.messenger.v1.Contact.State
	40,  // 19: berty.messenger.v1.Contact.devices:type_name -> berty.messenger.v1.Device
	3,   // 20: berty.messenger.v1.Conversation.type:type_name -> berty.messenger.v1.Conversation.Type
	36,  // 21: berty.messenger.v1.Conversation.contact:type_name -> berty.messenger.v1.Contact
	39,  // 22: berty.messenger.v1.Conversation.members:type_name -> berty.messenger.v1.Member
	38,  // 23: berty.messenger.v1.Conversation.replication_info:type_name -> berty.messenger.v1.ConversationReplicationInfo
	76,  // 24: berty.messenger.v1.Conversation.push_local_device_shared_tokens:type_name -> berty.messenger.v1.PushLocalDeviceSharedToken
	77,  // 25: berty.messenger.v1.Conversation.push_member_tokens:type_name -> berty.messenger.v1.PushMemberToken
	37,  // 26: berty.messenger.v1.Member.conversation:type_name -> berty.messenger.v1.Conversation
	40,  // 27: berty.messenger.v1.Member.devices:type_name -> berty.messenger.v1.Device
	217, // 28: berty.messenger.v1.PushDeviceToken.token_type:type_name -> berty.push.v1.PushServiceTokenType
	4,   // 29: berty.messenger.v1.StreamEvent.type:type_name -> berty.messenger.v1.StreamEvent.Type
	61,  // 30: berty.messenger.v1.LocalDatabaseState.local_conversations_state:type_name -> berty.messenger.v1.LocalConversationState
	3,   // 31: berty.messenger.v1.LocalConversationState.type:type_name -> berty.messenger.v1.Conversation.Type
	218, // 32: berty.messenger.v1.PushReceivedData.protocol_data:type_name -> weshnet.protocol.v1.OutOfStoreReceive.Reply
	35,  // 33: berty.messenger.v1.PushReceivedData.interaction:type_name -> berty.messenger.v1.Interaction
	75,  // 34: berty.messenger.v1.PushMemberTokenUpdate.server:type_name -> berty.messenger.v1.PushServer
	214, // 35: berty.messenger.v1.AuthExchangeResponse.services:type_name -> berty.messenger.v1.AuthExchangeResponse.ServicesEntry
	7,   // 36: berty.messenger.v1.ConversationLoad.Request.options:type_name -> berty.messenger.v1.PaginatedInteractionsOptions
	19,  // 37: berty.messenger.v1.InstanceShareableBertyID.Reply.link:type_name -> berty.messenger.v1.BertyLink
	19,  // 38: berty.messenger.v1.ShareableBertyGroup.Reply.link:type_name -> berty.messenger.v1.BertyLink
	19,  // 39: berty.messenger.v1.ParseDeepLink.Reply.link:type_name -> berty.messenger.v1.BertyLink
	0,   // 40: berty.messenger.v1.BertyLink.Encrypted.kind:type_name -> berty.messenger.v1.BertyLink.Kind
	219, // 41: berty.messenger.v1.BertyLink.Encrypted.group_type:type_name -> weshnet.protocol.v1.GroupType
	21,  // 42: berty.messenger.v1.SendContactRequest.Request.berty_id:type_name -> berty.messenger.v1.BertyID
	31,  // 43: berty.messenger.v1.AppMessage.ServiceAddToken.supported_services:type_name -> berty.messenger.v1.ServiceTokenSupportedService
	220, // 44: berty.messenger.v1.AppMessage.PushSetDeviceToken.device_token:type_name -> berty.push.v1.PushServiceReceiver
	75,  // 45: berty.messenger.v1.AppMessage.PushSetServer.server:type_name -> berty.messenger.v1.PushServer
	78,  // 46: berty.messenger.v1.AppMessage.PushSetMemberToken.member_token:type_name -> berty.messenger.v1.PushMemberTokenUpdate
	221, // 47: berty.messenger.v1.SystemInfo.Reply.protocol:type_name -> weshnet.protocol.v1.SystemInfo.Reply
	125, // 48: berty.messenger.v1.SystemInfo.Reply.messenger:type_name -> berty.messenger.v1.SystemInfo.Messenger
	222, // 49: berty.messenger.v1.SystemInfo.Messenger.process:type_name -> weshnet.protocol.v1.SystemInfo.Process
	126, // 50: berty.messenger.v1.SystemInfo.Messenger.db:type_name -> berty.messenger.v1.SystemInfo.DB
	83,  // 51: berty.messenger.v1.DebugAuthServiceSetToken.Request.token:type_name -> berty.messenger.v1.AuthExchangeResponse
	33,  // 52: berty.messenger.v1.ServicesTokenList.Reply.service:type_name -> berty.messenger.v1.ServiceToken
	37,  // 53: berty.messenger.v1.StreamEvent.ConversationUpdated.conversation:type_name -> berty.messenger.v1.Conversation
	35,  // 54: berty.messenger.v1.StreamEvent.InteractionUpdated.interaction:type_name -> berty.messenger.v1.Interaction
	36,  // 55: berty.messenger.v1.StreamEvent.ContactUpdated.contact:type_name -> berty.messenger.v1.Contact
	30,  // 56: berty.messenger.v1.StreamEvent.AccountUpdated.account:type_name -> berty.messenger.v1.Account
	39,  // 57: berty.messenger.v1.StreamEvent.MemberUpdated.member:type_name -> berty.messenger.v1.Member
	40,  // 58: berty.messenger.v1.StreamEvent.DeviceUpdated.device:type_name -> berty.messenger.v1.Device
	35,  // 59: berty.messenger.v1.StreamEvent.ConversationPartialLoad.interactions:type_name -> berty.messenger.v1.Interaction
	5,   // 60: berty.messenger.v1.StreamEvent.Notified.type:type_name -> berty.messenger.v1.StreamEvent.Notified.Type
	6,   // 61: berty.messenger.v1.StreamEvent.PeerStatusConnected.transport:type_name -> berty.messenger.v1.StreamEvent.PeerStatusConnected.Transport
	33,  // 62: berty.messenger.v1.StreamEvent.ServiceTokenAdded.token:type_name -> berty.messenger.v1.ServiceToken
	35,  // 63: berty.messenger.v1.StreamEvent.Notified.MessageReceived.interaction:type_name -> berty.messenger.v1.Interaction
	37,  // 64: berty.messenger.v1.StreamEvent.Notified.MessageReceived.conversation:type_name -> berty.messenger.v1.Conversation
	36,  // 65: berty.messenger.v1.StreamEvent.Notified.MessageReceived.contact:type_name -> berty.messenger.v1.Contact
	36,  // 66: berty.messenger.v1.StreamEvent.Notified.ContactRequestSent.contact:type_name -> berty.messenger.v1.Contact
	36,  // 67: berty.messenger.v1.StreamEvent.Notified.ContactRequestReceived.contact:type_name -> berty.messenger.v1.Contact
	37,  // 68: berty.messenger.v1.StreamEvent.Notified.GroupInvitation.conversation:type_name -> berty.messenger.v1.Conversation
	36,  // 69: berty.messenger.v1.StreamEvent.Notified.GroupInvitation.contact:type_name -> berty.messenger.v1.Contact
	37,  // 70: berty.messenger.v1.ConversationStream.Reply.conversation:type_name -> berty.messenger.v1.Conversation
	30,  // 71: berty.messenger.v1.AccountGet.Reply.account:type_name -> berty.messenger.v1.Account
	46,  // 72: berty.messenger.v1.EventStream.Reply.event:type_name -> berty.messenger.v1.StreamEvent
	1,   // 73: berty.messenger.v1.Interact.Request.type:type_name -> berty.messenger.v1.AppMessage.Type
	35,  // 74: berty.messenger.v1.MessageSearch.Reply.results:type_name -> berty.messenger.v1.Interaction
	220, // 75: berty.messenger.v1.PushSetDeviceToken.Request.receiver:type_name -> berty.push.v1.PushServiceReceiver
	67,  // 76: berty.messenger.v1.PushReceive.Reply.data:type_name -> berty.messenger.v1.PushReceivedData
	40,  // 77: berty.messenger.v1.ListMemberDevices.Reply.device:type_name -> berty.messenger.v1.Device
	77,  // 78: berty.messenger.v1.PushTokenSharedForConversation.Reply.token:type_name -> berty.messenger.v1.PushMemberToken
	79,  // 79: berty.messenger.v1.PushSend.Request.group_members:type_name -> berty.messenger.v1.MemberWithDevices
	79,  // 80: berty.messenger.v1.PushSend.Reply.group_members:type_name -> berty.messenger.v1.MemberWithDevices
	75,  // 81: berty.messenger.v1.PushShareToken.Request.server:type_name -> berty.messenger.v1.PushServer
	220, // 82: berty.messenger.v1.PushShareToken.Request.receiver:type_name -> berty.push.v1.PushServiceReceiver
	75,  // 83: berty.messenger.v1.PushSetServer.Request.server:type_name -> berty.messenger.v1.PushServer
	97,  // 84: berty.messenger.v1.MessengerService.InstanceShareableBertyID:input_type -> berty.messenger.v1.InstanceShareableBertyID.Request
	99,  // 85: berty.messenger.v1.MessengerService.ShareableBertyGroup:input_type -> berty.messenger.v1.ShareableBertyGroup.Request
	101, // 86: berty.messenger.v1.MessengerService.DevShareInstanceBertyID:input_type -> berty.messenger.v1.DevShareInstanceBertyID.Request
	103, // 87: berty.messenger.v1.MessengerService.DevStreamLogs:input_type -> berty.messenger.v1.DevStreamLogs.Request
	105, // 88: berty.messenger.v1.MessengerService.ParseDeepLink:input_type -> berty.messenger.v1.ParseDeepLink.Request
	109, // 89: berty.messenger.v1.MessengerService.SendContactRequest:input_type -> berty.messenger.v1.SendContactRequest.Request
	123, // 90: berty.messenger.v1.MessengerService.SystemInfo:input_type -> berty.messenger.v1.SystemInfo.Request
	93,  // 91: berty.messenger.v1.MessengerService.EchoTest:input_type -> berty.messenger.v1.EchoTest.Request
	95,  // 92: berty.messenger.v1.MessengerService.EchoDuplexTest:input_type -> berty.messenger.v1.EchoDuplexTest.Request
	158, // 93: berty.messenger.v1.MessengerService.ConversationStream:input_type -> berty.messenger.v1.ConversationStream.Request
	164, // 94: berty.messenger.v1.MessengerService.EventStream:input_type -> berty.messenger.v1.EventStream.Request
	160, // 95: berty.messenger.v1.MessengerService.ConversationCreate:input_type -> berty.messenger.v1.ConversationCreate.Request
	127, // 96: berty.messenger.v1.MessengerService.ConversationJoin:input_type -> berty.messenger.v1.ConversationJoin.Request
	162, // 97: berty.messenger.v1.MessengerService.AccountGet:input_type -> berty.messenger.v1.AccountGet.Request
	166, // 98: berty.messenger.v1.MessengerService.AccountUpdate:input_type -> berty.messenger.v1.AccountUpdate.Request
	168, // 99: berty.messenger.v1.MessengerService.AccountPushConfigure:input_type -> berty.messenger.v1.AccountPushConfigure.Request
	170, // 100: berty.messenger.v1.MessengerService.ContactRequest:input_type -> berty.messenger.v1.ContactRequest.Request
	172, // 101: berty.messenger.v1.MessengerService.ContactAccept:input_type -> berty.messenger.v1.ContactAccept.Request
	174, // 102: berty.messenger.v1.MessengerService.Interact:input_type -> berty.messenger.v1.Interact.Request
	85,  // 103: berty.messenger.v1.MessengerService.ConversationOpen:input_type -> berty.messenger.v1.ConversationOpen.Request
	87,  // 104: berty.messenger.v1.MessengerService.ConversationClose:input_type -> berty.messenger.v1.ConversationClose.Request
	89,  // 105: berty.messenger.v1.MessengerService.ConversationLoad:input_type -> berty.messenger.v1.ConversationLoad.Request
	91,  // 106: berty.messenger.v1.MessengerService.ConversationMute:input_type -> berty.messenger.v1.ConversationMute.Request
	176, // 107: berty.messenger.v1.MessengerService.ReplicationServiceRegisterGroup:input_type -> berty.messenger.v1.ReplicationServiceRegisterGroup.Request
	178, // 108: berty.messenger.v1.MessengerService.ReplicationSetAutoEnable:input_type -> berty.messenger.v1.ReplicationSetAutoEnable.Request
	180, // 109: berty.messenger.v1.MessengerService.BannerQuote:input_type -> berty.messenger.v1.BannerQuote.Request
	182, // 110: berty.messenger.v1.MessengerService.InstanceExportData:input_type -> berty.messenger.v1.InstanceExportData.Request
	184, // 111: berty.messenger.v1.MessengerService.MessageSearch:input_type -> berty.messenger.v1.MessageSearch.Request
	196, // 112: berty.messenger.v1.MessengerService.ListMemberDevices:input_type -> berty.messenger.v1.ListMemberDevices.Request
	186, // 113: berty.messenger.v1.MessengerService.TyberHostSearch:input_type -> berty.messenger.v1.TyberHostSearch.Request
	188, // 114: berty.messenger.v1.MessengerService.TyberHostAttach:input_type -> berty.messenger.v1.TyberHostAttach.Request
	129, // 115: berty.messenger.v1.MessengerService.DebugAuthServiceSetToken:input_type -> berty.messenger.v1.DebugAuthServiceSetToken.Request
	131, // 116: berty.messenger.v1.MessengerService.ServicesTokenList:input_type -> berty.messenger.v1.ServicesTokenList.Request
	135, // 117: berty.messenger.v1.MessengerService.AuthServiceInitFlow:input_type -> berty.messenger.v1.AuthServiceInitFlow.Request
	133, // 118: berty.messenger.v1.MessengerService.AuthServiceCompleteFlow:input_type -> berty.messenger.v1.AuthServiceCompleteFlow.Request
	192, // 119: berty.messenger.v1.MessengerService.PushSetAutoShare:input_type -> berty.messenger.v1.PushSetAutoShare.Request
	198, // 120: berty.messenger.v1.MessengerService.PushShareTokenForConversation:input_type -> berty.messenger.v1.PushShareTokenForConversation.Request
	200, // 121: berty.messenger.v1.MessengerService.PushTokenSharedForConversation:input_type -> berty.messenger.v1.PushTokenSharedForConversation.Request
	194, // 122: berty.messenger.v1.MessengerService.PushReceive:input_type -> berty.messenger.v1.PushReceive.Request
	208, // 123: berty.messenger.v1.MessengerService.PushSend:input_type -> berty.messenger.v1.PushSend.Request
	190, // 124: berty.messenger.v1.MessengerService.PushSetDeviceToken:input_type -> berty.messenger.v1.PushSetDeviceToken.Request
	212, // 125: berty.messenger.v1.MessengerService.PushSetServer:input_type -> berty.messenger.v1.PushSetServer.Request
	202, // 126: berty.messenger.v1.MessengerService.DirectoryServiceRegister:input_type -> berty.messenger.v1.DirectoryServiceRegister.Request
	204, // 127: berty.messenger.v1.MessengerService.DirectoryServiceUnregister:input_type -> berty.messenger.v1.DirectoryServiceUnregister.Request
	206, // 128: berty.messenger.v1.MessengerService.DirectoryServiceQuery:input_type -> berty.messenger.v1.DirectoryServiceQuery.Request
	98,  // 129: berty.messenger.v1.MessengerService.InstanceShareableBertyID:output_type -> berty.messenger.v1.InstanceShareableBertyID.Reply
	100, // 130: berty.messenger.v1.MessengerService.ShareableBertyGroup:output_type -> berty.messenger.v1.ShareableBertyGroup.Reply
	102, // 131: berty.messenger.v1.MessengerService.DevShareInstanceBertyID:output_type -> berty.messenger.v1.DevShareInstanceBertyID.Reply
	104, // 132: berty.messenger.v1.MessengerService.DevStreamLogs:output_type -> berty.messenger.v1.DevStreamLogs.Reply
	106, // 133: berty.messenger.v1.MessengerService.ParseDeepLink:output_type -> berty.messenger.v1.ParseDeepLink.Reply
	110, // 134: berty.messenger.v1.MessengerService.SendContactRequest:output_type -> berty.messenger.v1.SendContactRequest.Reply
	124, // 135: berty.messenger.v1.MessengerService.SystemInfo:output_type -> berty.messenger.v1.SystemInfo.Reply
	94,  // 136: berty.messenger.v1.MessengerService.EchoTest:output_type -> berty.messenger.v1.EchoTest.Reply
	96,  // 137: berty.messenger.v1.MessengerService.EchoDuplexTest:output_type -> berty.messenger.v1.EchoDuplexTest.Reply
	159, // 138: berty.messenger.v1.MessengerService.ConversationStream:output_type -> berty.messenger.v1.ConversationStream.Reply
	165, // 139: berty.messenger.v1.MessengerService.EventStream:output_type -> berty.messenger.v1.EventStream.Reply
	161, // 140: berty.messenger.v1.MessengerService.ConversationCreate:output_type -> berty.messenger.v1.ConversationCreate.Reply
	128, // 141: berty.messenger.v1.MessengerService.ConversationJoin:output_type -> berty.messenger.v1.ConversationJoin.Reply
	163, // 142: berty.messenger.v1.MessengerService.AccountGet:output_type -> berty.messenger.v1.AccountGet.Reply
	167, // 143: berty.messenger.v1.MessengerService.AccountUpdate:output_type -> berty.messenger.v1.AccountUpdate.Reply
	169, // 144: berty.messenger.v1.MessengerService.AccountPushConfigure:output_type -> berty.messenger.v1.AccountPushConfigure.Reply
	171, // 145: berty.messenger.v1.MessengerService.ContactRequest:output_type -> berty.messenger.v1.ContactRequest.Reply
	173, // 146: berty.messenger.v1.MessengerService.ContactAccept:output_type -> berty.messenger.v1.ContactAccept.Reply
	175, // 147: berty.messenger.v1.MessengerService.Interact:output_type -> berty.messenger.v1.Interact.Reply
	86,  // 148: berty.messenger.v1.MessengerService.ConversationOpen:output_type -> berty.messenger.v1.ConversationOpen.Reply
	88,  // 149: berty.messenger.v1.MessengerService.ConversationClose:output_type -> berty.messenger.v1.ConversationClose.Reply
	90,  // 150: berty.messenger.v1.MessengerService.ConversationLoad:output_type -> berty.messenger.v1.ConversationLoad.Reply
	92,  // 151: berty.messenger.v1.MessengerService.ConversationMute:output_type -> berty.messenger.v1.ConversationMute.Reply
	177, // 152: berty.messenger.v1.MessengerService.ReplicationServiceRegisterGroup:output_type -> berty.messenger.v1.ReplicationServiceRegisterGroup.Reply
	179, // 153: berty.messenger.v1.MessengerService.ReplicationSetAutoEnable:output_type -> berty.messenger.v1.ReplicationSetAutoEnable.Reply
	181, // 154: berty.messenger.v1.MessengerService.BannerQuote:output_type -> berty.messenger.v1.BannerQuote.Reply
	183, // 155: berty.messenger.v1.MessengerService.InstanceExportData:output_type -> berty.messenger.v1.InstanceExportData.Reply
	185, // 156: berty.messenger.v1.MessengerService.MessageSearch:output_type -> berty.messenger.v1.MessageSearch.Reply
	197, // 157: berty.messenger.v1.MessengerService.ListMemberDevices:output_type -> berty.messenger.v1.ListMemberDevices.Reply
	187, // 158: berty.messenger.v1.MessengerService.TyberHostSearch:output_type -> berty.messenger.v1.TyberHostSearch.Reply
	189, // 159: berty.messenger.v1.MessengerService.TyberHostAttach:output_type -> berty.messenger.v1.TyberHostAttach.Reply
	130, // 160: berty.messenger.v1.MessengerService.DebugAuthServiceSetToken:output_type -> berty.messenger.v1.DebugAuthServiceSetToken.Reply
	132, // 161: berty.messenger.v1.MessengerService.ServicesTokenList:output_type -> berty.messenger.v1.ServicesTokenList.Reply
	136, // 162: berty.messenger.v1.MessengerService.AuthServiceInitFlow:output_type -> berty.messenger.v1.AuthServiceInitFlow.Reply
	134, // 163: berty.messenger.v1.MessengerService.AuthServiceCompleteFlow:output_type -> berty.messenger.v1.AuthServiceCompleteFlow.Reply
	193, // 164: berty.messenger.v1.MessengerService.PushSetAutoShare:output_type -> berty.messenger.v1.PushSetAutoShare.Reply
	199, // 165: berty.messenger.v1.MessengerService.PushShareTokenForConversation:output_type -> berty.messenger.v1.PushShareTokenForConversation.Reply
	201, // 166: berty.messenger.v1.MessengerService.PushTokenSharedForConversation:output_type -> berty.messenger.v1.PushTokenSharedForConversation.Reply
	195, // 167: berty.messenger.v1.MessengerService.PushReceive:output_type -> berty.messenger.v1.PushReceive.Reply
	209, // 168: berty.messenger.v1.MessengerService.PushSend:output_type -> berty.messenger.v1.PushSend.Reply
	191, // 169: berty.messenger.v1.MessengerService.PushSetDeviceToken:output_type -> berty.messenger.v1.PushSetDeviceToken.Reply
	213, // 170: berty.messenger.v1.MessengerService.PushSetServer:output_type -> berty.messenger.v1.PushSetServer.Reply
	203, // 171: berty.messenger.v1.MessengerService.DirectoryServiceRegister:output_type -> berty.messenger.v1.DirectoryServiceRegister.Reply
	205, // 172: berty.messenger.v1.MessengerService.DirectoryServiceUnregister:output_type -> berty.messenger.v1.DirectoryServiceUnregister.Reply
	207, // 173: berty.messenger.v1.MessengerService.DirectoryServiceQuery:output_type -> berty.messenger.v1.DirectoryServiceQuery.Reply
	129, // [129:174] is the sub-list for method output_type
	84,  // [84:129] is the sub-list for method input_type
	84,  // [84:84] is the sub-list for extension type_name
	84,  // [84:84] is the sub-list for extension extendee
	0,   // [0:84] is the sub-list for field type_name
}

func init() { file_messengertypes_messengertypes_proto_init() }
func file_messengertypes_messengertypes_proto_init() {
	if File_messengertypes_messengertypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messengertypes_messengertypes_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PaginatedInteractionsOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationMute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EchoTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EchoDuplexTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceShareableBertyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ShareableBertyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DevShareInstanceBertyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DevStreamLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ParseDeepLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BertyLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SendContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*BertyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BertyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DebugAuthServiceSetToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ServicesTokenList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AuthServiceCompleteFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*AuthServiceInitFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceTokenSupportedService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceTokenSupportedServiceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*MetadataEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationReplicationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*AccountVerifiedCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*AccountDirectoryServiceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*PushDeviceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*PushServerRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*ContactMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*AccountGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*EventStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*AccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*AccountPushConfigure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ContactAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*Interact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ReplicationServiceRegisterGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*ReplicationSetAutoEnable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*BannerQuote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceExportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*LocalDatabaseState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*LocalConversationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*TyberHostSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*TyberHostAttach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetDeviceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetAutoShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*PushReceivedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*PushReceive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*ListMemberDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*PushShareTokenForConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*PushTokenSharedForConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceUnregister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*PushServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*PushLocalDeviceSharedToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*PushMemberToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*PushMemberTokenUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*MemberWithDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*PushSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*PushShareToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*AuthExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*ServicesTokenCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationOpen_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationOpen_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationClose_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationClose_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationLoad_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationLoad_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationMute_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationMute_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*EchoTest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*EchoTest_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*EchoDuplexTest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*EchoDuplexTest_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceShareableBertyID_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceShareableBertyID_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*ShareableBertyGroup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*ShareableBertyGroup_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*DevShareInstanceBertyID_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*DevShareInstanceBertyID_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*DevStreamLogs_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*DevStreamLogs_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*ParseDeepLink_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*ParseDeepLink_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*BertyLink_Encrypted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*BertyLink_BertyMessageRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*SendContactRequest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*SendContactRequest_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_UserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_GroupInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_SetGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_SetUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_Acknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_AccountDirectoryServiceRegistered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_AccountDirectoryServiceUnregistered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_ServiceAddToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_ServiceRemoveToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_PushSetDeviceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_PushSetServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*AppMessage_PushSetMemberToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*SystemInfo_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*SystemInfo_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*SystemInfo_Messenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*SystemInfo_DB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationJoin_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationJoin_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*DebugAuthServiceSetToken_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*DebugAuthServiceSetToken_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*ServicesTokenList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*ServicesTokenList_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*AuthServiceCompleteFlow_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*AuthServiceCompleteFlow_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*AuthServiceInitFlow_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*AuthServiceInitFlow_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_ConversationUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_ConversationDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_InteractionUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_InteractionDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_ContactUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_AccountUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_MemberUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_DeviceUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_ListEnded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_ConversationPartialLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_Notified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[141].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_PeerStatusConnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[142].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_PeerStatusReconnecting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[143].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_PeerStatusDisconnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[144].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_PeerStatusGroupAssociated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[145].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_ServiceTokenAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[146].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_Notified_Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[147].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_Notified_MessageReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[148].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_Notified_ContactRequestSent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[149].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_Notified_ContactRequestReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[150].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEvent_Notified_GroupInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[151].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationStream_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[152].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationStream_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[153].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationCreate_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[154].Exporter = func(v any, i int) any {
			switch v := v.(*ConversationCreate_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[155].Exporter = func(v any, i int) any {
			switch v := v.(*AccountGet_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[156].Exporter = func(v any, i int) any {
			switch v := v.(*AccountGet_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[157].Exporter = func(v any, i int) any {
			switch v := v.(*EventStream_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[158].Exporter = func(v any, i int) any {
			switch v := v.(*EventStream_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[159].Exporter = func(v any, i int) any {
			switch v := v.(*AccountUpdate_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[160].Exporter = func(v any, i int) any {
			switch v := v.(*AccountUpdate_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[161].Exporter = func(v any, i int) any {
			switch v := v.(*AccountPushConfigure_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[162].Exporter = func(v any, i int) any {
			switch v := v.(*AccountPushConfigure_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[163].Exporter = func(v any, i int) any {
			switch v := v.(*ContactRequest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[164].Exporter = func(v any, i int) any {
			switch v := v.(*ContactRequest_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[165].Exporter = func(v any, i int) any {
			switch v := v.(*ContactAccept_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[166].Exporter = func(v any, i int) any {
			switch v := v.(*ContactAccept_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[167].Exporter = func(v any, i int) any {
			switch v := v.(*Interact_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[168].Exporter = func(v any, i int) any {
			switch v := v.(*Interact_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[169].Exporter = func(v any, i int) any {
			switch v := v.(*ReplicationServiceRegisterGroup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[170].Exporter = func(v any, i int) any {
			switch v := v.(*ReplicationServiceRegisterGroup_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[171].Exporter = func(v any, i int) any {
			switch v := v.(*ReplicationSetAutoEnable_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[172].Exporter = func(v any, i int) any {
			switch v := v.(*ReplicationSetAutoEnable_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[173].Exporter = func(v any, i int) any {
			switch v := v.(*BannerQuote_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[174].Exporter = func(v any, i int) any {
			switch v := v.(*BannerQuote_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[175].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceExportData_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[176].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceExportData_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[177].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSearch_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[178].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSearch_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[179].Exporter = func(v any, i int) any {
			switch v := v.(*TyberHostSearch_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[180].Exporter = func(v any, i int) any {
			switch v := v.(*TyberHostSearch_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[181].Exporter = func(v any, i int) any {
			switch v := v.(*TyberHostAttach_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[182].Exporter = func(v any, i int) any {
			switch v := v.(*TyberHostAttach_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[183].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetDeviceToken_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[184].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetDeviceToken_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[185].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetAutoShare_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[186].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetAutoShare_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[187].Exporter = func(v any, i int) any {
			switch v := v.(*PushReceive_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[188].Exporter = func(v any, i int) any {
			switch v := v.(*PushReceive_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[189].Exporter = func(v any, i int) any {
			switch v := v.(*ListMemberDevices_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[190].Exporter = func(v any, i int) any {
			switch v := v.(*ListMemberDevices_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[191].Exporter = func(v any, i int) any {
			switch v := v.(*PushShareTokenForConversation_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[192].Exporter = func(v any, i int) any {
			switch v := v.(*PushShareTokenForConversation_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[193].Exporter = func(v any, i int) any {
			switch v := v.(*PushTokenSharedForConversation_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[194].Exporter = func(v any, i int) any {
			switch v := v.(*PushTokenSharedForConversation_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[195].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceRegister_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[196].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceRegister_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[197].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceUnregister_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[198].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceUnregister_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[199].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceQuery_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[200].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryServiceQuery_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[201].Exporter = func(v any, i int) any {
			switch v := v.(*PushSend_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[202].Exporter = func(v any, i int) any {
			switch v := v.(*PushSend_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[203].Exporter = func(v any, i int) any {
			switch v := v.(*PushShareToken_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[204].Exporter = func(v any, i int) any {
			switch v := v.(*PushShareToken_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[205].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messengertypes_messengertypes_proto_msgTypes[206].Exporter = func(v any, i int) any {
			switch v := v.(*PushSetServer_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messengertypes_messengertypes_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   208,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_messengertypes_messengertypes_proto_goTypes,
		DependencyIndexes: file_messengertypes_messengertypes_proto_depIdxs,
		EnumInfos:         file_messengertypes_messengertypes_proto_enumTypes,
		MessageInfos:      file_messengertypes_messengertypes_proto_msgTypes,
	}.Build()
	File_messengertypes_messengertypes_proto = out.File
	file_messengertypes_messengertypes_proto_rawDesc = nil
	file_messengertypes_messengertypes_proto_goTypes = nil
	file_messengertypes_messengertypes_proto_depIdxs = nil
}
