syntax = "proto3";

option go_package = "berty.tech/go/internal/group";

import "google/protobuf/timestamp.proto";

message MessageEntryEnvelope {
  // sender_id or counter comparison is enough?
  uint64 counter = 1;
  bytes encrypted_payload = 2;
  bytes signature = 3;
}

message MessageEntryPayload {
  enum PayloadType {
    PayloadTypeMessage = 0;
    PayloadTypeMessageMetadata = 1;
    PayloadTypeInvitation = 2;
    PayloadTypeAnnouncement = 3;
  }

  // Should we have a message_id or only use entry_id from Orbit?
  PayloadType type = 1;
  google.protobuf.Timestamp timestamp = 2;

  Message message = 3;
  MessageMetadata message_metadata = 4;
  Invitation invitation = 5;
  Announcement announcement = 6;
}

message Message {
  bytes content = 1
}

message MessageMetadata {
  enum MetadataType {
    Reaction = 0;
    Hide = 1;
    // Edit = 2; maybe a bad idea for grandma from Cantal? Especially with CRDTs
    // Read = 3; should read receipt be in a separate log or something else?
  }

  MetadataType type = 1;
  bytes message_id = 2;
  bytes content = 3;
}

message Invitation { // Only postable on 1-to-1 conversation?
  bytes inviter_group_account_pub_key = 1;
  bytes invitation_priv_key = 2;
  bytes invitation_signature = 3;

  bytes group_id = 4;
  bytes shared_secret = 5;
  bytes messages_log_cid = 6;
  bytes members_log_cid = 7;
  bytes secrets_log_cid = 8;
  bytes settings_log_cid = 9;
  // Should we send member list and metadata?
}

message Announcement {
  enum AnnouncementType {
    AnnounceInvitationSent = 1;
    AnnounceInvitationAccepted = 2;
    AnnounceInvitationDiscarded = 3;
    AnnounceGroupLeft = 4;
  }

  bytes member_name = 1;
  bytes member_id = 2;
}
