syntax = "proto3";

package berty.protocol;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "berty.tech/berty/v2/go/pkg/bertydemo";

service DemoService {
  // LogToken Generates a token to feed to other methods. Does not open or create a log
  rpc LogToken(LogToken.Request) returns (LogToken.Reply);

  // LogAdd Appends data to a log. Will create or open the log identified by the token
  rpc LogAdd(LogAdd.Request) returns (LogAdd.Reply);

  // LogGet Gets a log entry by cid. Will create or open the log identified by the token
  rpc LogGet(LogGet.Request) returns (LogGet.Reply);

  // LogList Fetches a list of operation that occurred on a log. Will create or open the log identified by the token
  rpc LogList(LogList.Request) returns (LogList.Reply);

  // LogStream Stream operations that occur on a log. Will create or open the log identified by the token
  rpc LogStream(LogStream.Request) returns (stream LogOperation);
}

message LogOperation {
  string name = 1;
  bytes value = 2;
  string cid = 3;
}

message LogStreamOptions {
  string GT = 1; // cid
  string GTE = 2; // cid
  string LT = 3; // cid
  string LTE = 4; // cid
  uint32 amount = 5;
}

message LogToken {
  message Request {

  }
  message Reply {
    string log_token = 1;
  }
}

message LogAdd {
  message Request {
    string log_token = 1;
    bytes data = 2;
  }
  message Reply {
    string cid = 1;
  }
}

message LogGet {
  message Request {
    string log_token = 1;
    string cid = 2;
  }
  message Reply {
    LogOperation operation = 1;
  }
}

message LogList {
  message Request {
    string log_token = 1;
    LogStreamOptions options = 2;
  }
  message Reply {
    repeated LogOperation operations = 1;
  }
}

message LogStream {
  message Request {
    string log_token = 1;
    LogStreamOptions options = 2;
  }
}
