syntax = "proto3";

package berty.account.v1;

import "gogoproto/gogo.proto";

import "pushtypes.proto";
import "protocoltypes.proto";
import "messengertypes.proto";

option go_package = "berty.tech/berty/go/pkg/accounttypes";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;

service AccountService {
  // OpenAccount starts a Berty node.
  rpc OpenAccount (OpenAccount.Request) returns (stream OpenAccount.Reply);

  // CloseAccount closes the currently opened account.
  rpc CloseAccount (CloseAccount.Request) returns (stream CloseAccount.Reply);

  // ListAccounts retrieves a list of local accounts.
  rpc ListAccounts (ListAccounts.Request) returns (ListAccounts.Reply);

  // DeleteAccount deletes an account.
  rpc DeleteAccount (DeleteAccount.Request) returns (DeleteAccount.Reply);

  // ImportAccount imports existing data.
  rpc ImportAccount (ImportAccount.Request) returns (stream ImportAccount.Reply);

  // CreateAccount creates a new account.
  rpc CreateAccount (CreateAccount.Request) returns (CreateAccount.Reply);

  // UpdateAccount update account's metadata.
  rpc UpdateAccount (UpdateAccount.Request) returns (UpdateAccount.Reply);

  // GetGRPCListenerAddrs return current listeners addrs available on this bridge.
  rpc GetGRPCListenerAddrs (GetGRPCListenerAddrs.Request) returns (GetGRPCListenerAddrs.Reply);

  // LogfileList returns a list of logfiles that can be used with Tyber.
  rpc LogfileList (LogfileList.Request) returns (LogfileList.Reply);

  // GetUsername returns the name of the device/user using Android/iOS/universal API
  rpc GetUsername (GetUsername.Request) returns (GetUsername.Reply);

  // NetworkConfigSet
  rpc NetworkConfigSet (NetworkConfigSet.Request) returns (NetworkConfigSet.Reply);

  // NetworkConfigGet
  rpc NetworkConfigGet (NetworkConfigGet.Request) returns (NetworkConfigGet.Reply);

  // NetworkConfigGetPreset
  rpc NetworkConfigGetPreset (NetworkConfigGetPreset.Request) returns (NetworkConfigGetPreset.Reply);

  // PushReceive
  rpc PushReceive (PushReceive.Request) returns (PushReceive.Reply);

  // PushPlatformTokenRegister
  rpc PushPlatformTokenRegister (PushPlatformTokenRegister.Request) returns (PushPlatformTokenRegister.Reply);

  // AppStoragePut puts a value by key in a storage secured by the device enclave if possible
  rpc AppStoragePut (AppStoragePut.Request) returns (AppStoragePut.Reply);

  // AppStorageGet gets a value by key in a storage secured by the device enclave if possible
  rpc AppStorageGet (AppStorageGet.Request) returns (AppStorageGet.Reply);

  // AppStorageRemove removes a value by key in a storage secured by the device enclave if possible
  rpc AppStorageRemove (AppStorageRemove.Request) returns (AppStorageRemove.Reply);
}

message AppStoragePut {
  message Request {
    string key = 1;
    bytes value = 2;
    bool global = 3;
  }
  message Reply {}
}

message AppStorageGet {
  message Request {
    string key = 1;
    bool global = 2;
  }
  message Reply {
    bytes value = 2;
  }
}

message AppStorageRemove {
  message Request {
    string key = 1;
    bool global = 2;
  }
  message Reply {}
}

message OpenAccount {
  message Request {
    repeated string args = 1;
    string account_id = 2 [(gogoproto.customname) = "AccountID"];
    string logger_filters = 3;

    // FIXME: move network_config to OpenProtocol
    berty.messenger.v1.NetworkConfig network_config = 4;
  }
  message Reply {
    berty.protocol.v1.Progress progress = 1;
  }
}

message CloseAccount {
  message Request {}
  message Reply {
    berty.protocol.v1.Progress progress = 1;
  }
}

message AccountMetadata {
  string account_id = 1 [(gogoproto.customname) = "AccountID"];
  string name = 2;
  string avatar_cid = 3 [(gogoproto.customname) = "AvatarCID"];
  string public_key = 4;
  int64 last_opened = 5;
  int64 creation_date = 6;
  string error = 7;
}

message ListAccounts {
  message Request {}
  message Reply {
    repeated AccountMetadata accounts = 1;
  }
}

message DeleteAccount {
  message Request {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
  }
  message Reply {
  }
}

message ImportAccount {
  message Request {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
    string account_name = 2;
    string backup_path = 3;
    repeated string args = 4;
    string logger_filters = 5;

    // FIXME: move network_config to OpenProtocol
    berty.messenger.v1.NetworkConfig network_config = 6;
  }
  message Reply {
    berty.protocol.v1.Progress progress = 1;
    AccountMetadata account_metadata = 2;
  }
}

message CreateAccount {
  message Request {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
    string account_name = 2;
    repeated string args = 3;
    string logger_filters = 4;

    // FIXME: move network_config to OpenProtocol
    berty.messenger.v1.NetworkConfig network_config = 5;
  }
  message Reply {
    AccountMetadata account_metadata = 1;
  }
}

message UpdateAccount {
  message Request {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
    string account_name = 2;
    string avatar_cid = 3 [(gogoproto.customname) = "AvatarCID"];
    string public_key = 4;
  }
  message Reply {
    AccountMetadata account_metadata = 1;
  }
}

message GetGRPCListenerAddrs {
  message Request {}
  message Reply {
    repeated Entry entries = 1;
    message Entry {
      string proto = 1;
      string maddr = 2;
    }
  }
}

message LogfileList {
  message Request {}
  message Reply {
    repeated Logfile entries = 1;

    message Logfile {
      string account_id = 1 [(gogoproto.customname) = "AccountID"];
      string name = 2;
      string path = 3;
      int64 size = 4;
      string kind = 5;
      int64 time = 6;
      bool latest = 7;
      string errs = 8;
    }
  }
}

message GetUsername {
  message Request {}
  message Reply {
    string username = 1;
  }
}



message NetworkConfigSet {
  message Request {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
    berty.messenger.v1.NetworkConfig config = 2;
  }
  message Reply {}
}

message NetworkConfigGet {
  message Request {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
  }
  message Reply {
    berty.messenger.v1.NetworkConfig default_config = 1;
    berty.messenger.v1.NetworkConfig current_config = 2;
    bool custom_config_exists = 3;
    repeated string default_bootstrap = 4;
    repeated string default_rendezvous = 5;
    repeated string default_static_relay = 6;
  }
}

message NetworkConfigGetPreset {
  message Request {
    berty.messenger.v1.NetworkConfig.Preset preset = 1;
    bool has_bluetooth_permission = 2;
  }
  message Reply {
    berty.messenger.v1.NetworkConfig config = 1;
  }
}

message PushReceive {
  message Request {
    string payload = 1;
    push.v1.PushServiceTokenType token_type = 2;
  }
  message Reply {
    push.v1.DecryptedPush push_data = 1;
    push.v1.FormatedPush push = 2;
  }
}

message PushPlatformTokenRegister {
  message Request {
    berty.protocol.v1.PushServiceReceiver receiver = 1;
  }
  message Reply {}
}
