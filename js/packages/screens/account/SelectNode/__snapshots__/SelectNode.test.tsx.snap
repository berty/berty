// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Account.SelectNode renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
          Object {
            "alignItems": "stretch",
            "flexDirection": "column",
            "justifyContent": "space-evenly",
          },
          Object {
            "padding": 16,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 30,
            },
            Object {
              "color": "#383B62",
              "fontFamily": "Open Sans",
            },
            Array [
              Object {
                "marginLeft": 16,
              },
              Object {
                "alignSelf": "center",
              },
              Object {
                "fontSize": 44,
                "lineHeight": 44,
              },
            ],
          ]
        }
      >
        settings.devtools.select-node.title
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 24,
          },
          Object {
            "marginHorizontal": 16,
          },
          Object {
            "backgroundColor": "white",
            "borderRadius": 14,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "justifyContent": "space-between",
            "opacity": 1,
            "padding": 12,
          }
        }
        testID="SelectNodeType"
      >
        <View
          style={
            Object {
              "width": "75%",
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 30,
                },
                Object {
                  "color": "#383B62",
                  "fontFamily": "Open Sans",
                },
                Array [
                  Object {
                    "marginLeft": 9,
                  },
                ],
              ]
            }
          >
            settings.devtools.select-node.node-type
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#EDF0F3",
              "borderColor": "#535AE4",
              "borderRadius": 30,
              "borderWidth": 1,
              "height": 27,
              "opacity": 1,
              "width": 50,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderRadius": 30,
                "height": 25,
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "width": 25,
              }
            }
          >
            <View
              style={
                Object {
                  "opacity": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <RNSVGMock
                  fill="#535AE4"
                  height={18}
                  viewBox="0 0 24 24"
                  width={18}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 24,
          },
          Object {
            "marginHorizontal": 16,
          },
          Object {
            "backgroundColor": "white",
            "borderRadius": 14,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 48,
            "justifyContent": "space-between",
            "opacity": 1,
            "padding": 12,
          }
        }
        testID="SelectNodeDontAsk"
      >
        <View
          style={
            Object {
              "width": "75%",
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 30,
                },
                Object {
                  "color": "#383B62",
                  "fontFamily": "Open Sans",
                },
                Array [
                  Object {
                    "marginLeft": 9,
                  },
                ],
              ]
            }
          >
            settings.devtools.select-node.dont-ask
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#EDF0F3",
              "borderColor": "#535AE4",
              "borderRadius": 30,
              "borderWidth": 1,
              "height": 27,
              "opacity": 1,
              "width": 50,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderRadius": 30,
                "height": 25,
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "width": 25,
              }
            }
          >
            <View
              style={
                Object {
                  "opacity": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <RNSVGMock
                  fill="#535AE4"
                  height={18}
                  viewBox="0 0 24 24"
                  width={18}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 40,
          },
          Object {
            "paddingVertical": 24,
          },
          Object {
            "marginBottom": 9,
          },
          Object {
            "backgroundColor": "#FFFFFF",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#EAEAFB",
            "borderRadius": 8,
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="SelectNodeContinue"
      >
        <Text
          style={
            Array [
              Object {
                "fontSize": 30,
              },
              Object {
                "color": "#383B62",
                "fontFamily": "Open Sans",
              },
              Array [
                Object {
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#535AE4",
                },
                Object {
                  "fontFamily": "Bold Open Sans",
                },
              ],
            ]
          }
        >
          settings.devtools.select-node.button-continue
        </Text>
        <View
          style={
            Object {
              "marginLeft": 9,
            }
          }
        >
          <View
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                ],
              }
            }
          >
            <RNSVGMock
              fill="#535AE4"
              height={25}
              viewBox="0 0 24 24"
              width={25}
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
