name: Berty
options:
  deploymentTarget:
    iOS: "12.0"
  usesTabs: false
  tabWidth: 2
  indentWidth: 2
  defaultConfig: Debug

include:
- targets.yaml

fileGroups:
  - Berty/main.jsbundle # required by react-native

configs:
  Debug: debug
  AppStore Release: release
  Staff Release: release
  Yolo Release: release

schemes:
  Berty Debug:
    build:
      parallelizeBuild: false
      targets:
        BertyPreview: all
    run:
      config: Debug
    archive:
      config: Debug
  Berty Staff:
    build:
      parallelizeBuild: false
      targets:
        BertyPreview: all
    run:
      config: Staff Release
    archive:
      config: Staff Release
  Berty Yolo:
    build:
      parallelizeBuild: false
      targets:
        BertyPreview: all
    run:
      config: Yolo Release
    archive:
      config: Yolo Release
  Berty AppStore:
    build:
      parallelizeBuild: false
      targets:
        Berty: all
    run:
      config: AppStore Release
    archive:
      config: AppStore Release

targetTemplates:
  BaseTarget:
    type: application
    platform: iOS
    entitlements:
      path: Berty/Berty.entitlements
      properties:
        com.apple.developer.associated-domains:
          - applinks:berty.tech
    settings:
      base:
        # base settings
        PRODUCT_NAME: Berty
        PRODUCT_IDENTIFIER: tech.berty.ios
        SWIFT_OBJC_BRIDGING_HEADER: Berty/Berty-Bridging-Header.h
        SWIFT_OBJC_INTERFACE_HEADER_NAME: Berty-Swift.h
        CODE_SIGN_STYLE: Automatic
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
        ONLY_ACTIVE_ARCH: true
        # build settings
        CLANG_ENABLE_MODULES: true
        OTHER_LDFLAGS:
        - $(inherited)
        - -ObjC
        - -lc++
        LD_RUNPATH_SEARCH_PATHS:
        - /usr/lib/swift
        - $(inherited)
        LIBRARY_SEARCH_PATHS:
        - $(SDKROOT)/usr/lib/swift
        - $(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)
        - $(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)
        - $(inherited)
        GCC_C_LANGUAGE_STANDARD: gnu99
        CLANG_CXX_LANGUAGE_STANDARD: gnu++0x
        CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: true
        CLANG_CXX_LIBRARY:
        ENABLE_BITCODE: false
        DEAD_CODE_STRIPPING: true

      configs:
        debug:
          COPY_PHASE_STRIP: false
          GCC_SYMBOLS_PRIVATE_EXTERN: false
          MTL_ENABLE_DEBUG_INFO: true
          GCC_PREPROCESSOR_DEFINITIONS:
          - $(inherited)
          - FB_SONARKIT_ENABLED=1
          - DEBUG=1
          - $(TARGET_GCC_PREPROCESSOR_DEFINITIONS)
        release:
          COPY_PHASE_STRIP: true
          MTL_ENABLE_DEBUG_INFO: false
          GCC_PREPROCESSOR_DEFINITIONS:
          - $(inherited)
          - $(TARGET_GCC_PREPROCESSOR_DEFINITIONS)

    sources:
    - Berty
    - path: ../assets/font
      name: Fonts
      group: Resources
    - path: ../assets/sound
      name: Sounds
      group: Resources
    dependencies:
    - framework: JavascriptCore.framework
      embed: false
      link: false
    - sdk: Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks/MultipeerConnectivity.framework
      root: DEVELOPER_DIR
      link: true
    - sdk: Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks/CoreBluetooth.framework
      root: DEVELOPER_DIR
      link: true
    - framework: ./Frameworks/Bertybridge.xcframework
      embed: false

    info:
      path: Berty/Info${target_name}.plist
      properties:
        ITSAppUsesNonExemptEncryption: false
        BGTaskSchedulerPermittedIdentifiers:
        - tech.berty.ios.task.gobridge-process
        - tech.berty.ios.task.gobridge-refresh
        CFBundleIconName: "${ASSETCATALOG_COMPILER_APPICON_NAME}"
        CFBundleVersion: "${IOS_BUNDLE_VERSION}"
        CFBundleShortVersionString: "${IOS_SHORT_BUNDLE_VERSION}"
        Commit: "${IOS_COMMIT}"
        CFBundleSignature:
        CFBundleURLTypes:
        - CFBundleTypeRole: Viewer
          CFBundleURLName: Berty
          CFBundleURLSchemes:
          - berty
        LSRequiresIPhoneOS: true
        NSAppTransportSecurity:
          NSAllowsArbitraryLoads: true
          NSExceptionDomains:
            localhost:
              NSExceptionAllowsInsecureHTTPLoads: true
        NSBluetoothAlwaysUsageDescription: Used for Bluetooth communications
        NSBluetoothPeripheralUsageDescription: Used for Bluetooth communications
        NSBonjourServices:
        - _berty-mc._tcp
        NSCameraUsageDescription: Used to scan QRCodes
        NSLocalNetworkUsageDescription: Used for proximity communications
        NSLocationWhenInUseUsageDescription: ""
        NSPhotoLibraryUsageDescription: Used to personalize the app and send photos
        NSMicrophoneUsageDescription: Used for voice recording
        UIAppFonts:
        - OpenSans-Bold.ttf
        - OpenSans-BoldItalic.ttf
        - OpenSans-ExtraBold.ttf
        - OpenSans-ExtraBoldItalic.ttf
        - OpenSans-Italic.ttf
        - OpenSans-Light.ttf
        - OpenSans-LightItalic.ttf
        - OpenSans-Regular.ttf
        - OpenSans-SemiBold.ttf
        - OpenSans-SemiBoldItalic.ttf
        - AntDesign.ttf
        - Entypo.ttf
        - EvilIcons.ttf
        - Feather.ttf
        - FontAwesome.ttf
        - FontAwesome5_Brands.ttf
        - FontAwesome5_Regular.ttf
        - FontAwesome5_Solid.ttf
        - Fontisto.ttf
        - Foundation.ttf
        - Ionicons.ttf
        - MaterialCommunityIcons.ttf
        - MaterialIcons.ttf
        - Octicons.ttf
        - SimpleLineIcons.ttf
        - Zocial.ttf
        UIBackgroundModes:
        - fetch
        - processing
        UILaunchStoryboardName: BootSplash
        UIRequiredDeviceCapabilities: [armv7]
        UISupportedInterfaceOrientations: [UIInterfaceOrientationPortrait]
        UISupportedInterfaceOrientations~ipad:
        - UIInterfaceOrientationPortrait
        - UIInterfaceOrientationLandscapeRight
        - UIInterfaceOrientationLandscapeLeft
        - UIInterfaceOrientationPortraitUpsideDown
        UIViewControllerBasedStatusBarAppearance: false

    preBuildScripts:
    - name: Start Packager
      showEnvVars: false
      script: |
        export RCT_METRO_PORT="${RCT_METRO_PORT:=8081}"
        echo "export RCT_METRO_PORT=${RCT_METRO_PORT}" > "${SRCROOT}/../node_modules/react-native/scripts/.packager.env"
        if [ -z "${RCT_NO_LAUNCH_PACKAGER+xxx}" ] ; then
          if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then
            if ! curl -s "http://localhost:${RCT_METRO_PORT}/status" | grep -q "packager-status:running" ; then
              echo "Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly"
              exit 2
            fi
          else
            open "$SRCROOT/../node_modules/react-native/scripts/launchPackager.command" || echo "Can't start packager automatically"
          fi
        fi

    postBuildScripts:
    - name: Bundle React Native code and images
      script: |
        export NODE_BINARY=node
        ../node_modules/react-native/scripts/react-native-xcode.sh
