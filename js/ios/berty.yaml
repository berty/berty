name: Berty

options:
  deploymentTarget:
    iOS: "12.0"
  usesTabs: false
  tabWidth: 2
  indentWidth: 2
  defaultConfig: Debug


fileGroups:
  - Berty/main.jsbundle # required by react-native

configs:
  Debug: debug
  AppStore Release: release
  Staff Release: release
  Yolo Release: release

schemes:
  Berty Debug:
    build:
      parallelizeBuild: false
      targets:
        Berty: all
    run:
      config: Debug
    archive:
      config: Debug
  Berty AppStore:
    build:
      parallelizeBuild: false
      targets:
        Berty: all
    run:
      config: AppStore Release
    archive:
      config: AppStore Release
  Berty Staff:
    build:
      parallelizeBuild: false
      targets:
        Berty: all
    run:
      config: Staff Release
    archive:
      config: Staff Release
  Berty Yolo:
    build:
      parallelizeBuild: false
      targets:
        Berty: all
    run:
      config: Yolo Release
    archive:
      config: Yolo Release

settings:
  base:
    ONLY_ACTIVE_ARCH: true
    SWIFT_OBJC_BRIDGING_HEADER: Berty/Berty-Bridging-Header.h
    CLANG_ENABLE_MODULES: true
    OTHER_LDFLAGS:
    - $(inherited)
    - -ObjC
    - -lc++
    LD_RUNPATH_SEARCH_PATHS:
    - /usr/lib/swift
    - $(inherited)
    LIBRARY_SEARCH_PATHS:
    - $(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)
    - $(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)
    - $(inherited)
    GCC_C_LANGUAGE_STANDARD: gnu99
    CLANG_CXX_LANGUAGE_STANDARD: gnu++0x
    CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: true
    CLANG_CXX_LIBRARY:
    ENABLE_BITCODE: false
    DEAD_CODE_STRIPPING: true
  configs:
    debug:
      COPY_PHASE_STRIP: false
      GCC_SYMBOLS_PRIVATE_EXTERN: false
      MTL_ENABLE_DEBUG_INFO: true
      GCC_PREPROCESSOR_DEFINITIONS:
      - $(inherited)
      - FB_SONARKIT_ENABLED=1
      - DEBUG=1
    release:
      COPY_PHASE_STRIP: true
      MTL_ENABLE_DEBUG_INFO: false
      GCC_PREPROCESSOR_DEFINITIONS:
      - $(inherited)

targets:
  Berty:
    type: application
    platform: iOS
    configFiles:
      Debug: Configs/Debug.xcconfig
      AppStore Release: Configs/AppStore.xcconfig
      Staff Release: Configs/Staff.xcconfig
      Yolo Release: Configs/Yolo.xcconfig
    settings:
      base:
        PRODUCT_NAME: Berty
        PRODUCT_IDENTIFIER: tech.berty.ios
        SWIFT_OBJC_BRIDGING_HEADER: Berty/Berty-Bridging-Header.h
        SWIFT_OBJC_INTERFACE_HEADER_NAME: Berty-Swift.h
        CODE_SIGN_STYLE: Automatic
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
      configs:
        Debug:
          DEVELOPMENT_TEAM: WMBQ84HN4T
          PRODUCT_NAME: Berty Debug
          PRODUCT_BUNDLE_IDENTIFIER: $(PRODUCT_IDENTIFIER).debug
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIconDebug
        AppStore:
          DEVELOPMENT_TEAM: WMBQ84HN4T
          PRODUCT_NAME: Berty
          PRODUCT_BUNDLE_IDENTIFIER: $(PRODUCT_IDENTIFIER)
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
        Staff:
          DEVELOPMENT_TEAM: WMBQ84HN4T
          PRODUCT_NAME: Berty Staff
          PRODUCT_BUNDLE_IDENTIFIER: $(PRODUCT_IDENTIFIER).staff
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIconStaff
        Yolo:
          DEVELOPMENT_TEAM: GR5463T564
          PRODUCT_NAME: Berty Yolo
          PRODUCT_BUNDLE_IDENTIFIER: $(PRODUCT_IDENTIFIER).yolo
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIconYolo


    sources:
    - Berty
    - path: ./Configs/GoogleService
      group: Configs
      buildPhase: none # will be added by a script
    - path: ../assets
      name: OpenSans
      group: Resources
    dependencies:
    - framework: JavascriptCore.framework
      embed: false
      link: false
    - sdk: Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks/MultipeerConnectivity.framework
      root: DEVELOPER_DIR
      link: true
    - sdk: Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks/CoreBluetooth.framework
      root: DEVELOPER_DIR
      link: true
    - framework: ./Frameworks/Bertybridge.framework
      embed: false

    preBuildScripts:
    - name: Copy GoogleService
      script: |
        PATH_TO_CONFIG=${SRCROOT}/Configs/GoogleService/GoogleService-Info-${PRODUCT_BUNDLE_IDENTIFIER}.plist
        FILENAME_IN_BUNDLE=GoogleService-Info.plist
        BUILD_APP_DIR=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app
        echo cp ${PATH_TO_CONFIG} "$BUILD_APP_DIR/${FILENAME_IN_BUNDLE}"
        cp ${PATH_TO_CONFIG} "${BUILD_APP_DIR}/${FILENAME_IN_BUNDLE}"

    - name: Start Packager
      script: |
        export RCT_METRO_PORT="${RCT_METRO_PORT:=8081}"
        echo "export RCT_METRO_PORT=${RCT_METRO_PORT}" > "${SRCROOT}/../node_modules/react-native/scripts/.packager.env"
        if [ -z "${RCT_NO_LAUNCH_PACKAGER+xxx}" ] ; then
          if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then
            if ! curl -s "http://localhost:${RCT_METRO_PORT}/status" | grep -q "packager-status:running" ; then
              echo "Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly"
              exit 2
            fi
          else
            open "$SRCROOT/../node_modules/react-native/scripts/launchPackager.command" || echo "Can't start packager automatically"
          fi
        fi
      showEnvVars: false

    postBuildScripts:
    - name: Bundle React Native code and images
      script: |
        export NODE_BINARY=node
        ../node_modules/react-native/scripts/react-native-xcode.sh
    - name: Setup Crashlitics
      script: "${PODS_ROOT}/FirebaseCrashlytics/run"

include:
- info.yaml
- entitlements.yaml
