export PWD = $(patsubst %/,%,$(dir $(abspath $(lastword $(MAKEFILE_LIST)))))
export PATH := $(PWD)/node_modules/.bin:$(PATH)

UNAME_S ?= $(shell uname -s)

ifeq ($(UNAME_S),Darwin)
export SHELL = /bin/bash
npm := /usr/local/bin/npm
pkg := $(shell find $(PWD)/packages -depth 1 -type d)
endif
ifeq ($(UNAME_S),Linux)
export SHELL = /usr/bin/bash
npm := /usr/bin/npm
pkg := $(shell find $(PWD)/packages -maxdepth 1 -type d)
endif
npm_flags := --no-progress

mod := $(PWD)/node_modules
bin := $(mod)/.bin

lerna := $(bin)/lerna
lerna_flags := --reject-cycles --concurrency=8
lerna_upgrade := $(bin)/upd
lerna_exec := $(lerna) $(lerna_flags) exec --stream --parallel --scope=$1 --

eslint := $(bin)/eslint

pkg := $(shell find $(PWD)/packages -depth 1 -type d)
pkg_mod := $(patsubst %, %/node_modules, $(pkg))

include packages/berty-app/Makefile
include packages/storybook-mobile/Makefile
include packages/storybook-web/Makefile
include packages/react-native-core/Makefile

.DEFAULT_GOAL := deps

.PHONY: bootstrap
deps: $(mod) $(pkg_mod)

$(mod) $(mod)/%: package.json
	$(npm) $(npm_flags) install
	$(lerna) $(lerna_flags) init
	touch $(mod)

print-%  : ; @echo $* = $($*)

.NOTPARALLEL: $(pkg_mod) $(pkg_mod)/%
$(pkg_mod)/%: $(mod) $(patsubst %,%/package.json,$(pkg))
	$(lerna) $(lerna_flags) bootstrap
	mkdir -p $(pkg_mod)
	touch $(pkg_mod) $@

.PHONY: npm
npm $(npm):
ifeq ($(UNAME_S),Darwin)
	brew install node
endif
ifeq ($(UNAME_S),Linux)
	apt-get install nodejs
endif

.PHONY: upgrade
upgrade: $(lerna_upgrade)
	$(lerna_upgrade)

.IGNORE \
.PHONY: clean
clean: clean
	$(lerna_exec) /bin/bash -c '[ ! -f Makefile ] || make clean'; \

.IGNORE \
.PHONY: fclean
fclean: fclean
	$(lerna_exec) /bin/bash -c '[ ! -f Makefile ] || make fclean'; \
	rm -rf \
		$(mod) \
		$(pkg_mod)

.PHONY: pkg
pkg: name ?= example
pkg: $(mod)
	lerna create @berty-tech/$(name) \
		--access restricted \
		--private \
		--license Apache-2.0 \
		--yes \

.PHONY: rnpkg
rnpkg: name ?= example
rnpkg: $(mod)
	cd packages && create-react-native-module \
		--platforms ios,android \
		--prefix Berty$(shell echo "$(name)" | caser --pascal $(name)) \
		--package-identifier tech.berty.$(name) \
		--license Apache-2.0 \
		--use-cocoapods \
		--github_account berty \
		--author-name 'Berty Technologies' \
		--author-email staff@berty.tech \
		$(name)
	rm -f packages/$(name)/README.md

.PHONY: lint
lint: export PWD := $(PWD)
lint: files = $(shell \
		find packages -type f -not -path '*/node_modules/*' \
		| grep -E '(\.js|\.jsx|\.ts|\.tsx)$$'\
	)
lint: deps
	$(eslint) $(options) $(files)

.PHONY: lint.fix
lint.fix: options += --fix
lint.fix: lint

.PHONY: lint.watch
lint.watch: options += --watch
lint.watch: lint
